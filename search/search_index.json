{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs \u00b6 For full documentation visit mkdocs.org . Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"Ubuntu%20%E5%AE%89%E8%A3%85%E5%90%8E%E7%9A%84%E9%85%8D%E7%BD%AE/","text":"Ubuntu \u5feb\u901f\u914d\u7f6e \u00b6 \u66f4\u65b0 \u00b6 apt update apt upgrade \u4e86\u89e3 apt \u548c apt-get \u7684\u533a\u522b\uff1a \u4e2d\u6587 \u82f1\u6587 \u5b89\u88c5 git \u00b6 apt install git \u5b89\u88c5 zsh \u00b6 apt install zsh \u5c06 zsh \u8bbe\u7f6e\u4e3a\u7cfb\u7edf\u9ed8\u8ba4 shell \u00b6 chsh -s /bin/zsh \u5b89\u88c5 curl \u00b6 apt install curl \u5b89\u88c5 oh-my-zsh \u00b6 sh -c \" $( curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh ) \" \u5b89\u88c5 oh-my-zsh \u524d\u8981\u5b89\u88c5\u597d zsh\u3001curl\u3001git \u5b89\u88c5 neofetch \u00b6 apt install neofetch \u81ea\u52a8\u5316\u811a\u672c \u00b6 #!/bin/bash # \u6267\u884c\u547d\u4ee4\u524d\u8f93\u51fa\u6253\u5370\u547d\u4ee4 set -x # \u66f4\u65b0 apt update echo y | apt upgrade # \u5b89\u88c5 git apt -y install git # \u5b89\u88c5 curl apt -y install curl # \u5b89\u88c5 zsh \u5e76\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4 shell apt -y install zsh & chsh -s $( which zsh ) # \u5b89\u88c5 oh-my-zsh sh -c \" $( curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh ) \" \"\" --unattended # \u5b89\u88c5 neofetch apt -y install neofetch","title":"Ubuntu \u5feb\u901f\u914d\u7f6e"},{"location":"Ubuntu%20%E5%AE%89%E8%A3%85%E5%90%8E%E7%9A%84%E9%85%8D%E7%BD%AE/#ubuntu","text":"","title":"Ubuntu \u5feb\u901f\u914d\u7f6e"},{"location":"Ubuntu%20%E5%AE%89%E8%A3%85%E5%90%8E%E7%9A%84%E9%85%8D%E7%BD%AE/#_1","text":"apt update apt upgrade \u4e86\u89e3 apt \u548c apt-get \u7684\u533a\u522b\uff1a \u4e2d\u6587 \u82f1\u6587","title":"\u66f4\u65b0"},{"location":"Ubuntu%20%E5%AE%89%E8%A3%85%E5%90%8E%E7%9A%84%E9%85%8D%E7%BD%AE/#git","text":"apt install git","title":"\u5b89\u88c5 git"},{"location":"Ubuntu%20%E5%AE%89%E8%A3%85%E5%90%8E%E7%9A%84%E9%85%8D%E7%BD%AE/#zsh","text":"apt install zsh","title":"\u5b89\u88c5 zsh"},{"location":"Ubuntu%20%E5%AE%89%E8%A3%85%E5%90%8E%E7%9A%84%E9%85%8D%E7%BD%AE/#zsh-shell","text":"chsh -s /bin/zsh","title":"\u5c06 zsh \u8bbe\u7f6e\u4e3a\u7cfb\u7edf\u9ed8\u8ba4 shell"},{"location":"Ubuntu%20%E5%AE%89%E8%A3%85%E5%90%8E%E7%9A%84%E9%85%8D%E7%BD%AE/#curl","text":"apt install curl","title":"\u5b89\u88c5 curl"},{"location":"Ubuntu%20%E5%AE%89%E8%A3%85%E5%90%8E%E7%9A%84%E9%85%8D%E7%BD%AE/#oh-my-zsh","text":"sh -c \" $( curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh ) \" \u5b89\u88c5 oh-my-zsh \u524d\u8981\u5b89\u88c5\u597d zsh\u3001curl\u3001git","title":"\u5b89\u88c5 oh-my-zsh"},{"location":"Ubuntu%20%E5%AE%89%E8%A3%85%E5%90%8E%E7%9A%84%E9%85%8D%E7%BD%AE/#neofetch","text":"apt install neofetch","title":"\u5b89\u88c5 neofetch"},{"location":"Ubuntu%20%E5%AE%89%E8%A3%85%E5%90%8E%E7%9A%84%E9%85%8D%E7%BD%AE/#_2","text":"#!/bin/bash # \u6267\u884c\u547d\u4ee4\u524d\u8f93\u51fa\u6253\u5370\u547d\u4ee4 set -x # \u66f4\u65b0 apt update echo y | apt upgrade # \u5b89\u88c5 git apt -y install git # \u5b89\u88c5 curl apt -y install curl # \u5b89\u88c5 zsh \u5e76\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4 shell apt -y install zsh & chsh -s $( which zsh ) # \u5b89\u88c5 oh-my-zsh sh -c \" $( curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh ) \" \"\" --unattended # \u5b89\u88c5 neofetch apt -y install neofetch","title":"\u81ea\u52a8\u5316\u811a\u672c"},{"location":"Android/Compose%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98/","text":"1. \u793a\u4f8b\u4ecb\u7ecd \u00b6 \u672c\u6587\u793a\u4f8b\u6e90\u4ee3\u7801 \u6211\u4eec\u901a\u8fc7 #AndroidDevChallange \u6311\u6218\u8d5b\u7b2c\u4e09\u5468\u9898\u76ee\u4f5c\u4e3a\u793a\u4f8b\u6765\u770b\u770b\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u5982\u4f55\u8fdb\u884c\u5e94\u7528\u3002\u5728\u4e0d\u540c\u4e3b\u9898\u65b9\u6848\u4e0b\u80cc\u666f\u989c\u8272\u3001\u6587\u5b57\u989c\u8272\u4e0e\u56fe\u7247\u8d44\u6e90\u90fd\u662f\u4e0d\u540c\u7684\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\u5bf9\u4e8e\u6240\u6709\u6587\u672c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e3b\u9898\u5b8c\u6210\u5b57\u4f53\u6837\u5f0f\u7684\u914d\u7f6e\uff0c\u6240\u8981\u5b9e\u73b0\u7684\u76ee\u6807\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002 2. \u914d\u7f6e\u989c\u8272\u6837\u5f0f \u00b6 \u9996\u5148\uff0c\u6211\u4eec\u6765\u5b66\u4e60\u5982\u4f55\u914d\u7f6e\u989c\u8272\u6837\u5f0f\uff0c\u4ec5\u9700\u8981\u6839\u636e\u4e3b\u9898\u7684\u4e0d\u540c\u751f\u6210\u5176\u5bf9\u5e94\u7684 colors \u5373\u53ef\u3002\u6839\u636e\u9879\u76ee\u9700\u6c42\uff0c\u6211\u4eec\u8fdb\u884c\u4ee5\u4e0b\u7684\u914d\u7f6e\u3002 private val BloomLightColorPaltte = lightColors ( primary = pink100 , secondary = pink900 , background = white , surface = white850 , onPrimary = gray , onSecondary = white , onBackground = gray , onSurface = gray , ) private val BloomDarkColorPaltte = darkColors ( primary = green900 , secondary = green300 , background = gray , surface = white150 , onPrimary = white , onSecondary = gray , onBackground = white , onSurface = white850 ) @Composable fun BloomTheme ( theme : BloomTheme = BloomTheme . LIGHT , content : @Composable () () -> Unit ) { CompositionLocalProvider ( LocalWelcomeAssets provides if ( theme == BloomTheme . DARK ) WelcomeAssets . DarkWelcomeAssets else WelcomeAssets . LightWelcomeAssets , ) { MaterialTheme ( colors = if ( theme == BloomTheme . DARK ) BloomDarkColorPaltte else BloomLightColorPaltte , typography = Typography , shapes = shapes , content = content ) } } \u5728\u6211\u4eec\u7684\u89c6\u56fe\u6240\u9700\u8981 Color \u7684\u5730\u65b9\u914d\u7f6e\u5373\u53ef\u3002 Text ( text = \"Beautiful home garden solutions\" , textAlign = TextAlign . Center , color = MaterialTheme . colors . onPrimary // I'm here ) 3. \u914d\u7f6e\u5b57\u4f53\u6837\u5f0f \u00b6 \u6211\u4eec\u63a5\u7740\u6765\u5b66\u4e60\u5982\u4f55\u914d\u7f6e\u5b57\u4f53\u6837\u5f0f\u3002MaterialTheme \u65b9\u6cd5\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570 typography \u8868\u793a\u7684\u5c31\u662f\u6240\u914d\u7f6e\u7684\u5b57\u4f53\uff0c\u53ea\u662f\u8fd9\u4e2a Typography \u662f Android Studio \u9ed8\u8ba4\u5e2e\u4f60\u914d\u5236\u7684\u3002 MaterialTheme ( colors = colors , typography = Typography , shapes = Shapes , content = content ) \u5982\u679c\u662f\u65b0\u5efa\u7684\u9879\u76ee\uff0cAndroid Studio \u4f1a\u5728 ui.theme \u5305\u4e0b\u751f\u6210 Type.kt\uff0c\u5176\u4e2d\u5305\u542b\u4e86 Typography \u7684\u5b9e\u73b0\uff0c\u540d\u4e3a Typography \u7684\u53d8\u91cf\u95f4\u63a5\u8c03\u7528 Typography \u7c7b\u6784\u9020\u51fd\u6570\u3002 val Typography = Typography ( body1 = TextStyle ( fontFamily = FontFamily . Default , fontWeight = FontWeight . Normal , fontSize = 16. sp ) ) \u518d\u56de\u5230 MaterialTheme \u5b9e\u73b0\uff0c\u53ef\u4ee5\u53d1\u73b0 typography \u63d0\u4f9b\u7ed9 LocalTypography \u8fd9\u4e2a CompositionLocal \u5b9e\u4f8b\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u9879\u76ee\u4e2d\u5982\u4f55\u4f7f\u7528\u8fd9\u4e2a\u7279\u6b8a\u5b57\u4f53\u4e5f\u4e0d\u9700\u8981\u989d\u5916\u7684\u4ecb\u7ecd\u4e86\uff0c\u8fd9\u4e0e colors \u662f\u5b8c\u5168\u4e00\u6837\u7684\u3002 @Composable fun MaterialTheme ( colors : Colors = MaterialTheme . colors , typography : Typography = MaterialTheme . typography , shapes : Shapes = MaterialTheme . shapes , content : @Composable () -> Unit ) { val rememberedColors = remember { colors . copy () }. apply { updateColorsFrom ( colors ) } val rippleIndication = rememberRipple () val selectionColors = rememberTextSelectionColors ( rememberedColors ) CompositionLocalProvider ( LocalColors provides rememberedColors , LocalContentAlpha provides ContentAlpha . high , LocalIndication provides rippleIndication , LocalRippleTheme provides MaterialRippleTheme , LocalShapes provides shapes , LocalTextSelectionColors provides selectionColors , LocalTypography provides typography // I'm here~ ) { ProvideTextStyle ( value = typography . body1 , content = content ) } } \u65e2\u7136\u61c2\u5f97\u4e86\u539f\u7406\uff0c\u6211\u4eec\u4ec5\u9700\u8981\u6839\u636e\u9879\u76ee\u5b9e\u9645\u9700\u6c42\u914d\u7f6e\u5b57\u4f53\u6837\u5f0f\u5373\u53ef\uff0c\u65e2\u7136 Android Studio \u5e2e\u52a9\u751f\u6210 Type.kt\uff0c\u8bf4\u660e\u662f\u5b98\u65b9\u5e0c\u671b\u6211\u4eec\u5c06\u5b57\u4f53\u6837\u5f0f\u914d\u7f6e\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u7684\u3002\u8fd9\u662f\u4e00\u79cd\u89c4\u8303\uff0c\u4f46\u4e5f\u53ef\u4e0d\u9075\u5b88\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\u7531\u4e8e\u6bcf\u79cd\u5b57\u4f53\u90fd\u4f1a\u6709\u4e0d\u540c\u7684\u7c97\u7ec6\u98ce\u683c\uff0c\u6211\u4eec\u5728\u5b57\u4f53\u6837\u5f0f\u914d\u7f6e\u65f6\u9700\u8981\u6307\u660e\u5b57\u4f53\u79cd\u7c7b\u4e0e\u7c97\u7ec6\u98ce\u683c\u3002 val nunitoSansFamily = FontFamily ( Font ( R . font . nunitosans_light , FontWeight . Light ), Font ( R . font . nunitosans_semibold , FontWeight . SemiBold ), Font ( R . font . nunitosans_bold , FontWeight . Bold ) ) val bloomTypography = Typography ( h1 = TextStyle ( fontSize = 18. sp , fontFamily = nunitoSansFamily , fontWeight = FontWeight . Bold ), h2 = TextStyle ( fontSize = 14. sp , letterSpacing = 0.15 . sp , fontFamily = nunitoSansFamily , fontWeight = FontWeight . Bold ), .... ) \u4f7f\u7528\u7684\u8bdd\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u4ec5\u9700\u5c06\u5b57\u4f53\u6837\u5f0f\u4f20\u5165 MaterialTheme \u5373\u53ef\u3002 @Composable fun BloomTheme ( theme : BloomTheme = BloomTheme . LIGHT , content : @Composable () () -> Unit ) { MaterialTheme ( colors = if ( theme == BloomTheme . DARK ) BloomDarkColorPaltte else BloomLightColorPaltte , typography = bloomTypoGraphy , shapes = shapes , content = content ) } \u5728\u6211\u4eec\u7684\u89c6\u56fe\u7ec4\u4ef6\u4e2d\u4f7f\u7528 style \u53c2\u6570\u8fdb\u884c\u914d\u7f6e\u5373\u53ef\u3002 Text ( text = \"Beautiful home garden solutions\" , textAlign = TextAlign . Center , style = MaterialTheme . typography . subtitle1 , // I'm here color = MaterialTheme . colors . onPrimary ) 4. \u914d\u7f6e\u81ea\u5b9a\u4e49\u8d44\u6e90 \u00b6 \u6709\u65f6\u6211\u4eec\u53ef\u80fd\u9700\u8981\u6839\u636e\u4e3b\u9898\u7684\u4e0d\u540c\u4f7f\u7528\u4e0d\u540c\u7684\u591a\u5a92\u4f53\u8d44\u6e90\uff0c\u4f8b\u5982\u56fe\u7247\u3001\u89c6\u9891\u3001\u97f3\u9891\u7b49\u7b49\u3002\u901a\u8fc7\u67e5\u9605 MaterialTheme \u53c2\u6570\u5217\u8868\u6211\u4eec\u6ca1\u6709\u53d1\u73b0\u53ef\u4ee5\u8fdb\u884c\u914d\u7f6e\u7684\u53c2\u6570\u3002\u96be\u9053 Jetpack Compose \u4e0d\u5177\u5907\u8fd9\u6837\u7684\u80fd\u529b\uff1f\u7b54\u6848\u5f53\u7136\u662f\u5426\u5b9a\u7684\uff0cAndroid \u56e2\u961f\u5df2\u7ecf\u5145\u5206\u8003\u8651\u4e86\u5404\u79cd\u573a\u666f\uff0c\u53ea\u662f\u9488\u5bf9\u4e8e\u8fd9\u79cd\u9700\u6c42\u800c\u8a00\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u989d\u5916\u7684\u5b9a\u5236\u6269\u5c55\u3002\u5c31\u662f\u901a\u8fc7\u5b9a\u5236 CompositionLocal \u65b9\u5f0f\u6765\u5b9e\u73b0\u56fe\u7247\u8d44\u6e90\u7684\u6269\u5c55\uff0c\u6839\u636e\u4e3b\u9898\u7684\u4e0d\u540c\u9009\u7528\u5176\u5bf9\u5e94\u7684\u591a\u5a92\u4f53\u8d44\u6e90\u3002 open class WelcomeAssets private constructor ( var background : Int , var illos : Int , var logo : Int ) { object LightWelcomeAssets : WelcomeAssets ( background = R . drawable . ic_light_welcome_bg , illos = R . drawable . ic_light_welcome_illos , logo = R . drawable . ic_light_logo ) object DarkWelcomeAssets : WelcomeAssets ( background = R . drawable . ic_dark_welcome_bg , illos = R . drawable . ic_dark_welcome_illos , logo = R . drawable . ic_dark_logo ) } internal var LocalWelcomeAssets = staticCompositionLocalOf { WelcomeAssets . LightWelcomeAssets as WelcomeAssets } \u4e8e\u6b64\u540c\u65f6\uff0c\u6211\u4eec\u8fd8\u5e0c\u671b\u80fd\u591f\u5728\u89c6\u56fe\u4e2d\u4ecd\u901a\u8fc7 MaterialTheme \u6765\u8bbf\u95ee\u6211\u4eec\u7684\u56fe\u7247\u8d44\u6e90\uff0c\u90a3\u4e48\u5219\u53ef\u4ee5\u901a\u8fc7 Kotlin \u6269\u5c55\u5c5e\u6027\u7684\u7279\u6027\u8fdb\u884c\u5b9e\u73b0(\u6269\u5c55\u5c5e\u6027\u662f\u6ca1\u6709\u5e55\u540e\u5b57\u6bb5\u7684\uff0c\u53ea\u80fd\u59d4\u6258\u5176\u4ed6\u5b9e\u4f8b)\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cCompositionLocal \u53ea\u80fd\u5728 composable(\u5e26\u6709 Composable \u6ce8\u89e3\u7684 lambda)\u4e2d\u4f7f\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e3a\u8fd9\u4e2a\u5c5e\u6027\u83b7\u53d6\u6dfb\u52a0 @Composable \u4e0e @ReadOnlyComposable \u6ce8\u89e3\u3002 val MaterialTheme . welcomeAssets @Composable @ReadOnlyComposable get () = LocalWelcomeAssets . current \u8fd9\u6837\u6211\u4eec\u5728\u89c6\u56fe\u4e2d\u5c31\u53ef\u4ee5\u4ecd\u7136\u901a\u8fc7 MaterialTheme \u6765\u83b7\u53d6\u6269\u5c55\u7684\u56fe\u7247\u8d44\u6e90\u4e86\u3002 Image ( painter = rememberVectorPainter ( image = ImageVector . vectorResource ( id = MaterialTheme . welcomeAssets . background )), contentDescription = \"weclome_bg\" , modifier = Modifier . fillMaxSize () ) \u65e2\u7136\u4e86\u89e3\u4e86\u56fe\u7247\u7684\u4e3b\u9898\u914d\u7f6e\uff0c\u5176\u4ed6\u591a\u5a92\u4f53\u8d44\u6e90\u7684\u4e3b\u9898\u914d\u7f6e\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u8bf7\u5145\u5206\u53d1\u6325\u4f60\u7684\u60f3\u8c61\u529b\u3002","title":"Compose\u81ea\u5b9a\u4e49\u4e3b\u9898"},{"location":"Android/Compose%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98/#1","text":"\u672c\u6587\u793a\u4f8b\u6e90\u4ee3\u7801 \u6211\u4eec\u901a\u8fc7 #AndroidDevChallange \u6311\u6218\u8d5b\u7b2c\u4e09\u5468\u9898\u76ee\u4f5c\u4e3a\u793a\u4f8b\u6765\u770b\u770b\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u5982\u4f55\u8fdb\u884c\u5e94\u7528\u3002\u5728\u4e0d\u540c\u4e3b\u9898\u65b9\u6848\u4e0b\u80cc\u666f\u989c\u8272\u3001\u6587\u5b57\u989c\u8272\u4e0e\u56fe\u7247\u8d44\u6e90\u90fd\u662f\u4e0d\u540c\u7684\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\u5bf9\u4e8e\u6240\u6709\u6587\u672c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e3b\u9898\u5b8c\u6210\u5b57\u4f53\u6837\u5f0f\u7684\u914d\u7f6e\uff0c\u6240\u8981\u5b9e\u73b0\u7684\u76ee\u6807\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002","title":"1. \u793a\u4f8b\u4ecb\u7ecd"},{"location":"Android/Compose%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98/#2","text":"\u9996\u5148\uff0c\u6211\u4eec\u6765\u5b66\u4e60\u5982\u4f55\u914d\u7f6e\u989c\u8272\u6837\u5f0f\uff0c\u4ec5\u9700\u8981\u6839\u636e\u4e3b\u9898\u7684\u4e0d\u540c\u751f\u6210\u5176\u5bf9\u5e94\u7684 colors \u5373\u53ef\u3002\u6839\u636e\u9879\u76ee\u9700\u6c42\uff0c\u6211\u4eec\u8fdb\u884c\u4ee5\u4e0b\u7684\u914d\u7f6e\u3002 private val BloomLightColorPaltte = lightColors ( primary = pink100 , secondary = pink900 , background = white , surface = white850 , onPrimary = gray , onSecondary = white , onBackground = gray , onSurface = gray , ) private val BloomDarkColorPaltte = darkColors ( primary = green900 , secondary = green300 , background = gray , surface = white150 , onPrimary = white , onSecondary = gray , onBackground = white , onSurface = white850 ) @Composable fun BloomTheme ( theme : BloomTheme = BloomTheme . LIGHT , content : @Composable () () -> Unit ) { CompositionLocalProvider ( LocalWelcomeAssets provides if ( theme == BloomTheme . DARK ) WelcomeAssets . DarkWelcomeAssets else WelcomeAssets . LightWelcomeAssets , ) { MaterialTheme ( colors = if ( theme == BloomTheme . DARK ) BloomDarkColorPaltte else BloomLightColorPaltte , typography = Typography , shapes = shapes , content = content ) } } \u5728\u6211\u4eec\u7684\u89c6\u56fe\u6240\u9700\u8981 Color \u7684\u5730\u65b9\u914d\u7f6e\u5373\u53ef\u3002 Text ( text = \"Beautiful home garden solutions\" , textAlign = TextAlign . Center , color = MaterialTheme . colors . onPrimary // I'm here )","title":"2. \u914d\u7f6e\u989c\u8272\u6837\u5f0f"},{"location":"Android/Compose%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98/#3","text":"\u6211\u4eec\u63a5\u7740\u6765\u5b66\u4e60\u5982\u4f55\u914d\u7f6e\u5b57\u4f53\u6837\u5f0f\u3002MaterialTheme \u65b9\u6cd5\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570 typography \u8868\u793a\u7684\u5c31\u662f\u6240\u914d\u7f6e\u7684\u5b57\u4f53\uff0c\u53ea\u662f\u8fd9\u4e2a Typography \u662f Android Studio \u9ed8\u8ba4\u5e2e\u4f60\u914d\u5236\u7684\u3002 MaterialTheme ( colors = colors , typography = Typography , shapes = Shapes , content = content ) \u5982\u679c\u662f\u65b0\u5efa\u7684\u9879\u76ee\uff0cAndroid Studio \u4f1a\u5728 ui.theme \u5305\u4e0b\u751f\u6210 Type.kt\uff0c\u5176\u4e2d\u5305\u542b\u4e86 Typography \u7684\u5b9e\u73b0\uff0c\u540d\u4e3a Typography \u7684\u53d8\u91cf\u95f4\u63a5\u8c03\u7528 Typography \u7c7b\u6784\u9020\u51fd\u6570\u3002 val Typography = Typography ( body1 = TextStyle ( fontFamily = FontFamily . Default , fontWeight = FontWeight . Normal , fontSize = 16. sp ) ) \u518d\u56de\u5230 MaterialTheme \u5b9e\u73b0\uff0c\u53ef\u4ee5\u53d1\u73b0 typography \u63d0\u4f9b\u7ed9 LocalTypography \u8fd9\u4e2a CompositionLocal \u5b9e\u4f8b\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u9879\u76ee\u4e2d\u5982\u4f55\u4f7f\u7528\u8fd9\u4e2a\u7279\u6b8a\u5b57\u4f53\u4e5f\u4e0d\u9700\u8981\u989d\u5916\u7684\u4ecb\u7ecd\u4e86\uff0c\u8fd9\u4e0e colors \u662f\u5b8c\u5168\u4e00\u6837\u7684\u3002 @Composable fun MaterialTheme ( colors : Colors = MaterialTheme . colors , typography : Typography = MaterialTheme . typography , shapes : Shapes = MaterialTheme . shapes , content : @Composable () -> Unit ) { val rememberedColors = remember { colors . copy () }. apply { updateColorsFrom ( colors ) } val rippleIndication = rememberRipple () val selectionColors = rememberTextSelectionColors ( rememberedColors ) CompositionLocalProvider ( LocalColors provides rememberedColors , LocalContentAlpha provides ContentAlpha . high , LocalIndication provides rippleIndication , LocalRippleTheme provides MaterialRippleTheme , LocalShapes provides shapes , LocalTextSelectionColors provides selectionColors , LocalTypography provides typography // I'm here~ ) { ProvideTextStyle ( value = typography . body1 , content = content ) } } \u65e2\u7136\u61c2\u5f97\u4e86\u539f\u7406\uff0c\u6211\u4eec\u4ec5\u9700\u8981\u6839\u636e\u9879\u76ee\u5b9e\u9645\u9700\u6c42\u914d\u7f6e\u5b57\u4f53\u6837\u5f0f\u5373\u53ef\uff0c\u65e2\u7136 Android Studio \u5e2e\u52a9\u751f\u6210 Type.kt\uff0c\u8bf4\u660e\u662f\u5b98\u65b9\u5e0c\u671b\u6211\u4eec\u5c06\u5b57\u4f53\u6837\u5f0f\u914d\u7f6e\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u7684\u3002\u8fd9\u662f\u4e00\u79cd\u89c4\u8303\uff0c\u4f46\u4e5f\u53ef\u4e0d\u9075\u5b88\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\u7531\u4e8e\u6bcf\u79cd\u5b57\u4f53\u90fd\u4f1a\u6709\u4e0d\u540c\u7684\u7c97\u7ec6\u98ce\u683c\uff0c\u6211\u4eec\u5728\u5b57\u4f53\u6837\u5f0f\u914d\u7f6e\u65f6\u9700\u8981\u6307\u660e\u5b57\u4f53\u79cd\u7c7b\u4e0e\u7c97\u7ec6\u98ce\u683c\u3002 val nunitoSansFamily = FontFamily ( Font ( R . font . nunitosans_light , FontWeight . Light ), Font ( R . font . nunitosans_semibold , FontWeight . SemiBold ), Font ( R . font . nunitosans_bold , FontWeight . Bold ) ) val bloomTypography = Typography ( h1 = TextStyle ( fontSize = 18. sp , fontFamily = nunitoSansFamily , fontWeight = FontWeight . Bold ), h2 = TextStyle ( fontSize = 14. sp , letterSpacing = 0.15 . sp , fontFamily = nunitoSansFamily , fontWeight = FontWeight . Bold ), .... ) \u4f7f\u7528\u7684\u8bdd\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u4ec5\u9700\u5c06\u5b57\u4f53\u6837\u5f0f\u4f20\u5165 MaterialTheme \u5373\u53ef\u3002 @Composable fun BloomTheme ( theme : BloomTheme = BloomTheme . LIGHT , content : @Composable () () -> Unit ) { MaterialTheme ( colors = if ( theme == BloomTheme . DARK ) BloomDarkColorPaltte else BloomLightColorPaltte , typography = bloomTypoGraphy , shapes = shapes , content = content ) } \u5728\u6211\u4eec\u7684\u89c6\u56fe\u7ec4\u4ef6\u4e2d\u4f7f\u7528 style \u53c2\u6570\u8fdb\u884c\u914d\u7f6e\u5373\u53ef\u3002 Text ( text = \"Beautiful home garden solutions\" , textAlign = TextAlign . Center , style = MaterialTheme . typography . subtitle1 , // I'm here color = MaterialTheme . colors . onPrimary )","title":"3. \u914d\u7f6e\u5b57\u4f53\u6837\u5f0f"},{"location":"Android/Compose%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98/#4","text":"\u6709\u65f6\u6211\u4eec\u53ef\u80fd\u9700\u8981\u6839\u636e\u4e3b\u9898\u7684\u4e0d\u540c\u4f7f\u7528\u4e0d\u540c\u7684\u591a\u5a92\u4f53\u8d44\u6e90\uff0c\u4f8b\u5982\u56fe\u7247\u3001\u89c6\u9891\u3001\u97f3\u9891\u7b49\u7b49\u3002\u901a\u8fc7\u67e5\u9605 MaterialTheme \u53c2\u6570\u5217\u8868\u6211\u4eec\u6ca1\u6709\u53d1\u73b0\u53ef\u4ee5\u8fdb\u884c\u914d\u7f6e\u7684\u53c2\u6570\u3002\u96be\u9053 Jetpack Compose \u4e0d\u5177\u5907\u8fd9\u6837\u7684\u80fd\u529b\uff1f\u7b54\u6848\u5f53\u7136\u662f\u5426\u5b9a\u7684\uff0cAndroid \u56e2\u961f\u5df2\u7ecf\u5145\u5206\u8003\u8651\u4e86\u5404\u79cd\u573a\u666f\uff0c\u53ea\u662f\u9488\u5bf9\u4e8e\u8fd9\u79cd\u9700\u6c42\u800c\u8a00\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u989d\u5916\u7684\u5b9a\u5236\u6269\u5c55\u3002\u5c31\u662f\u901a\u8fc7\u5b9a\u5236 CompositionLocal \u65b9\u5f0f\u6765\u5b9e\u73b0\u56fe\u7247\u8d44\u6e90\u7684\u6269\u5c55\uff0c\u6839\u636e\u4e3b\u9898\u7684\u4e0d\u540c\u9009\u7528\u5176\u5bf9\u5e94\u7684\u591a\u5a92\u4f53\u8d44\u6e90\u3002 open class WelcomeAssets private constructor ( var background : Int , var illos : Int , var logo : Int ) { object LightWelcomeAssets : WelcomeAssets ( background = R . drawable . ic_light_welcome_bg , illos = R . drawable . ic_light_welcome_illos , logo = R . drawable . ic_light_logo ) object DarkWelcomeAssets : WelcomeAssets ( background = R . drawable . ic_dark_welcome_bg , illos = R . drawable . ic_dark_welcome_illos , logo = R . drawable . ic_dark_logo ) } internal var LocalWelcomeAssets = staticCompositionLocalOf { WelcomeAssets . LightWelcomeAssets as WelcomeAssets } \u4e8e\u6b64\u540c\u65f6\uff0c\u6211\u4eec\u8fd8\u5e0c\u671b\u80fd\u591f\u5728\u89c6\u56fe\u4e2d\u4ecd\u901a\u8fc7 MaterialTheme \u6765\u8bbf\u95ee\u6211\u4eec\u7684\u56fe\u7247\u8d44\u6e90\uff0c\u90a3\u4e48\u5219\u53ef\u4ee5\u901a\u8fc7 Kotlin \u6269\u5c55\u5c5e\u6027\u7684\u7279\u6027\u8fdb\u884c\u5b9e\u73b0(\u6269\u5c55\u5c5e\u6027\u662f\u6ca1\u6709\u5e55\u540e\u5b57\u6bb5\u7684\uff0c\u53ea\u80fd\u59d4\u6258\u5176\u4ed6\u5b9e\u4f8b)\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cCompositionLocal \u53ea\u80fd\u5728 composable(\u5e26\u6709 Composable \u6ce8\u89e3\u7684 lambda)\u4e2d\u4f7f\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e3a\u8fd9\u4e2a\u5c5e\u6027\u83b7\u53d6\u6dfb\u52a0 @Composable \u4e0e @ReadOnlyComposable \u6ce8\u89e3\u3002 val MaterialTheme . welcomeAssets @Composable @ReadOnlyComposable get () = LocalWelcomeAssets . current \u8fd9\u6837\u6211\u4eec\u5728\u89c6\u56fe\u4e2d\u5c31\u53ef\u4ee5\u4ecd\u7136\u901a\u8fc7 MaterialTheme \u6765\u83b7\u53d6\u6269\u5c55\u7684\u56fe\u7247\u8d44\u6e90\u4e86\u3002 Image ( painter = rememberVectorPainter ( image = ImageVector . vectorResource ( id = MaterialTheme . welcomeAssets . background )), contentDescription = \"weclome_bg\" , modifier = Modifier . fillMaxSize () ) \u65e2\u7136\u4e86\u89e3\u4e86\u56fe\u7247\u7684\u4e3b\u9898\u914d\u7f6e\uff0c\u5176\u4ed6\u591a\u5a92\u4f53\u8d44\u6e90\u7684\u4e3b\u9898\u914d\u7f6e\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u8bf7\u5145\u5206\u53d1\u6325\u4f60\u7684\u60f3\u8c61\u529b\u3002","title":"4. \u914d\u7f6e\u81ea\u5b9a\u4e49\u8d44\u6e90"},{"location":"Kotlin/DSL/","text":"DSL \u00b6 DSL \u7684\u5168\u79f0\u662f\u9886\u57df\u7279\u5b9a\u8bed\u8a00\uff08Domain Specific Language\uff09\uff0c\u5b83\u662f\u7f16\u7a0b\u8bed\u8a00\u8d4b\u4e88\u5f00\u53d1\u8005\u7684\u4e00\u79cd\u7279\u6b8a\u80fd\u529b\uff0c\u901a\u8fc7\u5b83\u6211\u4eec\u53ef\u4ee5\u7f16\u5199\u51fa\u4e00\u4e9b\u770b\u4f3c\u8131\u79bb\u5176\u539f\u59cb\u8bed\u6cd5\u7ed3\u6784\u7684\u4ee3\u7801\uff0c\u4ece\u800c\u6784\u5efa\u51fa\u4e00\u79cd\u4e13\u6709\u7684\u8bed\u6cd5\u7ed3\u6784\u3002 \u5728 Kotlin \u4e2d\u5b9e\u73b0 DSL \u7684\u5b9e\u73b0\u65b9\u5f0f\u5e76\u4e0d\u56fa\u5b9a\uff0c\u4f7f\u7528 infix \u51fd\u6570\u6784\u5efa\u51fa\u7684\u7279\u6709\u8bed\u6cd5\u7ed3\u6784\u5c31\u5c5e\u4e8e DSL\u3002\u4e0d\u7ba1\u4f60\u6709\u6ca1\u6709\u5bdf\u89c9\u5230\uff0c\u5176\u5b9e\u957f\u4e45\u4ee5\u6765\u4f60\u4e00\u76f4\u90fd\u5728\u4f7f\u7528 DSL\u3002\u6bd4\u5982\u8981\u5728\u9879\u76ee\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u4f9d\u8d56\u5e93\uff0c\u9700\u8981\u5728 build.gradle \u6587\u4ef6\u4e2d\u7f16\u5199\u5982\u4e0b\u5185\u5bb9\uff1a dependencies { implementation ' ... ' implementation ' ... ' } Gradle \u662f\u4e00\u79cd\u57fa\u4e8e Groovy \u8bed\u8a00\u7684\u6784\u5efa\u5de5\u5177\uff0c\u56e0\u6b64\u4e0a\u8ff0\u7684\u8bed\u6cd5\u7ed3\u6784\u5176\u5b9e\u5c31\u662f Groovy \u63d0\u4f9b\u7684 DSL \u529f\u80fd\u3002\u501f\u52a9 Kotlin \u7684 DSL\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u4f3c\u7684\u8bed\u6cd5\u7ed3\u6784\uff1a class Dependency { val libraries = ArrayList < String > () fun implementation ( lib : String ) { libraries . add ( lib ) } } fun dependencies ( block : Dependency .() -> Unit ): List < String > { val dependency = Dependency () dependency . block () return dependency . libraries } \u9996\u5148\u65b0\u5efa\u4e00\u4e2a Dependency \u7c7b\uff0c\u4f7f\u7528\u4e86\u4e00\u4e2a List \u96c6\u5408\u6765\u4fdd\u5b58\u6240\u6709\u7684\u4f9d\u8d56\u5e93\uff0c\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a implementation() \u65b9\u6cd5\uff0c\u7528\u4e8e\u5411 List \u96c6\u5408\u4e2d\u6dfb\u52a0\u4f9d\u8d56\u5e93\u3002\u63a5\u4e0b\u6765\u5b9a\u4e49\u4e00\u4e2a dependencies \u9ad8\u9636\u51fd\u6570\uff0c\u63a5\u6536\u4e00\u4e2a\u5b9a\u4e49\u5230 Dependency \u7c7b\u91cc\u9762\u7684\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff0c\u56e0\u6b64\u8c03\u7528\u5b83\u7684\u65f6\u5019\u9700\u8981\u5148\u521b\u5efa\u4e00\u4e2a Dependency \u7684\u5b9e\u4f8b\uff0c\u7136\u540e\u518d\u901a\u8fc7\u8be5\u5b9e\u4f8b\u8c03\u7528\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff0c\u4ece\u800c\u4f7f\u4f20\u5165\u7684 Lambda \u8868\u8fbe\u5f0f\u5f97\u5230\u6267\u884c\u3002\u6700\u540e\u5c06 Dependency \u7c7b\u4e2d\u4fdd\u5b58\u7684\u4f9d\u8d56\u5e93\u96c6\u5408\u8fd4\u56de\u3002 \u7ecf\u8fc7\u8fd9\u6837\u7684 DSL \u8bbe\u8ba1\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u9879\u76ee\u4e2d\u4f7f\u7528\u5982\u4e0b\u7684\u8bed\u6cd5\u7ed3\u6784\u4e86\uff1a dependencies { implementation ( \"...\" ) implementation ( \"...\" ) } \u7531\u4e8e dependencies \u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff0c\u56e0\u6b64\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a Lambda \u8868\u8fbe\u5f0f\u3002\u800c\u6b64\u65f6\u7684 Lambda \u8868\u8fbe\u5f0f\u4e2d\u62e5\u6709 Dependency \u7c7b\u7684\u4e0a\u4e0b\u6587\uff0c\u56e0\u6b64\u5f53\u7136\u5c31\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 Dependency \u7c7b\u4e2d\u7684 implementation() \u65b9\u6cd5\u6765\u6dfb\u52a0\u4f9d\u8d56\u5e93\u4e86\u3002 \u5b9e\u6218 \u00b6 < table > < tr > < td > A </ td > < td > B </ td > < td > C </ td > </ tr > < tr > < td > X </ td > < td > Y </ td > < td > Z </ td > </ tr > </ table > \u8fd9\u6bb5\u4ee3\u7801\u4f1a\u521b\u5efa\u51fa\u4e00\u4e2a\u4e24\u884c\u4e09\u5217\u7684\u8868\u683c\u3002\u5982\u679c\u73b0\u5728\u6709\u4e00\u4e2a\u9700\u6c42\uff0c\u8981\u6c42\u6211\u4eec\u5728 Kotlin \u4e2d\u52a8\u6001\u751f\u6210\u8868\u683c\u6240\u5bf9\u5e94\u7684 HTML \u4ee3\u7801\uff0c\u6700\u7b80\u5355\u76f4\u63a5\u7684\u65b9\u5f0f\u5c31\u662f\u5b57\u7b26\u4e32\u62fc\u63a5\u4e86\uff0c\u4f46\u662f\u8fd9\u79cd\u505a\u6cd5\u663e\u7136\u5341\u5206\u70e6\u7410\uff0c\u800c\u4e14\u5b57\u7b26\u4e32\u62fc\u63a5\u7684\u4ee3\u7801\u4e5f\u96be\u4ee5\u9605\u8bfb\u3002\u5982\u4f55\u501f\u52a9 DSL \u4ee5\u4e00\u79cd\u4e0d\u53ef\u601d\u8bae\u7684\u8bed\u6cd5\u7ed3\u6784\u6765\u52a8\u6001\u751f\u6210\u8868\u683c\u6240\u5bf9\u5e94\u7684 HTML \u4ee3\u7801\u5462\uff1f \u6a21\u62df\u4e0a\u9762\u5b9e\u73b0\u7684 dependencies { implementation (\"...\") } \u8bed\u6cd5\uff0c\u52a8\u6001\u751f\u6210\u8868\u683c HTML \u4ee3\u7801\uff0c\u662f\u5426\u80fd\u50cf\u4e0b\u9762\u8fd9\u4e48\u5199\u5462\uff1f table { \u8fd9\u91cc\u5e94\u8be5\u62e5\u6709 Table \u5bf9\u8c61\u7684\u4e0a\u4e0b\u6587\u73af\u5883 tr { \u8fd9\u91cc\u5e94\u8be5\u62e5\u6709 Tr \u5bf9\u8c61\u7684\u4e0a\u4e0b\u6587\u73af\u5883 td { \"A\" } td { \"B\" } td { \"C\" } } tr { td { \"X\" } td { \"Y\" } td { \"Z\" } } } \u6211\u4eec\u7531\u5185\u800c\u5916\u6765\u5206\u6790\u4e00\u4e0b\u4ee3\u7801\uff0c\u9996\u5148\uff0c td { \"A\" } \u80af\u5b9a\u662f\u4f1a\u751f\u6210\u4e00\u4e2a Td \u5bf9\u8c61\uff0c\u800c\u4e14\u662f\u5728\u8c03\u7528\u9ad8\u9636\u51fd\u6570 tr \u4f20\u5165\u7684 lambda \u8868\u8fbe\u5f0f\u4e2d\u8c03\u7528\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a lambda \u8868\u8fbe\u5f0f\u5e94\u8be5\u662f\u62e5\u6709 Tr \u7684\u4e0a\u4e0b\u6587\uff0c\u8c03\u7528\u591a\u4e2a td { \"...\" } \u5c31\u610f\u5473\u7740\u521b\u5efa\u591a\u4e2a Td \u5bf9\u8c61\u5e76\u628a\u5b83\u4eec\u90fd\u52a0\u5165\u5230\u4e0a\u4e0b\u6587\u5bf9\u8c61 Tr \u91cc\u9762\u3002 \u540c\u7406\uff0c\u5728\u8c03\u7528\u9ad8\u9636\u51fd\u6570 table \u65f6\uff0c\u4f20\u5165\u7684 lambda \u8868\u8fbe\u5f0f\u591a\u6b21\u8c03\u7528 tr { ... } \uff0c\u8fd9\u4e2a lambda \u8868\u8fbe\u5f0f\u91cc\u5e94\u8be5\u662f\u62e5\u6709 Table \u4e0a\u4e0b\u6587\u7684\uff0c\u591a\u6b21\u8c03\u7528 tr { ... } \u5c31\u610f\u5473\u7740\u521b\u5efa\u591a\u4e2a Tr \u5bf9\u8c61\u5e76\u6dfb\u52a0\u5230\u4e0a\u4e0b\u6587\u5bf9\u8c61 Table \u91cc\u9762\u3002 \u597d\uff0c\u5206\u6790\u5b8c\u4e86\u6211\u4eec\u5f00\u59cb\u52a8\u624b\uff1a class Td ( private val content : String ) { fun html () = \"<td> $ content </td>\" } class Tr { private val children = ArrayList < Td > () fun td ( block : () -> String ) { val td = Td ( block ()) children . add ( td ) } fun html (): String { val builder = StringBuilder () builder . append ( \"<tr>\" ) for ( td in children ){ builder . append ( td . html ()) } builder . append ( \"</tr>\" ) return builder . toString () } } \u5148\u521b\u5efa Td \u7c7b\uff0c\u53ef\u4ee5\u4f20\u5165\u5355\u5143\u683c\u5185\u5bb9\u5b57\u7b26\u4e32\u6765\u5b9e\u4f8b\u5316\u4e00\u4e2a Td \u5bf9\u8c61\uff0c\u8fd8\u521b\u5efa\u4e86\u4e00\u4e2a html() \u65b9\u6cd5\u7528\u4e8e\u8fd4\u56de HTML \u4ee3\u7801\u3002 Tr \u7c7b\u590d\u6742\u4e00\u70b9\u3002\u7531\u4e8e <tr> \u6807\u7b7e\u53ef\u4ee5\u5305\u542b\u591a\u4e2a <td> \u6807\u7b7e\uff0c\u56e0\u6b64\u5148\u521b\u5efa\u4e86\u4e00\u4e2a children \u96c6\u5408\uff0c\u7528\u4e8e\u5b58\u50a8\u5f53\u524d Tr \u6240\u5305\u542b\u7684 Td \u5bf9\u8c61\u3002\u63a5\u4e0b\u6765\u63d0\u4f9b\u4e86\u4e00\u4e2a td() \u51fd\u6570\uff0c\u5b83\u63a5\u6536\u4e00\u4e2a\u8fd4\u56de\u503c\u662f String \u7684\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u3002\u5f53\u8c03\u7528 td() \u51fd\u6570\u65f6\uff0c\u4f1a\u5229\u7528\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u8fd4\u56de\u7684 String \u6765\u521b\u5efa\u4e00\u4e2a Td \u5bf9\u8c61\uff0c\u7136\u540e\u5c06\u5b83\u6dfb\u52a0\u5230 children \u96c6\u5408\u4e2d\uff0c\u6b64\u5916\u8fd8\u6709\u4e00\u4e2a html() \u65b9\u6cd5\u4e5f\u662f\u7528\u4e8e\u8fd4\u56de HTML \u4ee3\u7801\uff0c\u4e0d\u5fc5\u591a\u8bf4\u3002 \u73b0\u5728\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u7684\u8bed\u6cd5\u683c\u5f0f\u6765\u6784\u5efa\u8868\u683c\u4e2d\u7684\u4e00\u884c\u6570\u636e\uff1a val tr = Tr () tr . td { \"A\" } tr . td { \"B\" } tr . td { \"C\" } \u597d\u50cf\u5df2\u7ecf\u6709\u90a3\u4e48\u56de\u4e8b\u4e86\uff0c\u4f46\u8fd9\u4ecd\u7136\u4e0d\u662f\u6211\u4eec\u8ffd\u6c42\u7684\u6700\u7ec8\u6548\u679c\uff0c\u6211\u4eec\u7ee7\u7eed\uff1a class Table { private val children = ArrayList < Tr > () fun tr ( block : Tr .() -> Unit ) { val tr = Tr () tr . block () children . add ( tr ) } fun html (): String { val builder = StringBuilder () builder . append ( \"<table>\" ) for ( tr in children ){ builder . append ( tr . html ()) } builder . append ( \"</table>\" ) return builder . toString () } } \u548c\u521a\u624d Tr \u7c7b\u4e2d\u7684\u4ee3\u7801\u662f\u6bd4\u8f83\u76f8\u4f3c\u3002Table \u7c7b\u4e2d\u540c\u6837\u521b\u5efa\u4e86\u4e00\u4e2a children \u96c6\u5408\uff0c\u7528\u4e8e\u5b58\u50a8\u5f53\u524d Table \u6240\u5305\u542b\u7684 Tr \u5bf9\u8c61\u3002\u7136\u540e\u5b9a\u4e49\u4e86\u4e00\u4e2a tr() \u51fd\u6570\uff0c\u63a5\u6536\u4e00\u4e2a\u5b9a\u4e49\u5230 Tr \u7c7b\u4e2d\u7684\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u3002\u8c03\u7528 tr() \u51fd\u6570\u65f6\uff0c\u4f1a\u5148\u521b\u5efa\u4e00\u4e2a Tr \u5bf9\u8c61\u5e76\u7528\u5b83\u6765\u8c03\u7528\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u3002\u5c06\u521b\u5efa\u7684 Tr \u5bf9\u8c61\u6dfb\u52a0\u5230 children \u96c6\u5408\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u7684\u8bed\u6cd5\u7ed3\u6784\u6765\u6784\u5efa\u4e00\u4e2a\u8868\u683c\u4e86\uff1a val table = Table () table . tr { td { \"A\" } td { \"B\" } td { \"C\" } } table . tr { td { \"X\" } td { \"Y\" } td { \"Z\" } } \u8fd9\u6bb5\u4ee3\u7801\u770b\u4e0a\u53bb\u5df2\u7ecf\u76f8\u5f53\u4e0d\u9519\u4e86\uff0c\u4e0d\u8fc7\u548c\u9884\u671f\u7684\u76ee\u6807\u4ecd\u6709\u5dee\u8ddd\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u518d\u8fdb\u4e00\u6b65\u5bf9\u8bed\u6cd5\u7ed3\u6784\u8fdb\u884c\u7cbe\u7b80\uff1a fun table ( block : Table .() -> Unit ): String { val table = Table () table . block () return table . html () } table() \u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u5b9a\u4e49\u5230 Table \u7c7b\u4e2d\u7684\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff0c\u8c03\u7528 table() \u51fd\u6570\u65f6\uff0c\u5148\u521b\u5efa\u4e00\u4e2a Table \u5bf9\u8c61\u5e76\u7528\u5b83\u6765\u8c03\u7528\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u3002\u6700\u540e\u8fd4\u56de Table \u7684 html() \u65b9\u6cd5\u751f\u6210\u7684 HTML \u4ee3\u7801\u3002 \u73b0\u5728\u6211\u4eec\u7ec8\u4e8e\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u795e\u5947\u7684\u8bed\u6cd5\u7ed3\u6784\u6765\u52a8\u6001\u751f\u6210\u4e00\u4e2a\u8868\u683c\u6240\u5bf9\u5e94\u7684 HTML \u4ee3\u7801\u4e86\uff1a fun main () { val html = table { tr { td { \"A\" } td { \"B\" } td { \"C\" } } tr { td { \"X\" } td { \"Y\" } td { \"Z\" } } } println ( html ) }","title":"DSL"},{"location":"Kotlin/DSL/#dsl","text":"DSL \u7684\u5168\u79f0\u662f\u9886\u57df\u7279\u5b9a\u8bed\u8a00\uff08Domain Specific Language\uff09\uff0c\u5b83\u662f\u7f16\u7a0b\u8bed\u8a00\u8d4b\u4e88\u5f00\u53d1\u8005\u7684\u4e00\u79cd\u7279\u6b8a\u80fd\u529b\uff0c\u901a\u8fc7\u5b83\u6211\u4eec\u53ef\u4ee5\u7f16\u5199\u51fa\u4e00\u4e9b\u770b\u4f3c\u8131\u79bb\u5176\u539f\u59cb\u8bed\u6cd5\u7ed3\u6784\u7684\u4ee3\u7801\uff0c\u4ece\u800c\u6784\u5efa\u51fa\u4e00\u79cd\u4e13\u6709\u7684\u8bed\u6cd5\u7ed3\u6784\u3002 \u5728 Kotlin \u4e2d\u5b9e\u73b0 DSL \u7684\u5b9e\u73b0\u65b9\u5f0f\u5e76\u4e0d\u56fa\u5b9a\uff0c\u4f7f\u7528 infix \u51fd\u6570\u6784\u5efa\u51fa\u7684\u7279\u6709\u8bed\u6cd5\u7ed3\u6784\u5c31\u5c5e\u4e8e DSL\u3002\u4e0d\u7ba1\u4f60\u6709\u6ca1\u6709\u5bdf\u89c9\u5230\uff0c\u5176\u5b9e\u957f\u4e45\u4ee5\u6765\u4f60\u4e00\u76f4\u90fd\u5728\u4f7f\u7528 DSL\u3002\u6bd4\u5982\u8981\u5728\u9879\u76ee\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u4f9d\u8d56\u5e93\uff0c\u9700\u8981\u5728 build.gradle \u6587\u4ef6\u4e2d\u7f16\u5199\u5982\u4e0b\u5185\u5bb9\uff1a dependencies { implementation ' ... ' implementation ' ... ' } Gradle \u662f\u4e00\u79cd\u57fa\u4e8e Groovy \u8bed\u8a00\u7684\u6784\u5efa\u5de5\u5177\uff0c\u56e0\u6b64\u4e0a\u8ff0\u7684\u8bed\u6cd5\u7ed3\u6784\u5176\u5b9e\u5c31\u662f Groovy \u63d0\u4f9b\u7684 DSL \u529f\u80fd\u3002\u501f\u52a9 Kotlin \u7684 DSL\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u4f3c\u7684\u8bed\u6cd5\u7ed3\u6784\uff1a class Dependency { val libraries = ArrayList < String > () fun implementation ( lib : String ) { libraries . add ( lib ) } } fun dependencies ( block : Dependency .() -> Unit ): List < String > { val dependency = Dependency () dependency . block () return dependency . libraries } \u9996\u5148\u65b0\u5efa\u4e00\u4e2a Dependency \u7c7b\uff0c\u4f7f\u7528\u4e86\u4e00\u4e2a List \u96c6\u5408\u6765\u4fdd\u5b58\u6240\u6709\u7684\u4f9d\u8d56\u5e93\uff0c\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a implementation() \u65b9\u6cd5\uff0c\u7528\u4e8e\u5411 List \u96c6\u5408\u4e2d\u6dfb\u52a0\u4f9d\u8d56\u5e93\u3002\u63a5\u4e0b\u6765\u5b9a\u4e49\u4e00\u4e2a dependencies \u9ad8\u9636\u51fd\u6570\uff0c\u63a5\u6536\u4e00\u4e2a\u5b9a\u4e49\u5230 Dependency \u7c7b\u91cc\u9762\u7684\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff0c\u56e0\u6b64\u8c03\u7528\u5b83\u7684\u65f6\u5019\u9700\u8981\u5148\u521b\u5efa\u4e00\u4e2a Dependency \u7684\u5b9e\u4f8b\uff0c\u7136\u540e\u518d\u901a\u8fc7\u8be5\u5b9e\u4f8b\u8c03\u7528\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff0c\u4ece\u800c\u4f7f\u4f20\u5165\u7684 Lambda \u8868\u8fbe\u5f0f\u5f97\u5230\u6267\u884c\u3002\u6700\u540e\u5c06 Dependency \u7c7b\u4e2d\u4fdd\u5b58\u7684\u4f9d\u8d56\u5e93\u96c6\u5408\u8fd4\u56de\u3002 \u7ecf\u8fc7\u8fd9\u6837\u7684 DSL \u8bbe\u8ba1\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u9879\u76ee\u4e2d\u4f7f\u7528\u5982\u4e0b\u7684\u8bed\u6cd5\u7ed3\u6784\u4e86\uff1a dependencies { implementation ( \"...\" ) implementation ( \"...\" ) } \u7531\u4e8e dependencies \u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff0c\u56e0\u6b64\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a Lambda \u8868\u8fbe\u5f0f\u3002\u800c\u6b64\u65f6\u7684 Lambda \u8868\u8fbe\u5f0f\u4e2d\u62e5\u6709 Dependency \u7c7b\u7684\u4e0a\u4e0b\u6587\uff0c\u56e0\u6b64\u5f53\u7136\u5c31\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 Dependency \u7c7b\u4e2d\u7684 implementation() \u65b9\u6cd5\u6765\u6dfb\u52a0\u4f9d\u8d56\u5e93\u4e86\u3002","title":"DSL"},{"location":"Kotlin/DSL/#_1","text":"< table > < tr > < td > A </ td > < td > B </ td > < td > C </ td > </ tr > < tr > < td > X </ td > < td > Y </ td > < td > Z </ td > </ tr > </ table > \u8fd9\u6bb5\u4ee3\u7801\u4f1a\u521b\u5efa\u51fa\u4e00\u4e2a\u4e24\u884c\u4e09\u5217\u7684\u8868\u683c\u3002\u5982\u679c\u73b0\u5728\u6709\u4e00\u4e2a\u9700\u6c42\uff0c\u8981\u6c42\u6211\u4eec\u5728 Kotlin \u4e2d\u52a8\u6001\u751f\u6210\u8868\u683c\u6240\u5bf9\u5e94\u7684 HTML \u4ee3\u7801\uff0c\u6700\u7b80\u5355\u76f4\u63a5\u7684\u65b9\u5f0f\u5c31\u662f\u5b57\u7b26\u4e32\u62fc\u63a5\u4e86\uff0c\u4f46\u662f\u8fd9\u79cd\u505a\u6cd5\u663e\u7136\u5341\u5206\u70e6\u7410\uff0c\u800c\u4e14\u5b57\u7b26\u4e32\u62fc\u63a5\u7684\u4ee3\u7801\u4e5f\u96be\u4ee5\u9605\u8bfb\u3002\u5982\u4f55\u501f\u52a9 DSL \u4ee5\u4e00\u79cd\u4e0d\u53ef\u601d\u8bae\u7684\u8bed\u6cd5\u7ed3\u6784\u6765\u52a8\u6001\u751f\u6210\u8868\u683c\u6240\u5bf9\u5e94\u7684 HTML \u4ee3\u7801\u5462\uff1f \u6a21\u62df\u4e0a\u9762\u5b9e\u73b0\u7684 dependencies { implementation (\"...\") } \u8bed\u6cd5\uff0c\u52a8\u6001\u751f\u6210\u8868\u683c HTML \u4ee3\u7801\uff0c\u662f\u5426\u80fd\u50cf\u4e0b\u9762\u8fd9\u4e48\u5199\u5462\uff1f table { \u8fd9\u91cc\u5e94\u8be5\u62e5\u6709 Table \u5bf9\u8c61\u7684\u4e0a\u4e0b\u6587\u73af\u5883 tr { \u8fd9\u91cc\u5e94\u8be5\u62e5\u6709 Tr \u5bf9\u8c61\u7684\u4e0a\u4e0b\u6587\u73af\u5883 td { \"A\" } td { \"B\" } td { \"C\" } } tr { td { \"X\" } td { \"Y\" } td { \"Z\" } } } \u6211\u4eec\u7531\u5185\u800c\u5916\u6765\u5206\u6790\u4e00\u4e0b\u4ee3\u7801\uff0c\u9996\u5148\uff0c td { \"A\" } \u80af\u5b9a\u662f\u4f1a\u751f\u6210\u4e00\u4e2a Td \u5bf9\u8c61\uff0c\u800c\u4e14\u662f\u5728\u8c03\u7528\u9ad8\u9636\u51fd\u6570 tr \u4f20\u5165\u7684 lambda \u8868\u8fbe\u5f0f\u4e2d\u8c03\u7528\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a lambda \u8868\u8fbe\u5f0f\u5e94\u8be5\u662f\u62e5\u6709 Tr \u7684\u4e0a\u4e0b\u6587\uff0c\u8c03\u7528\u591a\u4e2a td { \"...\" } \u5c31\u610f\u5473\u7740\u521b\u5efa\u591a\u4e2a Td \u5bf9\u8c61\u5e76\u628a\u5b83\u4eec\u90fd\u52a0\u5165\u5230\u4e0a\u4e0b\u6587\u5bf9\u8c61 Tr \u91cc\u9762\u3002 \u540c\u7406\uff0c\u5728\u8c03\u7528\u9ad8\u9636\u51fd\u6570 table \u65f6\uff0c\u4f20\u5165\u7684 lambda \u8868\u8fbe\u5f0f\u591a\u6b21\u8c03\u7528 tr { ... } \uff0c\u8fd9\u4e2a lambda \u8868\u8fbe\u5f0f\u91cc\u5e94\u8be5\u662f\u62e5\u6709 Table \u4e0a\u4e0b\u6587\u7684\uff0c\u591a\u6b21\u8c03\u7528 tr { ... } \u5c31\u610f\u5473\u7740\u521b\u5efa\u591a\u4e2a Tr \u5bf9\u8c61\u5e76\u6dfb\u52a0\u5230\u4e0a\u4e0b\u6587\u5bf9\u8c61 Table \u91cc\u9762\u3002 \u597d\uff0c\u5206\u6790\u5b8c\u4e86\u6211\u4eec\u5f00\u59cb\u52a8\u624b\uff1a class Td ( private val content : String ) { fun html () = \"<td> $ content </td>\" } class Tr { private val children = ArrayList < Td > () fun td ( block : () -> String ) { val td = Td ( block ()) children . add ( td ) } fun html (): String { val builder = StringBuilder () builder . append ( \"<tr>\" ) for ( td in children ){ builder . append ( td . html ()) } builder . append ( \"</tr>\" ) return builder . toString () } } \u5148\u521b\u5efa Td \u7c7b\uff0c\u53ef\u4ee5\u4f20\u5165\u5355\u5143\u683c\u5185\u5bb9\u5b57\u7b26\u4e32\u6765\u5b9e\u4f8b\u5316\u4e00\u4e2a Td \u5bf9\u8c61\uff0c\u8fd8\u521b\u5efa\u4e86\u4e00\u4e2a html() \u65b9\u6cd5\u7528\u4e8e\u8fd4\u56de HTML \u4ee3\u7801\u3002 Tr \u7c7b\u590d\u6742\u4e00\u70b9\u3002\u7531\u4e8e <tr> \u6807\u7b7e\u53ef\u4ee5\u5305\u542b\u591a\u4e2a <td> \u6807\u7b7e\uff0c\u56e0\u6b64\u5148\u521b\u5efa\u4e86\u4e00\u4e2a children \u96c6\u5408\uff0c\u7528\u4e8e\u5b58\u50a8\u5f53\u524d Tr \u6240\u5305\u542b\u7684 Td \u5bf9\u8c61\u3002\u63a5\u4e0b\u6765\u63d0\u4f9b\u4e86\u4e00\u4e2a td() \u51fd\u6570\uff0c\u5b83\u63a5\u6536\u4e00\u4e2a\u8fd4\u56de\u503c\u662f String \u7684\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u3002\u5f53\u8c03\u7528 td() \u51fd\u6570\u65f6\uff0c\u4f1a\u5229\u7528\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u8fd4\u56de\u7684 String \u6765\u521b\u5efa\u4e00\u4e2a Td \u5bf9\u8c61\uff0c\u7136\u540e\u5c06\u5b83\u6dfb\u52a0\u5230 children \u96c6\u5408\u4e2d\uff0c\u6b64\u5916\u8fd8\u6709\u4e00\u4e2a html() \u65b9\u6cd5\u4e5f\u662f\u7528\u4e8e\u8fd4\u56de HTML \u4ee3\u7801\uff0c\u4e0d\u5fc5\u591a\u8bf4\u3002 \u73b0\u5728\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u7684\u8bed\u6cd5\u683c\u5f0f\u6765\u6784\u5efa\u8868\u683c\u4e2d\u7684\u4e00\u884c\u6570\u636e\uff1a val tr = Tr () tr . td { \"A\" } tr . td { \"B\" } tr . td { \"C\" } \u597d\u50cf\u5df2\u7ecf\u6709\u90a3\u4e48\u56de\u4e8b\u4e86\uff0c\u4f46\u8fd9\u4ecd\u7136\u4e0d\u662f\u6211\u4eec\u8ffd\u6c42\u7684\u6700\u7ec8\u6548\u679c\uff0c\u6211\u4eec\u7ee7\u7eed\uff1a class Table { private val children = ArrayList < Tr > () fun tr ( block : Tr .() -> Unit ) { val tr = Tr () tr . block () children . add ( tr ) } fun html (): String { val builder = StringBuilder () builder . append ( \"<table>\" ) for ( tr in children ){ builder . append ( tr . html ()) } builder . append ( \"</table>\" ) return builder . toString () } } \u548c\u521a\u624d Tr \u7c7b\u4e2d\u7684\u4ee3\u7801\u662f\u6bd4\u8f83\u76f8\u4f3c\u3002Table \u7c7b\u4e2d\u540c\u6837\u521b\u5efa\u4e86\u4e00\u4e2a children \u96c6\u5408\uff0c\u7528\u4e8e\u5b58\u50a8\u5f53\u524d Table \u6240\u5305\u542b\u7684 Tr \u5bf9\u8c61\u3002\u7136\u540e\u5b9a\u4e49\u4e86\u4e00\u4e2a tr() \u51fd\u6570\uff0c\u63a5\u6536\u4e00\u4e2a\u5b9a\u4e49\u5230 Tr \u7c7b\u4e2d\u7684\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u3002\u8c03\u7528 tr() \u51fd\u6570\u65f6\uff0c\u4f1a\u5148\u521b\u5efa\u4e00\u4e2a Tr \u5bf9\u8c61\u5e76\u7528\u5b83\u6765\u8c03\u7528\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u3002\u5c06\u521b\u5efa\u7684 Tr \u5bf9\u8c61\u6dfb\u52a0\u5230 children \u96c6\u5408\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u7684\u8bed\u6cd5\u7ed3\u6784\u6765\u6784\u5efa\u4e00\u4e2a\u8868\u683c\u4e86\uff1a val table = Table () table . tr { td { \"A\" } td { \"B\" } td { \"C\" } } table . tr { td { \"X\" } td { \"Y\" } td { \"Z\" } } \u8fd9\u6bb5\u4ee3\u7801\u770b\u4e0a\u53bb\u5df2\u7ecf\u76f8\u5f53\u4e0d\u9519\u4e86\uff0c\u4e0d\u8fc7\u548c\u9884\u671f\u7684\u76ee\u6807\u4ecd\u6709\u5dee\u8ddd\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u518d\u8fdb\u4e00\u6b65\u5bf9\u8bed\u6cd5\u7ed3\u6784\u8fdb\u884c\u7cbe\u7b80\uff1a fun table ( block : Table .() -> Unit ): String { val table = Table () table . block () return table . html () } table() \u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u5b9a\u4e49\u5230 Table \u7c7b\u4e2d\u7684\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff0c\u8c03\u7528 table() \u51fd\u6570\u65f6\uff0c\u5148\u521b\u5efa\u4e00\u4e2a Table \u5bf9\u8c61\u5e76\u7528\u5b83\u6765\u8c03\u7528\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u3002\u6700\u540e\u8fd4\u56de Table \u7684 html() \u65b9\u6cd5\u751f\u6210\u7684 HTML \u4ee3\u7801\u3002 \u73b0\u5728\u6211\u4eec\u7ec8\u4e8e\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u795e\u5947\u7684\u8bed\u6cd5\u7ed3\u6784\u6765\u52a8\u6001\u751f\u6210\u4e00\u4e2a\u8868\u683c\u6240\u5bf9\u5e94\u7684 HTML \u4ee3\u7801\u4e86\uff1a fun main () { val html = table { tr { td { \"A\" } td { \"B\" } td { \"C\" } } tr { td { \"X\" } td { \"Y\" } td { \"Z\" } } } println ( html ) }","title":"\u5b9e\u6218"},{"location":"Kotlin/Lambda%20%E7%BC%96%E7%A8%8B/","text":"Lambda \u7f16\u7a0b\u57fa\u7840 \u00b6 Lambda \u8868\u8fbe\u5f0f\u5b8c\u6574\u7ed3\u6784\u8bed\u6cd5\uff1a { \u53c2\u6570\u540d 1 : \u53c2\u6570\u7c7b\u578b 1 , \u53c2\u6570\u540d 2 : \u53c2\u6570\u7c7b\u578b 2 -> \u51fd\u6570\u4f53 } \u96c6\u5408\u7684\u51fd\u6570\u5f0f API \u00b6 \u601d\u8003\u4e00\u4e2a\u9700\u6c42\uff0c\u5728\u4e00\u4e2a\u6c34\u679c\u96c6\u5408\u91cc\u9762\u627e\u5230\u5355\u8bcd\u6700\u957f\u7684\u90a3\u4e2a\u6c34\u679c\uff0c\u4f7f\u7528\u51fd\u6570\u5f0f API \u53ef\u4ee5\u8fd9\u4e48\u5199\uff1a val list = listOf ( \"Apple\" , \"Banana\" , \"Orange\" , \"Pear\" , \"WaterMelon\" ) val maxLengthFruit = list . maxBy { it . length } println ( \"Max length fruit is ${ maxLengthFruit } \" ) \u8fd9\u662f Lambda \u8868\u8fbe\u5f0f\u7684\u7b80\u5316\u5199\u6cd5\uff0c\u90a3\u4e48\u8fd9\u4e9b\u7b80\u5316\u7248\u5199\u6cd5\u662f\u600e\u4e48\u6765\u7684\u5462\uff1f\u6211\u4eec\u6765\u4e00\u6b65\u6b65\u63a2\u7d22\u3002 maxBy \u51fd\u6570\u5176\u5b9e\u63a5\u6536\u7684\u662f\u4e00\u4e2a Lambda \u7c7b\u578b\u53c2\u6570\uff0c\u5e76\u4e14\u5728\u904d\u5386\u96c6\u5408\u65f6\u5c06\u6bcf\u6b21\u904d\u5386\u7684\u503c\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9 Lambda \u8868\u8fbe\u5f0f\u3002maxBy \u5de5\u4f5c\u539f\u7406\u662f\u6839\u636e\u6211\u4eec\u4f20\u5165\u7684\u6761\u4ef6\u6765\u904d\u5386\u96c6\u5408\uff0c\u4ece\u800c\u627e\u5230\u8be5\u6761\u4ef6\u4e0b\u7684\u6700\u5927\u503c\u3002\uff08\u8fd9\u91cc\u8981\u627e\u5230\u5355\u8bcd\u6700\u957f\u7684\u6c34\u679c\uff0c\u90a3\u4e48\u6761\u4ef6\u81ea\u7136\u5c31\u662f\u5355\u8bcd\u7684\u957f\u5ea6\uff09 val list = listOf ( \"Apple\" , \"Banana\" , \"Orange\" , \"Pear\" , \"WaterMelon\" ) val lambda = { fruit : String -> fruit . length } val maxLengthFruit = list . maxBy ( lambda ) \u8fd9\u662f\u6700\u5b8c\u6574\u7684\u5199\u6cd5\uff0c\u4f46\u662f\u8fd9\u5f88\u5570\u55e6\uff0c\u6211\u4eec\u6765\u9010\u6b65\u7b80\u5316\u5b83\u3002 \u9996\u5148\uff0c\u6211\u4eec\u65e0\u9700\u4e13\u95e8\u5b9a\u4e49\u4e00\u4e2a lambda \u53d8\u91cf\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06 lambda \u8868\u8fbe\u5f0f\u4f20\u5165 maxBy \u51fd\u6570\u4e2d\uff1a val maxLengthFruit = list . maxBy ({ fruit : String -> fruit . length }) Kotlin \u89c4\u5b9a\uff0c\u5f53 lambda \u53c2\u6570\u662f\u51fd\u6570\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u65f6\uff0c\u53ef\u4ee5\u5c06 Lambda \u8868\u8fbe\u5f0f\u79fb\u5230\u53c2\u6570\u62ec\u53f7\u7684\u5916\u9762\uff1a val maxLengthFruit = list . maxBy (){ fruit : String -> fruit . length } \u63a5\u4e0b\u6765\uff0c\u5982\u679c Lambda \u53c2\u6570\u662f\u51fd\u6570\u7684\u552f\u4e00\u53c2\u6570\uff0c\u53ef\u4ee5\u5c06\u53c2\u6570\u62ec\u53f7\u7701\u7565\uff1a val maxLengthFruit = list . maxBy { fruit : String -> fruit . length } \u7531\u4e8e Kotlin \u7684\u7c7b\u578b\u63a8\u5bfc\u673a\u5236\uff0cLambda \u8868\u8fbe\u5f0f\u4e2d\u7684\u53c2\u6570\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u65e0\u9700\u58f0\u660e\u53c2\u6570\u7c7b\u578b\uff1a val maxLengthFruit = list . maxBy { fruit -> fruit . length } \u6700\u540e\uff0c\u5f53 Lambda \u8868\u8fbe\u5f0f\u7684\u53c2\u6570\u5217\u8868\u4e2d\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\u65f6\uff0c\u53ef\u4ee5\u4e0d\u58f0\u660e\u53c2\u6570\u540d\u800c\u4f7f\u7528 it \u9ed8\u8ba4\u5173\u952e\u5b57\u4ee3\u66ff\u3002 val maxLengthFruit = list . maxBy { it . length } Java \u51fd\u6570\u5f0f API \u7684\u4f7f\u7528 \u00b6 \u5728 Kotlin \u4e2d\u8c03\u7528 Java \u65b9\u6cd5 \u4e5f\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570\u5f0f API\uff0c\u4f46\u6709\u4e00\u5b9a\u7684\u6761\u4ef6\u9650\u5236\uff1a \u8be5\u65b9\u6cd5\u63a5\u6536\u4e00\u4e2a Java \u5355\u62bd\u8c61\u65b9\u6cd5\u63a5\u53e3\u53c2\u6570 \u3002\uff08Java \u5355\u62bd\u8c61\u65b9\u6cd5\u63a5\u53e3\u6307\u7684\u662f\u63a5\u53e3\u4e2d\u53ea\u6709\u4e00\u4e2a\u5f85\u5b9e\u73b0\u65b9\u6cd5\uff09 \u4ee5 Runnable \u63a5\u53e3\u4e3a\u4f8b\uff0c\u8fd9\u4e2a\u63a5\u53e3\u4e2d\u53ea\u6709\u4e00\u4e2a\u5f85\u5b9e\u73b0\u7684 run() \u65b9\u6cd5\uff1a public interface Runnable { void run (); } Thread \u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\u63a5\u6536\u4e00\u4e2a Runnable \u53c2\u6570\uff0c\u4f9d\u7167\u4f20\u7edf\u5199\u6cd5\uff0c\u521b\u5efa\u5e76\u6267\u884c\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u8fd9\u4e48\u5199\uff1a Thread ( object : Runnable { override fun run (){ println ( \"Thraed is running\" ) } }). start () \u4f7f\u7528\u51fd\u6570\u5f0f API \u7684\u5199\u6cd5\uff1a Thread(Runnable { println(\"Thread is running\") }).start() \u8fd9\u6bb5\u4ee3\u7801\u660e\u663e\u7b80\u5316\u4e86\u4e0d\u5c11\uff0c\u5b9e\u73b0\u4e86\u76f8\u540c\u7684\u529f\u80fd\u7684\u540c\u65f6\u53c8\u4e0d\u4f1a\u9020\u6210\u6b67\u4e49\uff0c\u56e0\u4e3a Runnable \u7c7b\u4e2d\u53ea\u6709\u4e00\u4e2a\u5f85\u5b9e\u73b0\u65b9\u6cd5\uff0c\u5373\u4f7f\u8fd9\u91cc\u5e76\u6ca1\u6709\u663e\u5f0f\u5730\u91cd\u5199 run() \u65b9\u6cd5\uff0cKotlin \u4e5f\u80fd\u660e\u767d Runnable \u540e\u9762\u7684 Lambda \u8868\u8fbe\u5f0f\u5c31\u662f\u8981\u5728 run() \u65b9\u6cd5\u4e2d\u5b9e\u73b0\u7684\u5185\u5bb9\u3002 \u53e6\u5916\uff0c\u5982\u679c Java \u65b9\u6cd5\u7684\u53c2\u6570\u5217\u8868\u4e2d\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a Java \u5355\u62bd\u8c61\u65b9\u6cd5\u63a5\u53e3\u53c2\u6570\uff0c\u8fd8\u53ef\u4ee5\u5c06\u63a5\u53e3\u540d\u7701\u7565\uff1a Thread ({ println ( \"Thread is running\" ) }). start () \u548c\u4e4b\u524d\u7684 Kotlin \u4e2d\u51fd\u6570\u5f0f API \u7528\u6cd5\u7c7b\u4f3c\uff0c\u5f53 Lambda \u8868\u8fbe\u5f0f\u662f\u65b9\u6cd5\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u65f6\uff0c\u53ef\u4ee5\u5c06 Lambda \u8868\u8fbe\u5f0f\u79fb\u5230\u53c2\u6570\u62ec\u53f7\u5916\u9762\uff1b\u540c\u65f6\uff0c\u5982\u679c Lambda \u8868\u8fbe\u5f0f\u662f\u65b9\u6cd5\u7684\u552f\u4e00\u53c2\u6570\uff0c\u53ef\u4ee5\u5c06\u53c2\u6570\u62ec\u53f7\u7701\u7565\uff1a Thread { println ( \"Thread is running\" ) }. start ()","title":"Lambda \u7f16\u7a0b\u57fa\u7840"},{"location":"Kotlin/Lambda%20%E7%BC%96%E7%A8%8B/#lambda","text":"Lambda \u8868\u8fbe\u5f0f\u5b8c\u6574\u7ed3\u6784\u8bed\u6cd5\uff1a { \u53c2\u6570\u540d 1 : \u53c2\u6570\u7c7b\u578b 1 , \u53c2\u6570\u540d 2 : \u53c2\u6570\u7c7b\u578b 2 -> \u51fd\u6570\u4f53 }","title":"Lambda \u7f16\u7a0b\u57fa\u7840"},{"location":"Kotlin/Lambda%20%E7%BC%96%E7%A8%8B/#api","text":"\u601d\u8003\u4e00\u4e2a\u9700\u6c42\uff0c\u5728\u4e00\u4e2a\u6c34\u679c\u96c6\u5408\u91cc\u9762\u627e\u5230\u5355\u8bcd\u6700\u957f\u7684\u90a3\u4e2a\u6c34\u679c\uff0c\u4f7f\u7528\u51fd\u6570\u5f0f API \u53ef\u4ee5\u8fd9\u4e48\u5199\uff1a val list = listOf ( \"Apple\" , \"Banana\" , \"Orange\" , \"Pear\" , \"WaterMelon\" ) val maxLengthFruit = list . maxBy { it . length } println ( \"Max length fruit is ${ maxLengthFruit } \" ) \u8fd9\u662f Lambda \u8868\u8fbe\u5f0f\u7684\u7b80\u5316\u5199\u6cd5\uff0c\u90a3\u4e48\u8fd9\u4e9b\u7b80\u5316\u7248\u5199\u6cd5\u662f\u600e\u4e48\u6765\u7684\u5462\uff1f\u6211\u4eec\u6765\u4e00\u6b65\u6b65\u63a2\u7d22\u3002 maxBy \u51fd\u6570\u5176\u5b9e\u63a5\u6536\u7684\u662f\u4e00\u4e2a Lambda \u7c7b\u578b\u53c2\u6570\uff0c\u5e76\u4e14\u5728\u904d\u5386\u96c6\u5408\u65f6\u5c06\u6bcf\u6b21\u904d\u5386\u7684\u503c\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9 Lambda \u8868\u8fbe\u5f0f\u3002maxBy \u5de5\u4f5c\u539f\u7406\u662f\u6839\u636e\u6211\u4eec\u4f20\u5165\u7684\u6761\u4ef6\u6765\u904d\u5386\u96c6\u5408\uff0c\u4ece\u800c\u627e\u5230\u8be5\u6761\u4ef6\u4e0b\u7684\u6700\u5927\u503c\u3002\uff08\u8fd9\u91cc\u8981\u627e\u5230\u5355\u8bcd\u6700\u957f\u7684\u6c34\u679c\uff0c\u90a3\u4e48\u6761\u4ef6\u81ea\u7136\u5c31\u662f\u5355\u8bcd\u7684\u957f\u5ea6\uff09 val list = listOf ( \"Apple\" , \"Banana\" , \"Orange\" , \"Pear\" , \"WaterMelon\" ) val lambda = { fruit : String -> fruit . length } val maxLengthFruit = list . maxBy ( lambda ) \u8fd9\u662f\u6700\u5b8c\u6574\u7684\u5199\u6cd5\uff0c\u4f46\u662f\u8fd9\u5f88\u5570\u55e6\uff0c\u6211\u4eec\u6765\u9010\u6b65\u7b80\u5316\u5b83\u3002 \u9996\u5148\uff0c\u6211\u4eec\u65e0\u9700\u4e13\u95e8\u5b9a\u4e49\u4e00\u4e2a lambda \u53d8\u91cf\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06 lambda \u8868\u8fbe\u5f0f\u4f20\u5165 maxBy \u51fd\u6570\u4e2d\uff1a val maxLengthFruit = list . maxBy ({ fruit : String -> fruit . length }) Kotlin \u89c4\u5b9a\uff0c\u5f53 lambda \u53c2\u6570\u662f\u51fd\u6570\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u65f6\uff0c\u53ef\u4ee5\u5c06 Lambda \u8868\u8fbe\u5f0f\u79fb\u5230\u53c2\u6570\u62ec\u53f7\u7684\u5916\u9762\uff1a val maxLengthFruit = list . maxBy (){ fruit : String -> fruit . length } \u63a5\u4e0b\u6765\uff0c\u5982\u679c Lambda \u53c2\u6570\u662f\u51fd\u6570\u7684\u552f\u4e00\u53c2\u6570\uff0c\u53ef\u4ee5\u5c06\u53c2\u6570\u62ec\u53f7\u7701\u7565\uff1a val maxLengthFruit = list . maxBy { fruit : String -> fruit . length } \u7531\u4e8e Kotlin \u7684\u7c7b\u578b\u63a8\u5bfc\u673a\u5236\uff0cLambda \u8868\u8fbe\u5f0f\u4e2d\u7684\u53c2\u6570\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u65e0\u9700\u58f0\u660e\u53c2\u6570\u7c7b\u578b\uff1a val maxLengthFruit = list . maxBy { fruit -> fruit . length } \u6700\u540e\uff0c\u5f53 Lambda \u8868\u8fbe\u5f0f\u7684\u53c2\u6570\u5217\u8868\u4e2d\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\u65f6\uff0c\u53ef\u4ee5\u4e0d\u58f0\u660e\u53c2\u6570\u540d\u800c\u4f7f\u7528 it \u9ed8\u8ba4\u5173\u952e\u5b57\u4ee3\u66ff\u3002 val maxLengthFruit = list . maxBy { it . length }","title":"\u96c6\u5408\u7684\u51fd\u6570\u5f0f API"},{"location":"Kotlin/Lambda%20%E7%BC%96%E7%A8%8B/#java-api","text":"\u5728 Kotlin \u4e2d\u8c03\u7528 Java \u65b9\u6cd5 \u4e5f\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570\u5f0f API\uff0c\u4f46\u6709\u4e00\u5b9a\u7684\u6761\u4ef6\u9650\u5236\uff1a \u8be5\u65b9\u6cd5\u63a5\u6536\u4e00\u4e2a Java \u5355\u62bd\u8c61\u65b9\u6cd5\u63a5\u53e3\u53c2\u6570 \u3002\uff08Java \u5355\u62bd\u8c61\u65b9\u6cd5\u63a5\u53e3\u6307\u7684\u662f\u63a5\u53e3\u4e2d\u53ea\u6709\u4e00\u4e2a\u5f85\u5b9e\u73b0\u65b9\u6cd5\uff09 \u4ee5 Runnable \u63a5\u53e3\u4e3a\u4f8b\uff0c\u8fd9\u4e2a\u63a5\u53e3\u4e2d\u53ea\u6709\u4e00\u4e2a\u5f85\u5b9e\u73b0\u7684 run() \u65b9\u6cd5\uff1a public interface Runnable { void run (); } Thread \u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\u63a5\u6536\u4e00\u4e2a Runnable \u53c2\u6570\uff0c\u4f9d\u7167\u4f20\u7edf\u5199\u6cd5\uff0c\u521b\u5efa\u5e76\u6267\u884c\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u8fd9\u4e48\u5199\uff1a Thread ( object : Runnable { override fun run (){ println ( \"Thraed is running\" ) } }). start () \u4f7f\u7528\u51fd\u6570\u5f0f API \u7684\u5199\u6cd5\uff1a Thread(Runnable { println(\"Thread is running\") }).start() \u8fd9\u6bb5\u4ee3\u7801\u660e\u663e\u7b80\u5316\u4e86\u4e0d\u5c11\uff0c\u5b9e\u73b0\u4e86\u76f8\u540c\u7684\u529f\u80fd\u7684\u540c\u65f6\u53c8\u4e0d\u4f1a\u9020\u6210\u6b67\u4e49\uff0c\u56e0\u4e3a Runnable \u7c7b\u4e2d\u53ea\u6709\u4e00\u4e2a\u5f85\u5b9e\u73b0\u65b9\u6cd5\uff0c\u5373\u4f7f\u8fd9\u91cc\u5e76\u6ca1\u6709\u663e\u5f0f\u5730\u91cd\u5199 run() \u65b9\u6cd5\uff0cKotlin \u4e5f\u80fd\u660e\u767d Runnable \u540e\u9762\u7684 Lambda \u8868\u8fbe\u5f0f\u5c31\u662f\u8981\u5728 run() \u65b9\u6cd5\u4e2d\u5b9e\u73b0\u7684\u5185\u5bb9\u3002 \u53e6\u5916\uff0c\u5982\u679c Java \u65b9\u6cd5\u7684\u53c2\u6570\u5217\u8868\u4e2d\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a Java \u5355\u62bd\u8c61\u65b9\u6cd5\u63a5\u53e3\u53c2\u6570\uff0c\u8fd8\u53ef\u4ee5\u5c06\u63a5\u53e3\u540d\u7701\u7565\uff1a Thread ({ println ( \"Thread is running\" ) }). start () \u548c\u4e4b\u524d\u7684 Kotlin \u4e2d\u51fd\u6570\u5f0f API \u7528\u6cd5\u7c7b\u4f3c\uff0c\u5f53 Lambda \u8868\u8fbe\u5f0f\u662f\u65b9\u6cd5\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u65f6\uff0c\u53ef\u4ee5\u5c06 Lambda \u8868\u8fbe\u5f0f\u79fb\u5230\u53c2\u6570\u62ec\u53f7\u5916\u9762\uff1b\u540c\u65f6\uff0c\u5982\u679c Lambda \u8868\u8fbe\u5f0f\u662f\u65b9\u6cd5\u7684\u552f\u4e00\u53c2\u6570\uff0c\u53ef\u4ee5\u5c06\u53c2\u6570\u62ec\u53f7\u7701\u7565\uff1a Thread { println ( \"Thread is running\" ) }. start ()","title":"Java \u51fd\u6570\u5f0f API \u7684\u4f7f\u7528"},{"location":"Kotlin/infix%20%E5%87%BD%E6%95%B0/","text":"infix \u51fd\u6570 \u00b6 \u5728 Kotlin \u4e2d\u53ef\u4ee5\u4f7f\u7528 A to B \u8fd9\u6837\u7684\u8bed\u6cd5\u7ed3\u6784\u53bb\u6784\u5efa\u952e\u503c\u5bf9\uff0c\u8fd9\u79cd\u8bed\u6cd5\u7ed3\u6784\u7684\u4f18\u70b9\u662f\u53ef\u8bfb\u6027\u9ad8\uff0c\u76f8\u8f83\u4e8e\u8c03\u7528\u51fd\u6570\uff0c\u5b83\u7528\u66f4\u63a5\u8fd1\u4e8e\u82f1\u8bed\u7684\u8bed\u6cd5\u6765\u7f16\u5199\u7a0b\u5e8f\u3002 \u8fd9\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f\u9996\u5148\uff0cto \u5e76\u4e0d\u662f Kotlin \u4e2d\u7684\u5173\u952e\u5b57\u3002\u4e4b\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528 A to B \u8fd9\u6837\u7684\u8bed\u6cd5\u7ed3\u6784\uff0c\u5b8c\u5168\u5f97\u76ca\u4e8e Kotlin \u63d0\u4f9b\u4e86\u4e00\u79cd\u9ad8\u7ea7\u8bed\u6cd5\u7cd6\u7279\u5f81\uff1ainfix \u51fd\u6570\u3002 \u7528\u6cd5 \u00b6 \u6211\u4eec\u7531\u6d45\u5230\u6df1\u6765\u5b66\u4e60\u4e00\u4e0b infix \u51fd\u6570\u7684\u7528\u6cd5\u3002 String \u4e2d\u6709\u4e00\u4e2a startsWith() \u51fd\u6570\uff0c\u7528\u4e8e\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u67d0\u4e2a\u6307\u5b9a\u53c2\u6570\u5f00\u5934\uff1a if ( \"Hello\" . startsWith ( \"H\" )){ ... } \u501f\u52a9\u4e8e infix \u51fd\u6570\uff0c \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u66f4\u5177\u53ef\u8bfb\u6027\u7684\u8bed\u6cd5\u6765\u5b9e\u73b0\u76f8\u540c\u7684\u529f\u80fd\uff1a infix fun String . beginsWith ( prefix : String ) = startsWith ( prefix ) \u5982\u679c\u4e0d\u52a0\u4e0a infix \u5173\u952e\u5b57\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u80fd\u4f7f\u7528 \"Hello\".beginsWith(\"H\") \u6765\u8c03\u7528 beginsWith \uff0c\u8fd9\u548c startsWith() \u5e76\u65e0\u4e8c\u5f02\uff0c\u4f46\u662f\u52a0\u4e0a\u4e86 infix \u5173\u952e\u5b57\u540e\uff0c\u9664\u4e86\u4f20\u7edf\u7684\u51fd\u6570\u8c03\u7528\u65b9\u5f0f\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u7528\u4e00\u79cd\u7279\u6b8a\u7684\u8bed\u6cd5\u7cd6\u683c\u5f0f\u6765\u8c03\u7528 beginsWith() \uff1a \"Hello\" beginsWith \"H\" \u9650\u5236 \u00b6 \u4e0d\u8fc7\u7531\u4e8e infix \u51fd\u6570\u8bed\u6cd5\u7cd6\u683c\u5f0f\u7684\u7279\u6b8a\u6027\uff0c\u6709\u4e24\u4e2a\u6bd4\u8f83\u4e25\u683c\u7684\u9650\u5236\uff1a \u4e0d\u80fd\u5b9a\u4e49\u4e3a\u9876\u5c42\u51fd\u6570\uff0c\u5b83\u5fc5\u987b\u662f\u67d0\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff1b \u5fc5\u987b\u63a5\u6536\u4e14\u4ec5\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\u3002 \u4f8b\u5b501 \u00b6 \u6709\u4e00\u4e2a\u96c6\u5408\uff0c\u60f3\u8981\u5224\u65ad\u96c6\u5408\u4e2d\u662f\u5426\u5305\u542b\u67d0\u4e2a\u6307\u5b9a\u5143\u7d20\uff0c\u4e00\u822c\u53ef\u4ee5\u8fd9\u4e48\u5199\uff1a val list = listOf ( \"Apple\" , \"Pear\" , \"Banana\" ) if ( list . contains ( \"Banana\" )){ ... } \u4e0b\u9762\u501f\u52a9 infix \u51fd\u6570\u8ba9\u4ee3\u7801\u66f4\u5177\u53ef\u8bfb\u6027\uff1a infix fun Collection < T > . has ( element : T ) = contains ( element ) \u9996\u5148\uff0c\u6211\u4eec\u7ed9 Collection \u63a5\u53e3\u6dfb\u52a0\u4e86\u4e00\u4e2a\u62d3\u5c55\u51fd\u6570\uff0c\u56e0\u4e3a\u5b83\u662f Java \u53ca Kotlin \u4e2d\u6240\u6709\u96c6\u5408\u7684\u603b\u63a5\u53e3\uff0c\u56e0\u6b64\u5982\u679c\u7ed9 Collection \u6dfb\u52a0\u4e00\u4e2a has() \u62d3\u5c55\u51fd\u6570\uff0c\u90a3\u4e48\u6240\u6709\u96c6\u5408\u7684\u5b50\u7c7b\u90fd\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570\u4e86\u3002\u53e6\u5916\u8fd8\u4f7f\u7528\u7684\u6cdb\u578b\u7684\u5199\u6cd5\u4f7f\u5f97 has() \u53ef\u4ee5\u63a5\u6536\u4efb\u4f55\u5177\u4f53\u7c7b\u578b\u7684\u53c2\u6570\u3002\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u8bed\u6cd5\u6765\u5224\u65ad\u96c6\u5408\u4e2d\u662f\u5426\u5305\u542b\u67d0\u4e2a\u5143\u7d20\u4e86\uff1a val list = listOf ( \"Apple\" , \"Pear\" , \"Banana\" ) if ( list has \"Banana\" ){ ... } \u4f8b\u5b502 \u00b6 Kotlin \u4e2d\u53ef\u4ee5\u4f7f\u7528 A to B \u6765\u521b\u5efa\u4e00\u4e2a Pair \u5bf9\u8c61\uff0c\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e2a to() \u51fd\u6570\u7684\u6e90\u7801\uff1a public infix fun < A , B > A . to ( that : B ) : Pair < A , B > = Pair ( this , that ) \u4f7f\u7528\u5b9a\u4e49\u6cdb\u578b\u51fd\u6570\u7684\u65b9\u5f0f\u5c06 to() \u51fd\u6570\u5b9a\u4e49\u5230 A \u7c7b\u578b\u4e0b\uff0c\u5e76\u63a5\u6536\u4e00\u4e2a B \u7c7b\u578b\u7684\u53c2\u6570\u3002\u56e0\u6b64 A \u548c B \u53ef\u4ee5\u662f\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u6cdb\u578b\u3002","title":"infix \u51fd\u6570"},{"location":"Kotlin/infix%20%E5%87%BD%E6%95%B0/#infix","text":"\u5728 Kotlin \u4e2d\u53ef\u4ee5\u4f7f\u7528 A to B \u8fd9\u6837\u7684\u8bed\u6cd5\u7ed3\u6784\u53bb\u6784\u5efa\u952e\u503c\u5bf9\uff0c\u8fd9\u79cd\u8bed\u6cd5\u7ed3\u6784\u7684\u4f18\u70b9\u662f\u53ef\u8bfb\u6027\u9ad8\uff0c\u76f8\u8f83\u4e8e\u8c03\u7528\u51fd\u6570\uff0c\u5b83\u7528\u66f4\u63a5\u8fd1\u4e8e\u82f1\u8bed\u7684\u8bed\u6cd5\u6765\u7f16\u5199\u7a0b\u5e8f\u3002 \u8fd9\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f\u9996\u5148\uff0cto \u5e76\u4e0d\u662f Kotlin \u4e2d\u7684\u5173\u952e\u5b57\u3002\u4e4b\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528 A to B \u8fd9\u6837\u7684\u8bed\u6cd5\u7ed3\u6784\uff0c\u5b8c\u5168\u5f97\u76ca\u4e8e Kotlin \u63d0\u4f9b\u4e86\u4e00\u79cd\u9ad8\u7ea7\u8bed\u6cd5\u7cd6\u7279\u5f81\uff1ainfix \u51fd\u6570\u3002","title":"infix \u51fd\u6570"},{"location":"Kotlin/infix%20%E5%87%BD%E6%95%B0/#_1","text":"\u6211\u4eec\u7531\u6d45\u5230\u6df1\u6765\u5b66\u4e60\u4e00\u4e0b infix \u51fd\u6570\u7684\u7528\u6cd5\u3002 String \u4e2d\u6709\u4e00\u4e2a startsWith() \u51fd\u6570\uff0c\u7528\u4e8e\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u67d0\u4e2a\u6307\u5b9a\u53c2\u6570\u5f00\u5934\uff1a if ( \"Hello\" . startsWith ( \"H\" )){ ... } \u501f\u52a9\u4e8e infix \u51fd\u6570\uff0c \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u66f4\u5177\u53ef\u8bfb\u6027\u7684\u8bed\u6cd5\u6765\u5b9e\u73b0\u76f8\u540c\u7684\u529f\u80fd\uff1a infix fun String . beginsWith ( prefix : String ) = startsWith ( prefix ) \u5982\u679c\u4e0d\u52a0\u4e0a infix \u5173\u952e\u5b57\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u80fd\u4f7f\u7528 \"Hello\".beginsWith(\"H\") \u6765\u8c03\u7528 beginsWith \uff0c\u8fd9\u548c startsWith() \u5e76\u65e0\u4e8c\u5f02\uff0c\u4f46\u662f\u52a0\u4e0a\u4e86 infix \u5173\u952e\u5b57\u540e\uff0c\u9664\u4e86\u4f20\u7edf\u7684\u51fd\u6570\u8c03\u7528\u65b9\u5f0f\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u7528\u4e00\u79cd\u7279\u6b8a\u7684\u8bed\u6cd5\u7cd6\u683c\u5f0f\u6765\u8c03\u7528 beginsWith() \uff1a \"Hello\" beginsWith \"H\"","title":"\u7528\u6cd5"},{"location":"Kotlin/infix%20%E5%87%BD%E6%95%B0/#_2","text":"\u4e0d\u8fc7\u7531\u4e8e infix \u51fd\u6570\u8bed\u6cd5\u7cd6\u683c\u5f0f\u7684\u7279\u6b8a\u6027\uff0c\u6709\u4e24\u4e2a\u6bd4\u8f83\u4e25\u683c\u7684\u9650\u5236\uff1a \u4e0d\u80fd\u5b9a\u4e49\u4e3a\u9876\u5c42\u51fd\u6570\uff0c\u5b83\u5fc5\u987b\u662f\u67d0\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff1b \u5fc5\u987b\u63a5\u6536\u4e14\u4ec5\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\u3002","title":"\u9650\u5236"},{"location":"Kotlin/infix%20%E5%87%BD%E6%95%B0/#1","text":"\u6709\u4e00\u4e2a\u96c6\u5408\uff0c\u60f3\u8981\u5224\u65ad\u96c6\u5408\u4e2d\u662f\u5426\u5305\u542b\u67d0\u4e2a\u6307\u5b9a\u5143\u7d20\uff0c\u4e00\u822c\u53ef\u4ee5\u8fd9\u4e48\u5199\uff1a val list = listOf ( \"Apple\" , \"Pear\" , \"Banana\" ) if ( list . contains ( \"Banana\" )){ ... } \u4e0b\u9762\u501f\u52a9 infix \u51fd\u6570\u8ba9\u4ee3\u7801\u66f4\u5177\u53ef\u8bfb\u6027\uff1a infix fun Collection < T > . has ( element : T ) = contains ( element ) \u9996\u5148\uff0c\u6211\u4eec\u7ed9 Collection \u63a5\u53e3\u6dfb\u52a0\u4e86\u4e00\u4e2a\u62d3\u5c55\u51fd\u6570\uff0c\u56e0\u4e3a\u5b83\u662f Java \u53ca Kotlin \u4e2d\u6240\u6709\u96c6\u5408\u7684\u603b\u63a5\u53e3\uff0c\u56e0\u6b64\u5982\u679c\u7ed9 Collection \u6dfb\u52a0\u4e00\u4e2a has() \u62d3\u5c55\u51fd\u6570\uff0c\u90a3\u4e48\u6240\u6709\u96c6\u5408\u7684\u5b50\u7c7b\u90fd\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570\u4e86\u3002\u53e6\u5916\u8fd8\u4f7f\u7528\u7684\u6cdb\u578b\u7684\u5199\u6cd5\u4f7f\u5f97 has() \u53ef\u4ee5\u63a5\u6536\u4efb\u4f55\u5177\u4f53\u7c7b\u578b\u7684\u53c2\u6570\u3002\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u8bed\u6cd5\u6765\u5224\u65ad\u96c6\u5408\u4e2d\u662f\u5426\u5305\u542b\u67d0\u4e2a\u5143\u7d20\u4e86\uff1a val list = listOf ( \"Apple\" , \"Pear\" , \"Banana\" ) if ( list has \"Banana\" ){ ... }","title":"\u4f8b\u5b501"},{"location":"Kotlin/infix%20%E5%87%BD%E6%95%B0/#2","text":"Kotlin \u4e2d\u53ef\u4ee5\u4f7f\u7528 A to B \u6765\u521b\u5efa\u4e00\u4e2a Pair \u5bf9\u8c61\uff0c\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e2a to() \u51fd\u6570\u7684\u6e90\u7801\uff1a public infix fun < A , B > A . to ( that : B ) : Pair < A , B > = Pair ( this , that ) \u4f7f\u7528\u5b9a\u4e49\u6cdb\u578b\u51fd\u6570\u7684\u65b9\u5f0f\u5c06 to() \u51fd\u6570\u5b9a\u4e49\u5230 A \u7c7b\u578b\u4e0b\uff0c\u5e76\u63a5\u6536\u4e00\u4e2a B \u7c7b\u578b\u7684\u53c2\u6570\u3002\u56e0\u6b64 A \u548c B \u53ef\u4ee5\u662f\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u6cdb\u578b\u3002","title":"\u4f8b\u5b502"},{"location":"Kotlin/%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%87%BD%E6%95%B0/","text":"Kotlin \u4f5c\u7528\u57df\u51fd\u6570 \u00b6 Kotlin \u6807\u51c6\u5e93\u5305\u542b\u4e94\u79cd\u4f5c\u7528\u57df\u51fd\u6570\uff1alet\u3001run\u3001with\u3001apply \u548c also\uff0c\u5b83\u4eec\u7684\u552f\u4e00\u76ee\u7684\u662f\u5728\u5bf9\u8c61\u7684\u4e0a\u4e0b\u6587\u4e2d\u6267\u884c\u4ee3\u7801\u5757\uff0c\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u8c03\u7528\u4ee5\u4e0a\u51fd\u6570\u5e76\u63d0\u4f9b\u4e00\u4e2a lambda \u8868\u8fbe\u5f0f\u65f6\uff0c\u4f1a\u5f62\u6210\u4e00\u4e2a\u4e34\u65f6\u4f5c\u7528\u57df\uff0c\u5728\u6b64\u4f5c\u7528\u57df\u4e2d\uff0c\u53ef\u4ee5\u8bbf\u95ee\u8be5\u5bf9\u8c61\u800c\u65e0\u9700\u5176\u540d\u79f0\uff0c\u4f7f\u4ee3\u7801\u66f4\u52a0\u7b80\u6d01\u6613\u8bfb\u3002 data class Person ( val name : String ){ fun eat ( food : String ){ println ( \" ${ name } is eating ${ food } ...\" ) } fun sleep (){ println ( \" ${ name } is sleeping...\" ) } } fun main (){ Person ( \"\u5f20\u4e09\" ). apply { eat ( \"\u9ea6\u5f53\u52b3\" ) sleep () } // \u5982\u679c\u4e0d\u4f7f\u7528\u4f5c\u7528\u57df\u51fd\u6570\u6765\u5199\u8fd9\u6bb5\u4ee3\u7801\uff0c\u5c31\u5fc5\u987b\u5f15\u5165\u4e00\u4e2a\u65b0\u53d8\u91cf\uff0c\u5e76\u5728\u6bcf\u6b21\u4f7f\u7528\u5b83\u65f6\u91cd\u590d\u5176\u540d\u79f0\u3002 val zs = Person ( \"\u5f20\u4e09\" ) zs . eat ( \"\u9ea6\u5f53\u52b3\" ) zs . sleep () } \u4e94\u4e2a\u4f5c\u7528\u57df\u51fd\u6570\u5176\u5b9e\u90fd\u5341\u5206\u7c7b\u4f3c\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u533a\u522b\u4e3b\u8981\u5728\u4ee5\u4e0b\u4e24\u4e2a\u65b9\u9762\uff1a \u5f15\u7528\u4e0a\u4e0b\u6587\u5bf9\u8c61\u7684\u65b9\u5f0f\uff08this \u6216 it\uff09 \u8fd4\u56de\u503c \u533a\u522b1\uff1a\u4e0a\u4e0b\u6587\u5bf9\u8c61\uff08this \u6216 it\uff09 \u00b6 \u5728\u4f5c\u7528\u57df\u51fd\u6570\u7684 lambda \u8868\u8fbe\u5f0f\u91cc\uff0c\u53ef\u4ee5\u4f7f\u7528 this\uff08\u4f5c\u4e3a lambda \u8868\u8fbe\u5f0f\u7684\u63a5\u6536\u8005\uff09\u6216 it\uff08\u4f5c\u4e3a lambda \u8868\u8fbe\u5f0f\u7684\u53c2\u6570\uff09\u6765\u8bbf\u95ee\u4e0a\u4e0b\u6587\u5bf9\u8c61\u3002 fun main (){ val str = \"Hello World!\" // this str . run { // \u9690\u5f0f\u5730\u8bbf\u95ee\u5bf9\u8c61 println ( length ) // \u7b49\u540c\u4e8e println(this.length) } str . apply { println ( this . length ) } with ( str ){ println ( this . length ) } // // it str . let { println ( it . length ) } str . also { println ( it . length ) } } this \u00b6 run\u3001with \u548c apply \u901a\u8fc7 this \u5f15\u7528\u4e0a\u4e0b\u6587\u5bf9\u8c61\uff0c\u5927\u591a\u6570\u65f6\u5019 this \u53ef\u4ee5\u7701\u7565\u3002\u5982\u679c\u5728\u4f5c\u7528\u57df\u51fd\u6570 lambda \u8868\u8fbe\u5f0f\u4e2d\uff0c\u4e3b\u8981\u5bf9\u5bf9\u8c61\u6210\u5458\u8fdb\u884c\u64cd\u4f5c\uff08\u8c03\u7528\u5176\u51fd\u6570\u6216\u5bf9\u5176\u5c5e\u6027\u8fdb\u884c\u8d4b\u503c\uff09\uff0c\u90a3\u4e48\u6700\u597d\u5c06\u4e0a\u4e0b\u6587\u5bf9\u8c61\u4f5c\u4e3a\u63a5\u6536\u8005\uff08this\uff09\u3002 fun main (){ Person ( \"\u5f20\u4e09\" ). apply { goTo ( \"KFC\" ) eat ( \"hamburg\" ) drink ( \"water\" ) sleep () } } it \u00b6 let \u548c also \u5c06\u4e0a\u4e0b\u6587\u5bf9\u8c61\u4f5c\u4e3a lambda \u8868\u8fbe\u5f0f\u53c2\u6570\u3002\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u53c2\u6570\u540d\uff0c\u53ef\u4ee5\u4f7f\u7528\u9690\u5f0f\u9ed8\u8ba4\u540d\u79f0 it \u8bbf\u95ee\u3002\u5f53\u4e0a\u4e0b\u6587\u5bf9\u8c61\u5728\u4f5c\u7528\u57df\u51fd\u6570 lambda \u8868\u8fbe\u5f0f\u4e2d\u4e3b\u8981\u5145\u5f53\u53c2\u6570\u89d2\u8272\u65f6\uff0c\u6700\u597d\u4f7f\u7528 it \u4f5c\u4e3a\u4e0a\u4e0b\u6587\u5bf9\u8c61\u3002 fun isEvenNum ( num : Int ) = println ( \" $ num is even number? \" + ( num % 2 ) == 0 ) fun main (){ 100.l et { isEvenNum ( it ) } // \u5f53\u5c06\u4e0a\u4e0b\u6587\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u65f6\uff0c\u53ef\u4ee5\u4e3a\u4e0a\u4e0b\u6587\u5bf9\u8c61\u6307\u5b9a\u5728\u4f5c\u7528\u57df\u5185\u7684\u81ea\u5b9a\u4e49\u540d\u79f0 100.l et { num -> isEvenNum ( num ) } } \u533a\u522b2\uff1a\u8fd4\u56de\u503c \u00b6 \u4f5c\u7528\u57df\u51fd\u6570\u8fd4\u56de\u503c\u53ef\u5206\u4e3a\u4ee5\u4e0b\u4e24\u79cd\uff1a \u8fd4\u56de\u4e0a\u4e0b\u6587\u5bf9\u8c61\uff08apply \u548c also\uff09 \u8fd4\u56de lambda \u8868\u8fbe\u5f0f\u7ed3\u679c\uff08let\u3001run \u548c with\uff09 \u8fd4\u56de\u4e0a\u4e0b\u6587\u5bf9\u8c61 \u00b6 val numList = mutableListOf < Int > () numList . also { println ( \"\u5f00\u59cb\u6dfb\u52a0\u6570\u636e\" ) } // \u56e0\u4e3a also \u8fd4\u56de\u7684\u662f\u4e0a\u4e0b\u6587\u5bf9\u8c61\uff08numList\uff09\uff0c\u6240\u4ee5\u53ef\u4ee5\u7ee7\u7eed\u94fe\u5f0f\u8c03\u7528 . apply { add ( 20 ) add ( 50 ) add ( 100 ) } . also { println ( \"\u6dfb\u52a0\u7ed3\u675f\" ) } . sort () \u8fd4\u56de Lambda \u8868\u8fbe\u5f0f\u7ed3\u679c \u00b6 val nums = mutableListOf < Int > () val countOfEven = nums . run { add ( 1 ) add ( 2 ) add ( 3 ) add ( 4 ) add ( 5 ) count { it % 2 == 0 } } println ( \"\u6570\u7ec4\u6709 $ countOfEven \u4e2a\u5076\u6570\" ) \u603b\u7ed3 \u00b6 let\uff1a \u00b6 \u4e0a\u4e0b\u6587\u5bf9\u8c61\u4f5c\u4e3a lambda \u8868\u8fbe\u5f0f\u7684\u53c2\u6570\uff08it\uff09\uff0c\u8fd4\u56de lambda \u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u3002","title":"Kotlin \u4f5c\u7528\u57df\u51fd\u6570"},{"location":"Kotlin/%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%87%BD%E6%95%B0/#kotlin","text":"Kotlin \u6807\u51c6\u5e93\u5305\u542b\u4e94\u79cd\u4f5c\u7528\u57df\u51fd\u6570\uff1alet\u3001run\u3001with\u3001apply \u548c also\uff0c\u5b83\u4eec\u7684\u552f\u4e00\u76ee\u7684\u662f\u5728\u5bf9\u8c61\u7684\u4e0a\u4e0b\u6587\u4e2d\u6267\u884c\u4ee3\u7801\u5757\uff0c\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u8c03\u7528\u4ee5\u4e0a\u51fd\u6570\u5e76\u63d0\u4f9b\u4e00\u4e2a lambda \u8868\u8fbe\u5f0f\u65f6\uff0c\u4f1a\u5f62\u6210\u4e00\u4e2a\u4e34\u65f6\u4f5c\u7528\u57df\uff0c\u5728\u6b64\u4f5c\u7528\u57df\u4e2d\uff0c\u53ef\u4ee5\u8bbf\u95ee\u8be5\u5bf9\u8c61\u800c\u65e0\u9700\u5176\u540d\u79f0\uff0c\u4f7f\u4ee3\u7801\u66f4\u52a0\u7b80\u6d01\u6613\u8bfb\u3002 data class Person ( val name : String ){ fun eat ( food : String ){ println ( \" ${ name } is eating ${ food } ...\" ) } fun sleep (){ println ( \" ${ name } is sleeping...\" ) } } fun main (){ Person ( \"\u5f20\u4e09\" ). apply { eat ( \"\u9ea6\u5f53\u52b3\" ) sleep () } // \u5982\u679c\u4e0d\u4f7f\u7528\u4f5c\u7528\u57df\u51fd\u6570\u6765\u5199\u8fd9\u6bb5\u4ee3\u7801\uff0c\u5c31\u5fc5\u987b\u5f15\u5165\u4e00\u4e2a\u65b0\u53d8\u91cf\uff0c\u5e76\u5728\u6bcf\u6b21\u4f7f\u7528\u5b83\u65f6\u91cd\u590d\u5176\u540d\u79f0\u3002 val zs = Person ( \"\u5f20\u4e09\" ) zs . eat ( \"\u9ea6\u5f53\u52b3\" ) zs . sleep () } \u4e94\u4e2a\u4f5c\u7528\u57df\u51fd\u6570\u5176\u5b9e\u90fd\u5341\u5206\u7c7b\u4f3c\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u533a\u522b\u4e3b\u8981\u5728\u4ee5\u4e0b\u4e24\u4e2a\u65b9\u9762\uff1a \u5f15\u7528\u4e0a\u4e0b\u6587\u5bf9\u8c61\u7684\u65b9\u5f0f\uff08this \u6216 it\uff09 \u8fd4\u56de\u503c","title":"Kotlin \u4f5c\u7528\u57df\u51fd\u6570"},{"location":"Kotlin/%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%87%BD%E6%95%B0/#1this-it","text":"\u5728\u4f5c\u7528\u57df\u51fd\u6570\u7684 lambda \u8868\u8fbe\u5f0f\u91cc\uff0c\u53ef\u4ee5\u4f7f\u7528 this\uff08\u4f5c\u4e3a lambda \u8868\u8fbe\u5f0f\u7684\u63a5\u6536\u8005\uff09\u6216 it\uff08\u4f5c\u4e3a lambda \u8868\u8fbe\u5f0f\u7684\u53c2\u6570\uff09\u6765\u8bbf\u95ee\u4e0a\u4e0b\u6587\u5bf9\u8c61\u3002 fun main (){ val str = \"Hello World!\" // this str . run { // \u9690\u5f0f\u5730\u8bbf\u95ee\u5bf9\u8c61 println ( length ) // \u7b49\u540c\u4e8e println(this.length) } str . apply { println ( this . length ) } with ( str ){ println ( this . length ) } // // it str . let { println ( it . length ) } str . also { println ( it . length ) } }","title":"\u533a\u522b1\uff1a\u4e0a\u4e0b\u6587\u5bf9\u8c61\uff08this \u6216 it\uff09"},{"location":"Kotlin/%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%87%BD%E6%95%B0/#this","text":"run\u3001with \u548c apply \u901a\u8fc7 this \u5f15\u7528\u4e0a\u4e0b\u6587\u5bf9\u8c61\uff0c\u5927\u591a\u6570\u65f6\u5019 this \u53ef\u4ee5\u7701\u7565\u3002\u5982\u679c\u5728\u4f5c\u7528\u57df\u51fd\u6570 lambda \u8868\u8fbe\u5f0f\u4e2d\uff0c\u4e3b\u8981\u5bf9\u5bf9\u8c61\u6210\u5458\u8fdb\u884c\u64cd\u4f5c\uff08\u8c03\u7528\u5176\u51fd\u6570\u6216\u5bf9\u5176\u5c5e\u6027\u8fdb\u884c\u8d4b\u503c\uff09\uff0c\u90a3\u4e48\u6700\u597d\u5c06\u4e0a\u4e0b\u6587\u5bf9\u8c61\u4f5c\u4e3a\u63a5\u6536\u8005\uff08this\uff09\u3002 fun main (){ Person ( \"\u5f20\u4e09\" ). apply { goTo ( \"KFC\" ) eat ( \"hamburg\" ) drink ( \"water\" ) sleep () } }","title":"this"},{"location":"Kotlin/%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%87%BD%E6%95%B0/#it","text":"let \u548c also \u5c06\u4e0a\u4e0b\u6587\u5bf9\u8c61\u4f5c\u4e3a lambda \u8868\u8fbe\u5f0f\u53c2\u6570\u3002\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u53c2\u6570\u540d\uff0c\u53ef\u4ee5\u4f7f\u7528\u9690\u5f0f\u9ed8\u8ba4\u540d\u79f0 it \u8bbf\u95ee\u3002\u5f53\u4e0a\u4e0b\u6587\u5bf9\u8c61\u5728\u4f5c\u7528\u57df\u51fd\u6570 lambda \u8868\u8fbe\u5f0f\u4e2d\u4e3b\u8981\u5145\u5f53\u53c2\u6570\u89d2\u8272\u65f6\uff0c\u6700\u597d\u4f7f\u7528 it \u4f5c\u4e3a\u4e0a\u4e0b\u6587\u5bf9\u8c61\u3002 fun isEvenNum ( num : Int ) = println ( \" $ num is even number? \" + ( num % 2 ) == 0 ) fun main (){ 100.l et { isEvenNum ( it ) } // \u5f53\u5c06\u4e0a\u4e0b\u6587\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u65f6\uff0c\u53ef\u4ee5\u4e3a\u4e0a\u4e0b\u6587\u5bf9\u8c61\u6307\u5b9a\u5728\u4f5c\u7528\u57df\u5185\u7684\u81ea\u5b9a\u4e49\u540d\u79f0 100.l et { num -> isEvenNum ( num ) } }","title":"it"},{"location":"Kotlin/%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%87%BD%E6%95%B0/#2","text":"\u4f5c\u7528\u57df\u51fd\u6570\u8fd4\u56de\u503c\u53ef\u5206\u4e3a\u4ee5\u4e0b\u4e24\u79cd\uff1a \u8fd4\u56de\u4e0a\u4e0b\u6587\u5bf9\u8c61\uff08apply \u548c also\uff09 \u8fd4\u56de lambda \u8868\u8fbe\u5f0f\u7ed3\u679c\uff08let\u3001run \u548c with\uff09","title":"\u533a\u522b2\uff1a\u8fd4\u56de\u503c"},{"location":"Kotlin/%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%87%BD%E6%95%B0/#_1","text":"val numList = mutableListOf < Int > () numList . also { println ( \"\u5f00\u59cb\u6dfb\u52a0\u6570\u636e\" ) } // \u56e0\u4e3a also \u8fd4\u56de\u7684\u662f\u4e0a\u4e0b\u6587\u5bf9\u8c61\uff08numList\uff09\uff0c\u6240\u4ee5\u53ef\u4ee5\u7ee7\u7eed\u94fe\u5f0f\u8c03\u7528 . apply { add ( 20 ) add ( 50 ) add ( 100 ) } . also { println ( \"\u6dfb\u52a0\u7ed3\u675f\" ) } . sort ()","title":"\u8fd4\u56de\u4e0a\u4e0b\u6587\u5bf9\u8c61"},{"location":"Kotlin/%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%87%BD%E6%95%B0/#lambda","text":"val nums = mutableListOf < Int > () val countOfEven = nums . run { add ( 1 ) add ( 2 ) add ( 3 ) add ( 4 ) add ( 5 ) count { it % 2 == 0 } } println ( \"\u6570\u7ec4\u6709 $ countOfEven \u4e2a\u5076\u6570\" )","title":"\u8fd4\u56de Lambda \u8868\u8fbe\u5f0f\u7ed3\u679c"},{"location":"Kotlin/%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%87%BD%E6%95%B0/#_2","text":"","title":"\u603b\u7ed3"},{"location":"Kotlin/%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%87%BD%E6%95%B0/#let","text":"\u4e0a\u4e0b\u6587\u5bf9\u8c61\u4f5c\u4e3a lambda \u8868\u8fbe\u5f0f\u7684\u53c2\u6570\uff08it\uff09\uff0c\u8fd4\u56de lambda \u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u3002","title":"let\uff1a"},{"location":"Kotlin/%E5%8D%8F%E7%A8%8B/","text":"\u534f\u7a0b \u00b6 Kotlin \u4e2d\u7684 \u534f\u7a0b \u662f\u4e00\u9879\u975e\u5e38\u6709\u7279\u8272\u7684\u6280\u672f\uff0c\u56e0\u4e3a\u5927\u90e8\u5206\u7f16\u7a0b\u8bed\u8a00\u4e2d\u662f\u6ca1\u6709\u534f\u7a0b\u8fd9\u4e2a\u6982\u5ff5\u7684\u3002\u5b83\u5176\u5b9e\u548c\u7ebf\u7a0b\u662f\u6709\u70b9\u7c7b\u4f3c\u7684\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u5c06\u5b83\u7406\u89e3\u6210\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u7ebf\u7a0b\u3002\u8981\u77e5\u9053\uff0c\u6211\u4eec\u4e4b\u524d\u6240\u5b66\u4e60\u7684\u7ebf\u7a0b\u662f\u975e\u5e38\u91cd\u91cf\u7ea7\u7684\uff0c\u5b83\u9700\u8981\u4f9d\u9760\u64cd\u4f5c\u7cfb\u7edf\u7684\u8c03\u5ea6\u624d\u80fd\u5b9e\u73b0\u4e0d\u540c\u7ebf\u7a0b\u4e4b\u95f4\u7684\u5207\u6362\u3002\u800c\u4f7f\u7528\u534f\u7a0b\u5374\u53ef\u4ee5\u4ec5\u5728\u7f16\u7a0b\u8bed\u8a00\u7684\u5c42\u9762\u5c31\u80fd\u5b9e\u73b0\u4e0d\u540c\u534f\u7a0b\u4e4b\u95f4\u7684\u5207\u6362\uff0c\u4ece\u800c\u5927\u5927\u63d0\u5347\u4e86\u5e76\u53d1\u7f16\u7a0b\u7684\u8fd0\u884c\u6548\u7387\u3002\u4e3e\u4e00\u4e2a\u5177\u4f53\u70b9\u7684\u4f8b\u5b50\uff0c\u6bd4\u5982\u6211\u4eec\u6709\u5982\u4e0b abc() \u548c xyz() \u4e24\u4e2a\u65b9\u6cd5\uff1a fun abc () { a () b () c () } fun xyz () { x () y () z () } \u5728\u6ca1\u6709\u5f00\u542f\u7ebf\u7a0b\u7684\u60c5\u51b5\u4e0b\uff0c\u5148\u540e\u8c03\u7528 abc() \u548c xyz() \uff0c\u90a3\u4e48\u7406\u8bba\u4e0a\u7ed3\u679c\u4e00\u5b9a\u662f a() \u3001 b() \u3001 c() \u6267\u884c\u5b8c\u4e86\u4ee5\u540e\uff0c x() \u3001 y() \u3001 z() \u624d\u80fd\u591f\u5f97\u5230\u6267\u884c\u3002 \u5982\u679c\u4f7f\u7528\u4e86\u534f\u7a0b\uff0c\u5728\u534f\u7a0b A \u4e2d\u53bb\u8c03\u7528 abc() \u65b9\u6cd5\uff0c\u534f\u7a0b B \u4e2d\u53bb\u8c03\u7528 xyz() \u65b9\u6cd5\uff0c\u867d\u7136\u5b83\u4eec\u4ecd\u7136\u4f1a\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u7ebf\u7a0b\u5f53\u4e2d\uff0c\u4f46\u662f\u5728\u6267\u884c abc() \u65b9\u6cd5\u65f6\u968f\u65f6\u90fd\u6709\u53ef\u80fd\u88ab\u6302\u8d77\u8f6c\u800c\u53bb\u6267\u884c xyz() \u65b9\u6cd5\uff0c\u6267\u884c xyz() \u65b9\u6cd5\u65f6\u4e5f\u968f\u65f6\u90fd\u6709\u53ef\u80fd\u88ab\u6302\u8d77\u8f6c\u800c\u7ee7\u7eed\u6267\u884c abc() \u65b9\u6cd5\uff0c\u6700\u7ec8\u7684\u8f93\u51fa\u7ed3\u679c\u4e5f\u5c31\u53d8\u5f97\u4e0d\u786e\u5b9a\u4e86\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u534f\u7a0b\u5141\u8bb8\u6211\u4eec\u5728\u5355\u7ebf\u7a0b\u6a21\u5f0f\u4e0b\u6a21\u62df\u591a\u7ebf\u7a0b\u7f16\u7a0b\u7684\u6548\u679c\uff0c\u4ee3\u7801\u6267\u884c\u65f6\u7684\u6302\u8d77\u4e0e\u6062\u590d\u5b8c\u5168\u662f\u7531\u7f16\u7a0b\u8bed\u8a00\u6765\u63a7\u5236\u7684\uff0c\u548c\u64cd\u4f5c\u7cfb\u7edf\u65e0\u5173\u3002\u8fd9\u79cd\u7279\u6027\u4f7f\u5f97\u9ad8\u5e76\u53d1\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u7387\u5f97\u5230\u4e86\u6781\u5927\u7684\u63d0\u5347\uff0c\u8bd5\u60f3\u4e00\u4e0b\uff0c\u5f00\u542f10\u4e07\u4e2a\u7ebf\u7a0b\u5b8c\u5168\u662f\u4e0d\u53ef\u60f3\u8c61\u7684\u4e8b\u5427\uff1f\u800c\u5f00\u542f10\u4e07\u4e2a\u534f\u7a0b\u5c31\u662f\u5b8c\u5168\u53ef\u884c\u7684\uff0c\u5f85\u4f1a\u6211\u4eec\u5c31\u4f1a\u5bf9\u8fd9\u4e2a\u529f\u80fd\u8fdb\u884c\u9a8c\u8bc1\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u5f00\u59cb\u5b66\u4e60 Kotlin \u4e2d\u534f\u7a0b\u7684\u7528\u6cd5\u3002 1. GlobalScope.launch \u00b6 \u5f15\u5165 Kotlin \u534f\u7a0b\uff1a dependencies { implementation ( \"org.jetbrains.kotlinx:kotlinx-coroutines-core:{Version}\" ) } \u5982\u4f55\u5f00\u542f\u4e00\u4e2a\u534f\u7a0b\uff1f\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u5c31\u662f\u4f7f\u7528 Global.launch \u51fd\u6570\uff1a fun main () { Global . launch { println ( \"Code run in coroutine scope\" ) } } GlobalScope.launch \u51fd\u6570\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u534f\u7a0b\u7684\u4f5c\u7528\u57df\uff0c\u4f20\u9012\u7ed9 launch \u51fd\u6570\u7684\u4ee3\u7801\u5757\uff08Lambda\u8868\u8fbe\u5f0f\uff09\u5c31\u662f\u5728\u534f\u7a0b\u4e2d\u8fd0\u884c\u7684\u4e86\uff0c\u8fd9\u91cc\u6211\u4eec\u53ea\u662f\u5728\u4ee3\u7801\u5757\u4e2d\u6253\u5370\u4e86\u4e00\u53e5\u8bdd\u3002\u8fd0\u884c\u7a0b\u5e8f\uff0c\u4f60\u4f1a\u53d1\u73b0\u6ca1\u6709\u4efb\u4f55\u65e5\u5fd7\u8f93\u51fa\u3002\u8fd9\u662f\u56e0\u4e3a Global.launch \u51fd\u6570\u6bcf\u6b21\u521b\u5efa\u7684\u90fd\u662f\u4e00\u4e2a\u9876\u5c42\u534f\u7a0b\uff0c\u8fd9\u79cd\u534f\u7a0b\u5f53\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u675f\u65f6\u4e5f\u4f1a\u8ddf\u7740\u4e00\u8d77\u7ed3\u675f\u3002\u521a\u624d\u7684\u65e5\u5fd7\u4e4b\u6240\u4ee5\u65e0\u6cd5\u6253\u5370\u51fa\u6765\uff0c\u5c31\u662f\u56e0\u4e3a\u4ee3\u7801\u5757\u4e2d\u7684\u4ee3\u7801\u8fd8\u6ca1\u6765\u5f97\u53ca\u8fd0\u884c\uff0c\u5e94\u7528\u7a0b\u5e8f\u5c31\u7ed3\u675f\u4e86\u3002\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e5f\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u8ba9\u7a0b\u5e8f\u5ef6\u8fdf\u4e00\u6bb5\u65f6\u95f4\u518d\u7ed3\u675f\u5c31\u884c\u4e86\uff0c\u5982\u4e0b\u6240\u793a\uff1a fun main () { Global . launch { println ( \"Code run in coroutine scope\" ) } Thread . sleep ( 1000 ) } 2. runBlocking \u00b6 \u4e0d\u8fc7\u4e0a\u9762\u7684\u5199\u6cd5\u8fd8\u662f\u5b58\u5728\u95ee\u9898\uff0c\u5982\u679c\u4ee3\u7801\u5757\u4e2d\u7684\u4ee3\u7801\u57281\u79d2\u949f\u4e4b\u5185\u4e0d\u80fd\u8fd0\u884c\u7ed3\u675f\uff0c\u90a3\u4e48\u5c31\u4f1a\u88ab\u5f3a\u5236\u4e2d\u65ad\uff1a fun main () { Global . launch { println ( \"Codes run in coroutine scope\" ) delay ( 1500 ) println ( \"Codes run in coroutine scope finished\" ) } Thread . sleep ( 1000 ) } \u6211\u4eec\u5728\u4ee3\u7801\u5757\u4e2d\u52a0\u5165\u4e86\u4e00\u4e2a delay() \u51fd\u6570\uff0c\u5e76\u5728\u4e4b\u540e\u53c8\u6253\u5370\u4e86\u4e00\u884c\u65e5\u5fd7\u3002 delay() \u53ef\u4ee5\u8ba9\u5f53\u524d\u534f\u7a0b\u5ef6\u8fdf\u6307\u5b9a\u65f6\u95f4\u540e\u518d\u8fd0\u884c\uff0c\u4f46\u5b83\u548c Thread.sleep() \u65b9\u6cd5\u4e0d\u540c\u3002 delay() \u662f\u4e00\u4e2a\u975e\u963b\u585e\u5f0f\u7684\u6302\u8d77\u51fd\u6570\uff0c\u5b83\u53ea\u4f1a\u6302\u8d77\u5f53\u524d\u534f\u7a0b\uff0c\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u534f\u7a0b\u7684\u8fd0\u884c\u3002\u800c Thread.sleep() \u65b9\u6cd5\u4f1a\u963b\u585e\u5f53\u524d\u7684\u7ebf\u7a0b\uff0c\u8fd0\u884c\u5728\u8be5\u7ebf\u7a0b\u4e0b\u7684\u6240\u6709\u534f\u7a0b\u90fd\u4f1a\u88ab\u963b\u585e\u3002\u6ce8\u610f\uff0c delay() \u51fd\u6570\u53ea\u80fd\u5728\u534f\u7a0b\u7684\u4f5c\u7528\u57df\u6216\u5176\u4ed6\u6302\u8d77\u51fd\u6570\u4e2d\u8c03\u7528\u3002 \u8fd9\u91cc\u6211\u4eec\u8ba9\u534f\u7a0b\u6302\u8d771.5\u79d2\uff0c\u4f46\u662f\u4e3b\u7ebf\u7a0b\u5374\u53ea\u963b\u585e\u4e861\u79d2\uff0c\u91cd\u65b0\u8fd0\u884c\u7a0b\u5e8f\uff0c\u4f1a\u53d1\u73b0\u4ee3\u7801\u5757\u4e2d\u6700\u540e\u4e00\u6761\u65e5\u5fd7\u5e76\u6ca1\u6709\u6253\u5370\u51fa\u6765\uff0c\u56e0\u4e3a\u5b83\u8fd8\u6ca1\u80fd\u6765\u5f97\u53ca\u8fd0\u884c\uff0c\u5e94\u7528\u7a0b\u5e8f\u5c31\u5df2\u7ecf\u7ed3\u675f\u4e86\u3002\u90a3\u4e48\u6709\u6ca1\u6709\u4ec0\u4e48\u529e\u6cd5\u80fd\u8ba9\u5e94\u7528\u7a0b\u5e8f\u5728\u534f\u7a0b\u4e2d\u6240\u6709\u4ee3\u7801\u90fd\u8fd0\u884c\u5b8c\u4e86\u4e4b\u540e\u518d\u7ed3\u675f\u5462\uff1f\u501f\u52a9 runBlocking \u51fd\u6570\u5c31\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff1a fun main () { runBlocking { println ( \"Codes run in coroutine scope\" ) delay ( 1500 ) println ( \"Codes run in coroutine scope finished\" ) } } runBlocking \u51fd\u6570\u540c\u6837\u4f1a\u521b\u5efa\u4e00\u4e2a\u534f\u7a0b\u7684\u4f5c\u7528\u57df\uff0c\u4f46\u662f\u5b83 \u53ef\u4ee5\u4fdd\u8bc1\u5728\u534f\u7a0b\u4f5c\u7528\u57df\u5185\u7684\u6240\u6709\u4ee3\u7801\u548c\u5b50\u534f\u7a0b\u6ca1\u6709\u5168\u90e8\u6267\u884c\u5b8c\u4e4b\u524d\u4e00\u76f4\u963b\u585e\u5f53\u524d\u7ebf\u7a0b \u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c runBlocking \u51fd\u6570\u901a\u5e38\u53ea\u5e94\u8be5\u5728\u6d4b\u8bd5\u73af\u5883\u4e0b\u4f7f\u7528\uff0c\u5728\u6b63\u5f0f\u73af\u5883\u4e2d\u4f7f\u7528\u5bb9\u6613\u4ea7\u751f\u4e00\u4e9b\u6027\u80fd\u4e0a\u7684\u95ee\u9898\u3002 3. launch \u00b6 \u867d\u8bf4\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u80fd\u591f\u8ba9\u4ee3\u7801\u5728\u534f\u7a0b\u4e2d\u8fd0\u884c\u4e86\uff0c\u53ef\u662f\u597d\u50cf\u5e76\u6ca1\u6709\u4f53\u4f1a\u5230\u4ec0\u4e48\u7279\u522b\u7684\u597d\u5904\u3002\u8fd9\u662f\u56e0\u4e3a\u76ee\u524d\u6240\u6709\u7684\u4ee3\u7801\u90fd\u662f\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u534f\u7a0b\u5f53\u4e2d\u7684\uff0c\u53ea\u6709\u6d89\u53ca\u5230\u9ad8\u5e76\u53d1\u7684\u5e94\u7528\u573a\u666f\uff0c\u534f\u7a0b\u76f8\u6bd4\u4e8e\u7ebf\u7a0b\u7684\u4f18\u52bf\u624d\u80fd\u4f53\u73b0\u51fa\u6765\u4e86\u3002\u5982\u4f55\u521b\u5efa\u591a\u4e2a\u534f\u7a0b\u5462\uff1f\u5f88\u7b80\u5355\uff0c\u4f7f\u7528 launch \u51fd\u6570\u5c31\u53ef\u4ee5\u4e86\uff1a fun main () { runBlocking { launch { println ( \"launch1\" ) delay ( 1000 ) println ( \"launch1 finished\" ) } launch { println ( \"launch2\" ) delay ( 1000 ) println ( \"launch2 finished\" ) } } } \u8fd0\u884c\u7ed3\u679c\uff1a launch1 launch2 launch1 finished launch2 finished \u6ce8\u610f\u8fd9\u91cc\u7684 launch \u51fd\u6570\u548c\u521a\u624d\u6240\u4f7f\u7528\u7684 GlobalScope.launch \u51fd\u6570\u4e0d\u540c\u3002\u9996\u5148\u5b83 \u5fc5\u987b\u5728\u534f\u7a0b\u7684\u4f5c\u7528\u57df\u4e2d\u624d\u80fd\u8c03\u7528 \uff0c\u5176\u6b21\u5b83 \u4f1a\u5728\u5f53\u524d\u534f\u7a0b\u7684\u4f5c\u7528\u57df\u4e0b\u521b\u5efa\u5b50\u534f\u7a0b \u3002\u5b50\u534f\u7a0b\u7684\u7279\u70b9\u662f\u5982\u679c\u5916\u5c42\u4f5c\u7528\u57df\u7684\u534f\u7a0b\u7ed3\u675f\u4e86\uff0c\u8be5\u4f5c\u7528\u57df\u4e0b\u7684\u6240\u6709\u5b50\u534f\u7a0b\u4e5f\u4f1a\u4e00\u540c\u7ed3\u675f\u3002\u76f8\u6bd4\u800c\u8a00\uff0c GlobalScope.launch \u51fd\u6570\u521b\u5efa\u7684\u6c38\u8fdc\u662f\u9876\u5c42\u534f\u7a0b\uff0c\u8fd9\u4e00\u70b9\u548c\u7ebf\u7a0b\u6bd4\u8f83\u50cf\uff0c\u56e0\u4e3a\u7ebf\u7a0b\u4e5f\u6ca1\u6709\u5c42\u7ea7\u8fd9\u4e00\u8bf4\uff0c\u6c38\u8fdc\u90fd\u662f\u9876\u5c42\u7684\u3002\u8fd9\u91cc\u6211\u4eec\u8c03\u7528\u4e86\u4e24\u6b21launch\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u521b\u5efa\u4e86\u4e24\u4e2a\u5b50\u534f\u7a0b\u3002 \u4ece\u8fd0\u884c\u7ed3\u679c\u53ef\u4ee5\u770b\u51fa\uff0c\u4e24\u4e2a\u5b50\u534f\u7a0b\u4e2d\u7684\u65e5\u5fd7\u662f\u4ea4\u66ff\u6253\u5370\u7684\uff0c\u8bf4\u660e\u5b83\u4eec\u786e\u5b9e\u662f\u50cf\u591a\u7ebf\u7a0b\u90a3\u6837\u5e76\u53d1\u8fd0\u884c\u7684\u3002\u7136\u800c\u8fd9\u4e24\u4e2a\u5b50\u534f\u7a0b\u5b9e\u9645\u5374\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u7ebf\u7a0b\u5f53\u4e2d\uff0c\u53ea\u662f\u7531\u7f16\u7a0b\u8bed\u8a00\u6765\u51b3\u5b9a\u5982\u4f55\u5728\u591a\u4e2a\u534f\u7a0b\u4e4b\u95f4\u8fdb\u884c\u8c03\u5ea6\uff0c\u8ba9\u8c01\u8fd0\u884c\uff0c\u8ba9\u8c01\u6302\u8d77\u3002\u8c03\u5ea6\u7684\u8fc7\u7a0b\u5b8c\u5168\u4e0d\u9700\u8981\u64cd\u4f5c\u7cfb\u7edf\u53c2\u4e0e\uff0c\u8fd9\u4e5f\u5c31\u4f7f\u5f97\u534f\u7a0b\u7684\u5e76\u53d1\u6548\u7387\u4f1a\u51fa\u5947\u5f97\u9ad8\uff1a fun main () { val start = System . currentTimeMillis () runBlocking { repeat ( 100000 ) { launch { println ( \"@\" ) } } } val end = System . currentTimeMillis () println ( start - end ) } \u8fd0\u884c\u7ed3\u679c\uff1a @ ... @ 961 \u8fd9\u91cc\u4f7f\u7528 repea t\u51fd\u6570\u5faa\u73af\u521b\u5efa\u4e8610\u4e07\u4e2a\u534f\u7a0b\uff0c\u8fd9\u91cc\u4ec5\u4ec5\u8017\u65f6\u4e86961\u6beb\u79d2\uff0c\u8fd9\u8db3\u4ee5\u8bc1\u660e\u534f\u7a0b\u6709\u591a\u4e48\u9ad8\u6548\u3002\u8bd5\u60f3\u4e00\u4e0b\uff0c\u5982\u679c\u5f00\u542f\u7684\u662f10\u4e07\u4e2a\u7ebf\u7a0b\uff0c\u7a0b\u5e8f\u6216\u8bb8\u5df2\u7ecf\u51fa\u73b0OOM\u5f02\u5e38\u4e86\u3002 4. suspend \u00b6 \u968f\u7740 launch \u51fd\u6570\u4e2d\u7684\u903b\u8f91\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u53ef\u80fd\u4f60\u9700\u8981\u5c06\u90e8\u5206\u4ee3\u7801\u63d0\u53d6\u5230\u4e00\u4e2a\u5355\u72ec\u7684\u51fd\u6570\u4e2d\u3002\u8fd9\u4e2a\u65f6\u5019\u5c31\u4ea7\u751f\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u6211\u4eec\u5728 launch \u51fd\u6570\u4e2d\u7f16\u5199\u7684\u4ee3\u7801\u662f\u62e5\u6709\u534f\u7a0b\u4f5c\u7528\u57df\u7684\uff0c\u4f46\u662f\u63d0\u53d6\u5230\u4e00\u4e2a\u5355\u72ec\u7684\u51fd\u6570\u4e2d\u5c31\u6ca1\u6709\u534f\u7a0b\u4f5c\u7528\u57df\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u8be5\u5982\u4f55\u8c03\u7528\u50cf delay() \u8fd9\u6837\u7684\u6302\u8d77\u51fd\u6570\u5462\uff1f\u4e3a\u6b64 Kotlin \u63d0\u4f9b\u4e86\u4e00\u4e2a suspend \u5173\u952e\u5b57\uff0c\u4f7f\u7528\u5b83\u53ef\u4ee5\u5c06\u4efb\u610f\u51fd\u6570\u58f0\u660e\u6210\u6302\u8d77\u51fd\u6570\uff0c\u800c\u6302\u8d77\u51fd\u6570\u4e4b\u95f4\u90fd\u662f\u53ef\u4ee5\u4e92\u76f8\u8c03\u7528\u7684\uff0c\u5982\u4e0b\u6240\u793a\uff1a suspend fun printDot () { println ( \".\" ) delay ( 1000 ) } 5. coroutineScope \u00b6 suspend \u5173\u952e\u5b57\u53ea\u80fd\u5c06\u4e00\u4e2a\u51fd\u6570\u58f0\u660e\u6210\u6302\u8d77\u51fd\u6570\uff0c\u662f\u65e0\u6cd5\u7ed9\u5b83\u63d0\u4f9b\u534f\u7a0b\u4f5c\u7528\u57df\u7684\u3002\u5982\u679c\u5c1d\u8bd5\u5728 printDot() \u4e2d\u8c03\u7528 launch \u51fd\u6570\uff0c\u4e00\u5b9a\u662f\u65e0\u6cd5\u8c03\u7528\u6210\u529f\u7684\u3002\u501f\u52a9 coroutineScope \u51fd\u6570\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 coroutineScope \u51fd\u6570\u4e5f\u662f\u4e00\u4e2a\u6302\u8d77\u51fd\u6570\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u4efb\u4f55\u5176\u4ed6\u6302\u8d77\u51fd\u6570\u4e2d\u8c03\u7528\u3002\u5b83\u7684\u7279\u70b9\u662f \u4f1a\u7ee7\u627f\u5916\u90e8\u7684\u534f\u7a0b\u7684\u4f5c\u7528\u57df\u5e76\u521b\u5efa\u4e00\u4e2a\u5b50\u534f\u7a0b \uff0c\u501f\u52a9\u8fd9\u4e2a\u7279\u6027\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7ed9\u4efb\u610f\u6302\u8d77\u51fd\u6570\u63d0\u4f9b\u534f\u7a0b\u4f5c\u7528\u57df\u4e86\uff1a suspend fun printDot () = coroutineScope { launch { println ( \".\" ) delay ( 1000 ) } } \u53e6\u5916\uff0c coroutineScope \u51fd\u6570\u548c runBlocking \u51fd\u6570\u6709\u70b9\u7c7b\u4f3c\uff0c coroutineScope \u53ef\u4ee5\u4fdd\u8bc1\u5176\u4f5c\u7528\u57df\u5185\u7684\u6240\u6709\u4ee3\u7801\u548c\u5b50\u534f\u7a0b\u5728\u5168\u90e8\u6267\u884c\u5b8c\u4e4b\u524d\uff0c\u5f53\u524d\u4f5c\u7528\u57df\uff08\u534f\u7a0b\uff09\u4f1a\u4e00\u76f4\u88ab\u6302\u8d77\uff1a fun main () { // \u7ebf\u7a0bA runBlocking { // \u534f\u7a0bB coroutineScope { launch { for ( i in 1. . 10 ) { println ( i ) delay ( 1000 ) } } } println ( \"coroutineScope finished\" ) } println ( \"runBlocking finished\" ) } \u8fd0\u884c\u7ed3\u679c\uff1a 1 2 ... 9 10 coroutineScope finished //\uff08\u56e0\u4e3a coroutineScope \u4f1a\u7ee7\u627f\u5e76\u963b\u585e\u534f\u7a0b B\uff0c\u5f53 coroutineScope \u5185\u7684\u6240\u6709\u4ee3\u7801\u4ee5\u53ca\u5b50\u534f\u7a0b\u90fd\u6267\u884c\u5b8c\u540e\u624d\u6253\u5370 \"coroutineScope finished\"\uff09 runBlocking finished //\uff08\u56e0\u4e3a runBlocking \u6302\u8d77\u5916\u90e8\u7ebf\u7a0b A\uff0c\u6240\u4ee5\u6700\u540e\u624d\u6253\u5370 \"runBlocking finished\"\uff09 \u8fd9\u91cc\u5148\u4f7f\u7528 runBlocking \u51fd\u6570\u521b\u5efa\u4e86\u4e00\u4e2a\u534f\u7a0b\u4f5c\u7528\u57df\uff0c\u7136\u540e\u8c03\u7528 coroutineScope \u51fd\u6570\u521b\u5efa\u4e86\u4e00\u4e2a\u5b50\u534f\u7a0b\u3002\u5728 coroutineScope \u7684\u4f5c\u7528\u57df\u4e2d\uff0c\u6211\u4eec\u53c8\u8c03\u7528 launch \u51fd\u6570\u521b\u5efa\u4e86\u4e00\u4e2a\u5b50\u534f\u7a0b\uff0c\u5e76\u901a\u8fc7 for \u5faa\u73af\u4f9d\u6b21\u6253\u5370\u6570\u5b571\u523010\uff0c\u6bcf\u6b21\u6253\u5370\u95f4\u9694\u4e00\u79d2\u949f\u3002\u6700\u540e\u5728 runBlocking \u548c coroutineScope \u51fd\u6570\u7684\u7ed3\u5c3e\uff0c\u5206\u522b\u53c8\u6253\u5370\u4e86\u4e00\u884c\u65e5\u5fd7\u3002 \u4ece\u8fd0\u884c\u7ed3\u679c\u53ef\u4ee5\u770b\u51fa\u63a7\u5236\u53f0\u4f1a\u4ee51\u79d2\u949f\u7684\u95f4\u9694\u4f9d\u6b21\u8f93\u51fa\u6570\u5b571\u523010\uff0c\u7136\u540e\u624d\u4f1a\u6253\u5370 coroutineScope \u51fd\u6570\u7ed3\u5c3e\u7684\u65e5\u5fd7\uff0c\u6700\u540e\u6253\u5370 runBlocking \u51fd\u6570\u7ed3\u5c3e\u7684\u65e5\u5fd7\u3002\u7531\u6b64\u53ef\u89c1\uff0c coroutineScope \u786e\u5b9e\u662f\u5c06\u5916\u90e8\u534f\u7a0b\u6302\u8d77\u4e86\uff0c\u53ea\u6709\u5f53\u5b83\u4f5c\u7528\u57df\u5185\u7684\u6240\u6709\u4ee3\u7801\u548c\u5b50\u534f\u7a0b\u90fd\u6267\u884c\u5b8c\u6bd5\u4e4b\u540e\uff0c coroutineScope \u540e\u9762\u7684\u4ee3\u7801\u624d\u80fd\u5f97\u5230\u8fd0\u884c\u3002 \u867d\u7136\u770b\u4e0a\u53bb coroutineScope \u548c runBlocking \u7684\u4f5c\u7528\u662f\u6709\u70b9\u7c7b\u4f3c\u7684\uff0c\u4f46\u662f coroutineScope \u53ea\u4f1a\u963b\u585e\u5f53\u524d\u534f\u7a0b\uff0c\u65e2\u4e0d\u5f71\u54cd\u5176\u4ed6\u534f\u7a0b\uff0c\u4e5f\u4e0d\u5f71\u54cd\u4efb\u4f55\u7ebf\u7a0b \uff0c\u56e0\u6b64\u662f\u4e0d\u4f1a\u9020\u6210\u4efb\u4f55\u6027\u80fd\u4e0a\u7684\u95ee\u9898\u7684\u3002\u800c runBlocking \u7531\u4e8e\u4f1a\u6302\u8d77\u5916\u90e8\u7ebf\u7a0b \uff0c\u5982\u679c\u4f60\u6070\u597d\u53c8\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u5f53\u4e2d\u8c03\u7528\u5b83\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u6709\u53ef\u80fd\u4f1a\u5bfc\u81f4\u754c\u9762\u5361\u6b7b\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u4e0d\u592a\u63a8\u8350\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u4f7f\u7528\u3002 6. \u66f4\u591a\u7684\u4f5c\u7528\u57df\u6784\u9020\u5668 \u00b6 GlobalScope.launch \u3001 runBlocking \u3001 launch \u3001 coroutineScope \u8fd9\u51e0\u79cd\u4f5c\u7528\u57df\u6784\u5efa\u5668\u90fd\u53ef\u4ee5\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b\u4f5c\u7528\u57df\u3002\u4e0d\u8fc7 GlobalScope.launch \u548c runBlocking \u51fd\u6570\u662f\u53ef\u4ee5\u5728\u4efb\u610f\u5730\u65b9\u8c03\u7528\u7684\uff0c coroutineScope \u51fd\u6570\u53ef\u4ee5\u5728\u534f\u7a0b\u4f5c\u7528\u57df\u6216\u6302\u8d77\u51fd\u6570\u4e2d\u8c03\u7528\uff0c\u800c launch \u51fd\u6570\u53ea\u80fd\u5728\u534f\u7a0b\u4f5c\u7528\u57df\u4e2d\u8c03\u7528\u3002 \u524d\u9762\u5df2\u7ecf\u8bf4\u4e86\uff0c runBlocking \u7531\u4e8e\u4f1a\u963b\u585e\u7ebf\u7a0b\uff0c\u56e0\u6b64\u53ea\u5efa\u8bae\u5728\u6d4b\u8bd5\u73af\u5883\u4e0b\u4f7f\u7528\u3002\u800c GlobalScope.launch \u7531\u4e8e\u6bcf\u6b21\u521b\u5efa\u7684\u90fd\u662f\u9876\u5c42\u534f\u7a0b\uff0c\u4e00\u822c\u4e5f\u4e0d\u592a\u5efa\u8bae\u4f7f\u7528\uff0c\u9664\u975e\u4f60\u975e\u5e38\u660e\u786e\u5c31\u662f\u8981\u521b\u5efa\u9876\u5c42\u534f\u7a0b\u3002\u4e3a\u4ec0\u4e48\u8bf4\u4e0d\u592a\u5efa\u8bae\u4f7f\u7528\u9876\u5c42\u534f\u7a0b\u5462\uff1f\u4e3b\u8981\u8fd8\u662f\u56e0\u4e3a\u5b83\u7ba1\u7406\u8d77\u6765\u6210\u672c\u592a\u9ad8\u4e86\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6bd4\u5982\u6211\u4eec\u5728\u67d0\u4e2a Activity \u4e2d\u4f7f\u7528\u534f\u7a0b\u53d1\u8d77\u4e86\u4e00\u6761\u7f51\u7edc\u8bf7\u6c42\uff0c\u7531\u4e8e\u7f51\u7edc\u8bf7\u6c42\u662f\u8017\u65f6\u7684\uff0c\u7528\u6237\u5728\u670d\u52a1\u5668\u8fd8\u6ca1\u6765\u5f97\u53ca\u54cd\u5e94\u7684\u60c5\u51b5\u4e0b\u5c31\u5173\u95ed\u4e86\u5f53\u524dActivity\uff0c\u6b64\u65f6\u6309\u7406\u8bf4\u5e94\u8be5\u53d6\u6d88\u8fd9\u6761\u7f51\u7edc\u8bf7\u6c42\uff0c\u6216\u8005\u81f3\u5c11\u4e0d\u5e94\u8be5\u8fdb\u884c\u56de\u8c03\uff0c\u56de\u8c03\u4e86\u4e5f\u6ca1\u6709\u610f\u4e49\u3002\u534f\u7a0b\u8981\u600e\u6837\u53d6\u6d88\u5462\uff1f\u4e0d\u7ba1\u662f GlobalScope.launch \u51fd\u6570\u8fd8\u662f launch \u51fd\u6570\uff0c\u5b83\u4eec\u90fd\u4f1a\u8fd4\u56de\u4e00\u4e2a Job \u5bf9\u8c61\uff0c\u53ea\u9700\u8981\u8c03\u7528 Job \u5bf9\u8c61\u7684 cancel() \u65b9\u6cd5\u5c31\u53ef\u4ee5\u53d6\u6d88\u534f\u7a0b\u4e86\uff1a val job = GlobalScope . launch { } job . cancel () \u5982\u679c\u6211\u4eec\u6bcf\u6b21\u521b\u5efa\u7684\u90fd\u662f\u9876\u5c42\u534f\u7a0b\uff0c\u90a3\u4e48\u5f53 Activity \u5173\u95ed\u65f6\uff0c\u5c31\u9700\u8981\u9010\u4e2a\u8c03\u7528\u6240\u6709\u5df2\u521b\u5efa\u534f\u7a0b\u7684 cancel() \u65b9\u6cd5\u3002\u5b9e\u9645\u9879\u76ee\u4e2d\u6bd4\u8f83\u5e38\u7528\u7684\u5199\u6cd5\u5982\u4e0b\uff1a val job = Job () val scope = CoroutineScope ( job ) scope . launch { // \u5177\u4f53\u903b\u8f91 } job . cancel () \u5148\u521b\u5efa\u4e86\u4e00\u4e2a Job \u5bf9\u8c61\uff0c\u7136\u540e\u628a\u5b83\u4f20\u5165 CoroutineScope() \u51fd\u6570\u5f53\u4e2d\uff0c\u6ce8\u610f\u8fd9\u91cc\u7684 CoroutineScope() \u662f\u4e2a\u51fd\u6570\uff0c\u867d\u7136\u5b83\u7684\u547d\u540d\u66f4\u50cf\u662f\u4e00\u4e2a\u7c7b\u3002 CoroutineScope() \u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a CoroutineScope \u5bf9\u8c61\uff0c\u8fd9\u79cd\u8bed\u6cd5\u7ed3\u6784\u7684\u8bbe\u8ba1\u66f4\u50cf\u662f\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a CoroutineScope \u7684\u5b9e\u4f8b\uff0c\u53ef\u80fd\u4e5f\u662f Kotlin \u6709\u610f\u4e3a\u4e4b\u7684\u3002\u6709\u4e86 CoroutineScope \u5bf9\u8c61\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u968f\u65f6\u8c03\u7528\u5b83\u7684 launch \u51fd\u6570\u6765\u521b\u5efa\u4e00\u4e2a\u534f\u7a0b\u4e86\u3002\u73b0\u5728\u6240\u6709\u8c03\u7528 CoroutineScope \u7684 launch \u51fd\u6570\u6240\u521b\u5efa\u7684\u534f\u7a0b\uff0c\u90fd\u4f1a\u88ab\u5173\u8054\u5728 Job \u5bf9\u8c61\u7684\u4f5c\u7528\u57df\u4e0b\u9762\u3002\u8fd9\u6837\u53ea\u9700\u8981\u8c03\u7528\u4e00\u6b21 cancel() \u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u5c06\u540c\u4e00\u4f5c\u7528\u57df\u5185\u7684\u6240\u6709\u534f\u7a0b\u5168\u90e8\u53d6\u6d88\uff0c\u4ece\u800c\u5927\u5927\u964d\u4f4e\u4e86\u534f\u7a0b\u7ba1\u7406\u7684\u6210\u672c\u3002\u4e0d\u8fc7\u76f8\u6bd4\u4e4b\u4e0b\uff0c CoroutineScope() \u51fd\u6570\u66f4\u9002\u5408\u7528\u4e8e\u5b9e\u9645\u9879\u76ee\u5f53\u4e2d\uff0c\u5982\u679c\u53ea\u662f\u5728 main() \u51fd\u6570\u4e2d\u7f16\u5199\u4e00\u4e9b\u5b66\u4e60\u6d4b\u8bd5\u7528\u7684\u4ee3\u7801\uff0c\u8fd8\u662f\u4f7f\u7528 runBlocking \u51fd\u6570\u6700\u4e3a\u65b9\u4fbf\u3002 6.1 async \u00b6 \u8c03\u7528 launch \u51fd\u6570\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b\uff0c\u4f46\u662f launch \u51fd\u6570\u53ea\u80fd\u7528\u4e8e\u6267\u884c\u4e00\u6bb5\u903b\u8f91\uff0c\u5374\u4e0d\u80fd\u83b7\u53d6\u6267\u884c\u7684\u7ed3\u679c\uff0c\u56e0\u4e3a\u5b83\u7684\u8fd4\u56de\u503c\u6c38\u8fdc\u662f\u4e00\u4e2a Job \u5bf9\u8c61\u3002\u90a3\u4e48\u6709\u6ca1\u6709\u4ec0\u4e48\u529e\u6cd5\u80fd\u591f \u521b\u5efa\u4e00\u4e2a\u534f\u7a0b\u5e76\u83b7\u53d6\u5b83\u7684\u6267\u884c\u7ed3\u679c \u5462\uff1f\u5f53\u7136\u6709\uff0c\u4f7f\u7528 async \u51fd\u6570\u5c31\u53ef\u4ee5\u5b9e\u73b0\u3002 async \u51fd\u6570\u5fc5\u987b\u5728\u534f\u7a0b\u4f5c\u7528\u57df\u5f53\u4e2d\u624d\u80fd\u8c03\u7528\uff0c\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b50\u534f\u7a0b\u5e76\u8fd4\u56de\u4e00\u4e2a Deferred \u5bf9\u8c61 \uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u83b7\u53d6 async \u51fd\u6570\u4ee3\u7801\u5757\u7684\u6267\u884c\u7ed3\u679c\uff0c\u53ea\u9700\u8981\u8c03\u7528 Deferred \u5bf9\u8c61\u7684 await() \u65b9\u6cd5\u5373\u53ef\uff1a fun main () { runBlocking { val result = async { 5 + 5 }. await () println ( result ) } } \u4e8b\u5b9e\u4e0a\uff0c\u5728\u8c03\u7528\u4e86 async \u51fd\u6570\u4e4b\u540e\uff0c\u4ee3\u7801\u5757\u4e2d\u7684\u4ee3\u7801\u5c31\u4f1a\u7acb\u523b\u5f00\u59cb\u6267\u884c\u3002\u5f53\u8c03\u7528 await() \u65b9\u6cd5\u65f6\uff0c\u5982\u679c\u4ee3\u7801\u5757\u4e2d\u7684\u4ee3\u7801\u8fd8\u6ca1\u6267\u884c\u5b8c\uff0c\u90a3\u4e48 await() \u4f1a\u5c06\u5f53\u524d\u534f\u7a0b\u963b\u585e\u4f4f\uff0c\u76f4\u5230\u53ef\u4ee5\u83b7\u5f97 async \u51fd\u6570\u7684\u6267\u884c\u7ed3\u679c\u3002\u6211\u4eec\u6765\u9a8c\u8bc1\u4e00\u4e0b\uff1a fun main () { runBlocking { val start = System . currentTimeMillis () val result1 = async { delay ( 1000 ) 6 + 4 }. await () val result2 = async { delay ( 1000 ) 5 + 5 }. await () val end = System . currentTimeMillis () println ( \"result is ${ result1 + result2 } \" ) println ( \"cost ${ end - start } ms\" ) } } \u8fd0\u884c\u7ed3\u679c\uff1a result is 20 cost 2032 ms \u8fd9\u91cc\u8fde\u7eed\u4f7f\u7528\u4e86\u4e24\u4e2a async \u51fd\u6570\u6765\u6267\u884c\u4efb\u52a1\uff0c\u5e76\u5728\u4ee3\u7801\u5757\u4e2d\u8c03\u7528 delay() \u65b9\u6cd5\u8fdb\u884c1\u79d2\u7684\u5ef6\u8fdf\u3002\u6309\u7167\u521a\u624d\u7684\u7406\u8bba\uff0c await() \u65b9\u6cd5\u5728 async \u51fd\u6570\u4ee3\u7801\u5757\u4e2d\u7684\u4ee3\u7801\u6267\u884c\u5b8c\u4e4b\u524d\u4f1a\u4e00\u76f4\u5c06\u5f53\u524d\u534f\u7a0b\u963b\u585e\u4f4f\uff0c\u53ef\u4ee5\u770b\u5230\u8fd0\u884c\u8017\u65f62032\u6beb\u79d2\uff0c\u8bf4\u660e\u8fd9\u91cc\u7684\u4e24\u4e2a async \u51fd\u6570\u786e\u5b9e\u662f\u4e00\u79cd\u4e32\u884c\u7684\u5173\u7cfb\uff0c\u524d\u4e00\u4e2a\u6267\u884c\u5b8c\u4e86\u540e\u4e00\u4e2a\u624d\u80fd\u6267\u884c\u3002\u4f46\u662f\u8fd9\u79cd\u5199\u6cd5\u660e\u663e\u662f\u975e\u5e38\u4f4e\u6548\u7684\uff0c\u56e0\u4e3a\u4e24\u4e2a async \u51fd\u6570\u5b8c\u5168\u53ef\u4ee5\u540c\u65f6\u6267\u884c\u4ece\u800c\u63d0\u9ad8\u8fd0\u884c\u6548\u7387\u3002\u73b0\u5728\u5bf9\u4e0a\u8ff0\u4ee3\u7801\u8fdb\u884c\u4fee\u6539\uff1a fun main () { runBlocking { val start = System . currentTimeMillis () val deferred1 = async { delay ( 1000 ) 6 + 4 } val deferred2 = async { delay ( 1000 ) 5 + 5 } val end = System . currentTimeMillis () println ( \"result is ${ deferred1 . await () + deferred2 . await () } \" ) println ( \"cost ${ end - start } ms\" ) } } \u8fd0\u884c\u7ed3\u679c\uff1a result is 20 cost 1029 ms \u6211\u4eec\u4e0d\u5728\u6bcf\u6b21\u8c03\u7528 async \u51fd\u6570\u4e4b\u540e\u5c31\u7acb\u523b\u4f7f\u7528 await() \u65b9\u6cd5\u83b7\u53d6\u7ed3\u679c\u4e86\uff0c\u800c\u662f\u4ec5\u5728\u9700\u8981\u7528\u5230 async \u51fd\u6570\u7684\u6267\u884c\u7ed3\u679c\u65f6\u624d\u8c03\u7528 await() \u8fdb\u884c\u83b7\u53d6\uff0c\u8fd9\u6837\u4e24\u4e2a async \u51fd\u6570\u5c31\u53d8\u6210\u4e00\u79cd\u5e76\u884c\u5173\u7cfb\u4e86\u3002\u91cd\u65b0\u8fd0\u884c\u7a0b\u5e8f\uff0c\u73b0\u5728\u8fd0\u884c\u8017\u65f6\u53d8\u6210\u4e861029\u6beb\u79d2\uff0c\u8fd0\u884c\u6548\u7387\u7684\u63d0\u5347\u663e\u800c\u6613\u89c1\u3002 6.2 withContext() \u00b6 withContext() \u51fd\u6570\u662f\u4e00\u4e2a\u6302\u8d77\u51fd\u6570\uff0c\u5927\u4f53\u53ef\u4ee5\u5c06\u5b83\u7406\u89e3\u6210 async \u51fd\u6570\u7684\u4e00\u79cd\u7b80\u5316\u7248\u5199\u6cd5\uff1a fun main () { runBlocking { val result = withContext ( Dispatchers . Default ) { 5 + 5 } println ( result ) } } \u8c03\u7528withContext()\u51fd\u6570\u4e4b\u540e\uff0c\u4f1a\u7acb\u5373\u6267\u884c\u4ee3\u7801\u5757\u4e2d\u7684\u4ee3\u7801\uff0c\u540c\u65f6\u5c06\u5916\u90e8\u534f\u7a0b\u6302\u8d77\u3002\u5f53\u4ee3\u7801\u5757\u4e2d\u7684\u4ee3\u7801\u5168\u90e8\u6267\u884c\u5b8c\u4e4b\u540e\uff0c\u4f1a\u5c06\u6700\u540e\u4e00\u884c\u7684\u6267\u884c\u7ed3\u679c\u4f5c\u4e3a withContext() \u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u57fa\u672c\u4e0a\u76f8\u5f53\u4e8e val result= async { 5 + 5 }.await() \u7684\u5199\u6cd5\u3002\u552f\u4e00\u4e0d\u540c\u7684\u662f\uff0c withContext() \u51fd\u6570\u5f3a\u5236\u8981\u6c42\u6211\u4eec\u6307\u5b9a\u4e00\u4e2a\u7ebf\u7a0b\u53c2\u6570\uff0c\u534f\u7a0b\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u7ebf\u7a0b\u7684\u6982\u5ff5\uff0c\u56e0\u6b64\u5f88\u591a\u4f20\u7edf\u7f16\u7a0b\u60c5\u51b5\u4e0b\u9700\u8981\u5f00\u542f\u591a\u7ebf\u7a0b\u6267\u884c\u7684\u5e76\u53d1\u4efb\u52a1\uff0c\u73b0\u5728\u53ea\u9700\u8981\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e0b\u5f00\u542f\u591a\u4e2a\u534f\u7a0b\u6765\u6267\u884c\u5c31\u53ef\u4ee5\u4e86\u3002\u4f46\u662f\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u6211\u4eec\u5c31\u6c38\u8fdc\u4e0d\u9700\u8981\u5f00\u542f\u7ebf\u7a0b\u4e86\uff0c\u4f8b\u5982 Android \u4e2d\u8981\u6c42\u7f51\u7edc\u8bf7\u6c42\u5fc5\u987b\u5728\u5b50\u7ebf\u7a0b\u4e2d\u8fdb\u884c\uff0c\u5373\u4f7f\u4f60\u5f00\u542f\u4e86\u534f\u7a0b\u53bb\u6267\u884c\u7f51\u7edc\u8bf7\u6c42\uff0c\u5047\u5982\u5b83\u662f\u4e3b\u7ebf\u7a0b\u5f53\u4e2d\u7684\u534f\u7a0b\uff0c\u90a3\u4e48\u7a0b\u5e8f\u4ecd\u7136\u4f1a\u51fa\u9519\u3002\u8fd9\u65f6\u5019\u5c31\u5e94\u8be5\u901a\u8fc7\u7ebf\u7a0b\u53c2\u6570\u7ed9\u534f\u7a0b\u6307\u5b9a\u4e00\u4e2a\u5177\u4f53\u7684\u8fd0\u884c\u7ebf\u7a0b\u3002 \u7ebf\u7a0b\u53c2\u6570\u4e3b\u8981\u6709\u4ee5\u4e0b3\u79cd\u503c\u53ef\u9009\uff1a Dispatchers.Default \u3001 Dispatchers.IO \u548c Dispatchers.Main \u3002 Dispatchers.Default \u8868\u793a\u4f1a\u4f7f\u7528\u4e00\u79cd\u9ed8\u8ba4\u4f4e\u5e76\u53d1\u7684\u7ebf\u7a0b\u7b56\u7565\uff0c\u5f53\u4f60\u8981\u6267\u884c\u7684\u4ee3\u7801\u5c5e\u4e8e\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u65f6\uff0c\u5f00\u542f\u8fc7\u9ad8\u7684\u5e76\u53d1\u53cd\u800c\u53ef\u80fd\u4f1a\u5f71\u54cd\u4efb\u52a1\u7684\u8fd0\u884c\u6548\u7387\uff0c\u6b64\u65f6\u5c31\u53ef\u4ee5\u4f7f\u7528 Dispatchers.Default \u3002 Dispatchers.IO \u8868\u793a\u4f1a\u4f7f\u7528\u4e00\u79cd\u8f83\u9ad8\u5e76\u53d1\u7684\u7ebf\u7a0b\u7b56\u7565\uff0c\u5f53\u4f60\u8981\u6267\u884c\u7684\u4ee3\u7801\u5927\u591a\u6570\u65f6\u95f4\u662f\u5728\u963b\u585e\u548c\u7b49\u5f85\u4e2d\uff0c\u6bd4\u5982\u8bf4\u6267\u884c\u7f51\u7edc\u8bf7\u6c42\u65f6\uff0c\u4e3a\u4e86\u80fd\u591f\u652f\u6301\u66f4\u9ad8\u7684\u5e76\u53d1\u6570\u91cf\uff0c\u6b64\u65f6\u5c31\u53ef\u4ee5\u4f7f\u7528 Dispatchers.IO \u3002 Dispatchers.Main \u5219\u8868\u793a\u4e0d\u4f1a\u5f00\u542f\u5b50\u7ebf\u7a0b\uff0c\u800c\u662f\u5728 Android \u4e3b\u7ebf\u7a0b\u4e2d\u6267\u884c\u4ee3\u7801\uff0c\u4f46\u662f\u8fd9\u4e2a\u503c\u53ea\u80fd\u5728 Android \u9879\u76ee\u4e2d\u4f7f\u7528\uff0c\u7eaf Kotlin \u7a0b\u5e8f\u4f7f\u7528\u8fd9\u79cd\u7c7b\u578b\u7684\u7ebf\u7a0b\u53c2\u6570\u4f1a\u51fa\u73b0\u9519\u8bef\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u4e0a\u9762\u6240\u5b66\u7684\u534f\u7a0b\u4f5c\u7528\u57df\u6784\u5efa\u5668\u4e2d\uff0c\u9664\u4e86 coroutineScope \u51fd\u6570\u4e4b\u5916\uff0c\u5176\u4ed6\u6240\u6709\u7684\u51fd\u6570\u90fd\u662f\u53ef\u4ee5\u6307\u5b9a\u8fd9\u6837\u4e00\u4e2a\u7ebf\u7a0b\u53c2\u6570\u7684\uff0c\u53ea\u4e0d\u8fc7 withContext() \u51fd\u6570\u662f\u5f3a\u5236\u8981\u6c42\u6307\u5b9a\u7684\uff0c\u800c\u5176\u4ed6\u51fd\u6570\u5219\u662f\u53ef\u9009\u7684\u3002 7. \u4f7f\u7528\u534f\u7a0b\u7b80\u5316\u56de\u8c03\u7684\u5199\u6cd5 \u00b6 \u6211\u4eec\u5e38\u5e38\u7528\u56de\u8c03\u673a\u5236\u5b9e\u73b0\u83b7\u53d6\u5f02\u6b65\u7f51\u7edc\u8bf7\u6c42\u6570\u636e\u54cd\u5e94\u7684\u529f\u80fd\u3002\u8fd9\u79cd\u56de\u8c03\u673a\u5236\u57fa\u672c\u4e0a\u662f\u4f9d\u9760\u533f\u540d\u7c7b\u6765\u5b9e\u73b0\u7684\uff0c\u5199\u6cd5\u901a\u5e38\u6bd4\u8f83\u70e6\u7410\uff1a HttpUtil . sendHttpRequest ( address , object : HttpCallbackListener { override fun onFinish ( response : String ) { // \u5f97\u5230\u670d\u52a1\u5668\u8fd4\u56de\u7684\u5177\u4f53\u5185\u5bb9 } override fun onError ( e : Exception ) { // \u5bf9\u5f02\u5e38\u60c5\u51b5\u8fdb\u884c\u5904\u7406 } }) \u5728\u591a\u5c11\u4e2a\u5730\u65b9\u53d1\u8d77\u7f51\u7edc\u8bf7\u6c42\uff0c\u5c31\u9700\u8981\u7f16\u5199\u591a\u5c11\u6b21\u8fd9\u6837\u7684\u533f\u540d\u7c7b\u5b9e\u73b0\u3002\u6709\u6ca1\u6709\u66f4\u52a0\u7b80\u5355\u4e00\u70b9\u7684\u5199\u6cd5\u5462\uff1f\u501f\u52a9 Kotlin \u7684\u534f\u7a0b\u4f7f\u6211\u4eec\u7684\u8fd9\u79cd\u8bbe\u60f3\u6210\u4e3a\u4e86\u53ef\u80fd\uff0c\u4f7f\u7528 suspendCoroutine \u51fd\u6570\u5c31\u80fd\u5c06\u4f20\u7edf\u56de\u8c03\u673a\u5236\u7684\u5199\u6cd5\u5927\u5e45\u7b80\u5316\u3002 suspendCoroutine \u51fd\u6570\u5fc5\u987b\u5728\u534f\u7a0b\u4f5c\u7528\u57df\u6216\u6302\u8d77\u51fd\u6570\u4e2d\u624d\u80fd\u8c03\u7528\uff0c\u5b83\u63a5\u6536\u4e00\u4e2a Lambda \u8868\u8fbe\u5f0f\u53c2\u6570\uff0c\u4e3b\u8981\u4f5c\u7528\u662f\u5c06\u5f53\u524d\u534f\u7a0b\u7acb\u5373\u6302\u8d77\uff0c\u7136\u540e\u5728\u4e00\u4e2a\u666e\u901a\u7684\u7ebf\u7a0b\u4e2d\u6267\u884c Lambda \u8868\u8fbe\u5f0f\u4e2d\u7684\u4ee3\u7801\u3002Lambda \u8868\u8fbe\u5f0f\u7684\u53c2\u6570\u5217\u8868\u4e0a\u4f1a\u4f20\u5165\u4e00\u4e2a Continuation \u53c2\u6570\uff0c\u8c03\u7528\u5b83\u7684 resume() \u65b9\u6cd5\u6216 resumeWithException() \u53ef\u4ee5\u8ba9\u534f\u7a0b\u6062\u590d\u6267\u884c\u3002 suspend fun request ( address : String ): String = suspendCoroutine { continuation -> HttpUtil . sendHttpRequest ( address , object : HttpCallbackListener { override fun onFinish ( response : String ) { continuation . resume ( response ) } override fun onError ( e : Exception ) { continuation . resumeWithException ( t ) } }) } \u53ef\u4ee5\u770b\u5230\uff0c request() \u51fd\u6570\u662f\u4e00\u4e2a\u6302\u8d77\u51fd\u6570\uff0c\u63a5\u6536\u4e00\u4e2a address \u53c2\u6570\u3002\u5728 request() \u51fd\u6570\u7684\u5185\u90e8\u8c03\u7528\u4e86 suspendCoroutine \u51fd\u6570\uff0c\u8fd9\u6837\u5f53\u524d\u534f\u7a0b\u5c31\u4f1a\u88ab\u7acb\u523b\u6302\u8d77\uff0c\u800c Lambda \u8868\u8fbe\u5f0f\u4e2d\u7684\u4ee3\u7801\u5219\u4f1a\u5728\u666e\u901a\u7ebf\u7a0b\u4e2d\u6267\u884c\u3002\u63a5\u7740\u6211\u4eec\u5728Lambda\u8868\u8fbe\u5f0f\u4e2d\u8c03\u7528 HttpUtil.sendHttpRequest() \u65b9\u6cd5\u53d1\u8d77\u7f51\u7edc\u8bf7\u6c42\uff0c\u5e76\u901a\u8fc7\u4f20\u7edf\u56de\u8c03\u7684\u65b9\u5f0f\u76d1\u542c\u8bf7\u6c42\u7ed3\u679c\u3002\u5982\u679c\u8bf7\u6c42\u6210\u529f\u5c31\u8c03\u7528 Continuation\u7684resume() \u65b9\u6cd5\u6062\u590d\u88ab\u6302\u8d77\u7684\u534f\u7a0b\uff0c\u5e76\u4f20\u5165\u670d\u52a1\u5668\u54cd\u5e94\u7684\u6570\u636e\uff0c\u8be5\u503c\u4f1a\u6210\u4e3a suspendCoroutine \u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002\u5982\u679c\u8bf7\u6c42\u5931\u8d25\uff0c\u5c31\u8c03\u7528 Continuation \u7684 resumeWithException() \u6062\u590d\u88ab\u6302\u8d77\u7684\u534f\u7a0b\uff0c\u5e76\u4f20\u5165\u5177\u4f53\u7684\u5f02\u5e38\u539f\u56e0\u3002\u4f60\u53ef\u80fd\u4f1a\u8bf4\uff0c\u8fd9\u91cc\u4e0d\u662f\u4ecd\u7136\u4f7f\u7528\u4e86\u4f20\u7edf\u56de\u8c03\u7684\u5199\u6cd5\u5417\uff1f\u4ee3\u7801\u600e\u4e48\u5c31\u53d8\u5f97\u66f4\u52a0\u7b80\u5316\u4e86\uff1f\u8fd9\u662f\u56e0\u4e3a\uff0c\u4e0d\u7ba1\u4e4b\u540e\u6211\u4eec\u8981\u53d1\u8d77\u591a\u5c11\u6b21\u7f51\u7edc\u8bf7\u6c42\uff0c\u90fd\u4e0d\u9700\u8981\u518d\u91cd\u590d\u8fdb\u884c\u56de\u8c03\u5b9e\u73b0\u4e86\u3002\u6bd4\u5982\u8bf4\u83b7\u53d6\u767e\u5ea6\u9996\u9875\u7684\u54cd\u5e94\u6570\u636e\uff1a suspend fun getBaiduResponse () { try { val response = request ( \"https://www.baidu.com\" ) } catch ( e : Exception ) { // \u5bf9\u5f02\u5e38\u60c5\u51b5\u8fdb\u884c\u5904\u7406 } } \u7531\u4e8e getBaiduResponse() \u662f\u4e00\u4e2a\u6302\u8d77\u51fd\u6570\uff0c\u56e0\u6b64\u5f53\u5b83\u8c03\u7528\u4e86 request() \u51fd\u6570\u65f6\uff0c\u5f53\u524d\u7684\u534f\u7a0b\u5c31\u4f1a\u88ab\u7acb\u523b\u6302\u8d77\uff0c\u7136\u540e\u4e00\u76f4\u7b49\u5f85\u7f51\u7edc\u8bf7\u6c42\u6210\u529f\u6216\u5931\u8d25\u540e\uff0c\u5f53\u524d\u534f\u7a0b\u624d\u80fd\u6062\u590d\u8fd0\u884c\u3002\u8fd9\u6837\u5373\u4f7f\u4e0d\u4f7f\u7528\u56de\u8c03\u7684\u5199\u6cd5\uff0c\u6211\u4eec\u4e5f\u80fd\u591f\u83b7\u5f97\u5f02\u6b65\u7f51\u7edc\u8bf7\u6c42\u7684\u54cd\u5e94\u6570\u636e\uff0c\u800c\u5982\u679c\u8bf7\u6c42\u5931\u8d25\uff0c\u5219\u4f1a\u76f4\u63a5\u8fdb\u5165 catch \u8bed\u53e5\u5f53\u4e2d\u3002 \u4e0d\u8fc7\u8fd9\u91cc\u4f60\u53ef\u80fd\u53c8\u4f1a\u4ea7\u751f\u65b0\u7684\u7591\u60d1\uff0c getBaiduResponse() \u51fd\u6570\u88ab\u58f0\u660e\u6210\u4e86\u6302\u8d77\u51fd\u6570\uff0c\u8fd9\u6837\u5b83\u4e5f\u53ea\u80fd\u5728\u534f\u7a0b\u4f5c\u7528\u57df\u6216\u5176\u4ed6\u6302\u8d77\u51fd\u6570\u4e2d\u8c03\u7528\u4e86\uff0c\u4f7f\u7528\u8d77\u6765\u5c82\u4e0d\u662f\u975e\u5e38\u6709\u5c40\u9650\u6027\uff1f\u786e\u5b9e\uff0c\u56e0\u4e3a suspendCoroutine \u51fd\u6570\u672c\u8eab\u5c31\u662f\u8981\u7ed3\u5408\u534f\u7a0b\u4e00\u8d77\u4f7f\u7528\u7684\u3002 \u4e8b\u5b9e\u4e0a\uff0c suspendCoroutine \u51fd\u6570\u51e0\u4e4e\u53ef\u4ee5\u7528\u4e8e\u7b80\u5316\u4efb\u4f55\u56de\u8c03\u7684\u5199\u6cd5\uff0c\u6bd4\u5982\u4f7f\u7528 Retrofit \u6765\u53d1\u8d77\u7f51\u7edc\u8bf7\u6c42\u9700\u8981\u8fd9\u6837\u5199\uff1a fun main () { val retrofit = Retrofit . Builder () . baseUrl (...) . addConverterFactory (...) . build () val xxxService = retrofit . create ( XxxService :: class . java ) xxxService . getXXXData (). enqueue ( object : Call < ResponseBody > { override fun onResponse ( call : Call < ResponseBody > , response : Response < ResponseBody > ) { // \u5f97\u5230\u670d\u52a1\u5668\u8fd4\u56de\u7684\u6570\u636e } override onFailure ( call : Call < ResponseBody > , t : Throwable ) { t . printStackTrace () } }) } \u7531\u4e8e\u4e0d\u540c\u7684 Service \u63a5\u53e3\u8fd4\u56de\u7684\u6570\u636e\u7c7b\u578b\u4e5f\u4e0d\u540c\uff0c\u6240\u4ee5\u8fd9\u6b21\u6211\u4eec\u4e0d\u80fd\u50cf\u521a\u624d\u90a3\u6837\u9488\u5bf9\u5177\u4f53\u7684\u7c7b\u578b\u8fdb\u884c\u7f16\u7a0b\u4e86\uff0c\u800c\u662f\u8981\u4f7f\u7528\u6cdb\u578b\u7684\u65b9\u5f0f\u3002\u5b9a\u4e49\u4e00\u4e2a await() \u51fd\u6570\uff1a suspend fun < T > Call < T > . await (): T { return suspendCoroutine { continuation -> enqueue ( object : Call < T > { override fun onResponse ( call : Call < T > , response : Response < T > ) { val body = response . body () if ( body != null ) { continuation . resume ( body ) } else { RuntimeException ( \"response body is null\" ) } } override onFailure ( call : Call < ResponseBody > , t : Throwable ) { continuation . resumeWithException ( t ) } }) } } \u9996\u5148 await() \u51fd\u6570\u4ecd\u7136\u662f\u4e00\u4e2a\u6302\u8d77\u51fd\u6570\uff0c\u7136\u540e\u6211\u4eec\u7ed9\u5b83\u58f0\u660e\u4e86\u4e00\u4e2a\u6cdb\u578b T\uff0c\u5e76\u5c06 await() \u5b9a\u4e49\u6210\u4e86 Call<T> \u7684\u6269\u5c55\u51fd\u6570\uff0c\u8fd9\u6837\u6240\u6709\u8fd4\u56de\u503c\u662f Call \u7c7b\u578b\u7684 Retrofit \u7f51\u7edc\u8bf7\u6c42\u63a5\u53e3\u5c31\u90fd\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 await() \u51fd\u6570\u4e86\u3002\u63a5\u7740\uff0c await() \u51fd\u6570\u4e2d\u4f7f\u7528\u4e86 suspendCoroutine \u51fd\u6570\u6765\u6302\u8d77\u5f53\u524d\u534f\u7a0b\uff0c\u5e76\u4e14\u7531\u4e8e\u6269\u5c55\u51fd\u6570\u7684\u539f\u56e0\uff0c\u6211\u4eec\u73b0\u5728\u62e5\u6709\u4e86 Call \u5bf9\u8c61\u7684\u4e0a\u4e0b\u6587\uff0c\u90a3\u4e48\u8fd9\u91cc\u5c31\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 enqueue() \u65b9\u6cd5\u8ba9 Retrofit \u53d1\u8d77\u7f51\u7edc\u8bf7\u6c42\u3002\u63a5\u4e0b\u6765\uff0c\u4f7f\u7528\u540c\u6837\u7684\u65b9\u5f0f\u5bf9 Retrofit \u54cd\u5e94\u7684\u6570\u636e\u6216\u8005\u7f51\u7edc\u8bf7\u6c42\u5931\u8d25\u7684\u60c5\u51b5\u8fdb\u884c\u5904\u7406\u5c31\u53ef\u4ee5\u4e86\u3002\u53e6\u5916\u8fd8\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\uff0c\u5728 onResponse() \u56de\u8c03\u5f53\u4e2d\uff0c\u6211\u4eec\u8c03\u7528 body() \u65b9\u6cd5\u89e3\u6790\u51fa\u6765\u7684\u5bf9\u8c61\u662f\u53ef\u80fd\u4e3a\u7a7a\u7684\u3002\u5982\u679c\u4e3a\u7a7a\u7684\u8bdd\uff0c\u8fd9\u91cc\u7684\u505a\u6cd5\u662f\u624b\u52a8\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u4f60\u4e5f\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u903b\u8f91\u8fdb\u884c\u66f4\u52a0\u5408\u9002\u7684\u5904\u7406\u3002\u6709\u4e86 await() \u51fd\u6570\u4e4b\u540e\uff0c\u8c03\u7528\u6240\u6709 Retrofit \u7684 Service \u63a5\u53e3\u90fd\u4f1a\u53d8\u5f97\u6781\u5176\u7b80\u5355\uff1a suspend fun getXxxData () { val retrofit = Retrofit . Builder () . baseUrl (...) . addConverterFactory (...) . build () val xxxService = retrofit . create ( XxxService :: class . java ) val response = try { xxxService . getXXXData (). await () } catch ( e : Exception ) { // ... } }","title":"\u534f\u7a0b"},{"location":"Kotlin/%E5%8D%8F%E7%A8%8B/#_1","text":"Kotlin \u4e2d\u7684 \u534f\u7a0b \u662f\u4e00\u9879\u975e\u5e38\u6709\u7279\u8272\u7684\u6280\u672f\uff0c\u56e0\u4e3a\u5927\u90e8\u5206\u7f16\u7a0b\u8bed\u8a00\u4e2d\u662f\u6ca1\u6709\u534f\u7a0b\u8fd9\u4e2a\u6982\u5ff5\u7684\u3002\u5b83\u5176\u5b9e\u548c\u7ebf\u7a0b\u662f\u6709\u70b9\u7c7b\u4f3c\u7684\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u5c06\u5b83\u7406\u89e3\u6210\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u7ebf\u7a0b\u3002\u8981\u77e5\u9053\uff0c\u6211\u4eec\u4e4b\u524d\u6240\u5b66\u4e60\u7684\u7ebf\u7a0b\u662f\u975e\u5e38\u91cd\u91cf\u7ea7\u7684\uff0c\u5b83\u9700\u8981\u4f9d\u9760\u64cd\u4f5c\u7cfb\u7edf\u7684\u8c03\u5ea6\u624d\u80fd\u5b9e\u73b0\u4e0d\u540c\u7ebf\u7a0b\u4e4b\u95f4\u7684\u5207\u6362\u3002\u800c\u4f7f\u7528\u534f\u7a0b\u5374\u53ef\u4ee5\u4ec5\u5728\u7f16\u7a0b\u8bed\u8a00\u7684\u5c42\u9762\u5c31\u80fd\u5b9e\u73b0\u4e0d\u540c\u534f\u7a0b\u4e4b\u95f4\u7684\u5207\u6362\uff0c\u4ece\u800c\u5927\u5927\u63d0\u5347\u4e86\u5e76\u53d1\u7f16\u7a0b\u7684\u8fd0\u884c\u6548\u7387\u3002\u4e3e\u4e00\u4e2a\u5177\u4f53\u70b9\u7684\u4f8b\u5b50\uff0c\u6bd4\u5982\u6211\u4eec\u6709\u5982\u4e0b abc() \u548c xyz() \u4e24\u4e2a\u65b9\u6cd5\uff1a fun abc () { a () b () c () } fun xyz () { x () y () z () } \u5728\u6ca1\u6709\u5f00\u542f\u7ebf\u7a0b\u7684\u60c5\u51b5\u4e0b\uff0c\u5148\u540e\u8c03\u7528 abc() \u548c xyz() \uff0c\u90a3\u4e48\u7406\u8bba\u4e0a\u7ed3\u679c\u4e00\u5b9a\u662f a() \u3001 b() \u3001 c() \u6267\u884c\u5b8c\u4e86\u4ee5\u540e\uff0c x() \u3001 y() \u3001 z() \u624d\u80fd\u591f\u5f97\u5230\u6267\u884c\u3002 \u5982\u679c\u4f7f\u7528\u4e86\u534f\u7a0b\uff0c\u5728\u534f\u7a0b A \u4e2d\u53bb\u8c03\u7528 abc() \u65b9\u6cd5\uff0c\u534f\u7a0b B \u4e2d\u53bb\u8c03\u7528 xyz() \u65b9\u6cd5\uff0c\u867d\u7136\u5b83\u4eec\u4ecd\u7136\u4f1a\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u7ebf\u7a0b\u5f53\u4e2d\uff0c\u4f46\u662f\u5728\u6267\u884c abc() \u65b9\u6cd5\u65f6\u968f\u65f6\u90fd\u6709\u53ef\u80fd\u88ab\u6302\u8d77\u8f6c\u800c\u53bb\u6267\u884c xyz() \u65b9\u6cd5\uff0c\u6267\u884c xyz() \u65b9\u6cd5\u65f6\u4e5f\u968f\u65f6\u90fd\u6709\u53ef\u80fd\u88ab\u6302\u8d77\u8f6c\u800c\u7ee7\u7eed\u6267\u884c abc() \u65b9\u6cd5\uff0c\u6700\u7ec8\u7684\u8f93\u51fa\u7ed3\u679c\u4e5f\u5c31\u53d8\u5f97\u4e0d\u786e\u5b9a\u4e86\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u534f\u7a0b\u5141\u8bb8\u6211\u4eec\u5728\u5355\u7ebf\u7a0b\u6a21\u5f0f\u4e0b\u6a21\u62df\u591a\u7ebf\u7a0b\u7f16\u7a0b\u7684\u6548\u679c\uff0c\u4ee3\u7801\u6267\u884c\u65f6\u7684\u6302\u8d77\u4e0e\u6062\u590d\u5b8c\u5168\u662f\u7531\u7f16\u7a0b\u8bed\u8a00\u6765\u63a7\u5236\u7684\uff0c\u548c\u64cd\u4f5c\u7cfb\u7edf\u65e0\u5173\u3002\u8fd9\u79cd\u7279\u6027\u4f7f\u5f97\u9ad8\u5e76\u53d1\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u7387\u5f97\u5230\u4e86\u6781\u5927\u7684\u63d0\u5347\uff0c\u8bd5\u60f3\u4e00\u4e0b\uff0c\u5f00\u542f10\u4e07\u4e2a\u7ebf\u7a0b\u5b8c\u5168\u662f\u4e0d\u53ef\u60f3\u8c61\u7684\u4e8b\u5427\uff1f\u800c\u5f00\u542f10\u4e07\u4e2a\u534f\u7a0b\u5c31\u662f\u5b8c\u5168\u53ef\u884c\u7684\uff0c\u5f85\u4f1a\u6211\u4eec\u5c31\u4f1a\u5bf9\u8fd9\u4e2a\u529f\u80fd\u8fdb\u884c\u9a8c\u8bc1\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u5f00\u59cb\u5b66\u4e60 Kotlin \u4e2d\u534f\u7a0b\u7684\u7528\u6cd5\u3002","title":"\u534f\u7a0b"},{"location":"Kotlin/%E5%8D%8F%E7%A8%8B/#1-globalscopelaunch","text":"\u5f15\u5165 Kotlin \u534f\u7a0b\uff1a dependencies { implementation ( \"org.jetbrains.kotlinx:kotlinx-coroutines-core:{Version}\" ) } \u5982\u4f55\u5f00\u542f\u4e00\u4e2a\u534f\u7a0b\uff1f\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u5c31\u662f\u4f7f\u7528 Global.launch \u51fd\u6570\uff1a fun main () { Global . launch { println ( \"Code run in coroutine scope\" ) } } GlobalScope.launch \u51fd\u6570\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u534f\u7a0b\u7684\u4f5c\u7528\u57df\uff0c\u4f20\u9012\u7ed9 launch \u51fd\u6570\u7684\u4ee3\u7801\u5757\uff08Lambda\u8868\u8fbe\u5f0f\uff09\u5c31\u662f\u5728\u534f\u7a0b\u4e2d\u8fd0\u884c\u7684\u4e86\uff0c\u8fd9\u91cc\u6211\u4eec\u53ea\u662f\u5728\u4ee3\u7801\u5757\u4e2d\u6253\u5370\u4e86\u4e00\u53e5\u8bdd\u3002\u8fd0\u884c\u7a0b\u5e8f\uff0c\u4f60\u4f1a\u53d1\u73b0\u6ca1\u6709\u4efb\u4f55\u65e5\u5fd7\u8f93\u51fa\u3002\u8fd9\u662f\u56e0\u4e3a Global.launch \u51fd\u6570\u6bcf\u6b21\u521b\u5efa\u7684\u90fd\u662f\u4e00\u4e2a\u9876\u5c42\u534f\u7a0b\uff0c\u8fd9\u79cd\u534f\u7a0b\u5f53\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u675f\u65f6\u4e5f\u4f1a\u8ddf\u7740\u4e00\u8d77\u7ed3\u675f\u3002\u521a\u624d\u7684\u65e5\u5fd7\u4e4b\u6240\u4ee5\u65e0\u6cd5\u6253\u5370\u51fa\u6765\uff0c\u5c31\u662f\u56e0\u4e3a\u4ee3\u7801\u5757\u4e2d\u7684\u4ee3\u7801\u8fd8\u6ca1\u6765\u5f97\u53ca\u8fd0\u884c\uff0c\u5e94\u7528\u7a0b\u5e8f\u5c31\u7ed3\u675f\u4e86\u3002\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e5f\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u8ba9\u7a0b\u5e8f\u5ef6\u8fdf\u4e00\u6bb5\u65f6\u95f4\u518d\u7ed3\u675f\u5c31\u884c\u4e86\uff0c\u5982\u4e0b\u6240\u793a\uff1a fun main () { Global . launch { println ( \"Code run in coroutine scope\" ) } Thread . sleep ( 1000 ) }","title":"1. GlobalScope.launch"},{"location":"Kotlin/%E5%8D%8F%E7%A8%8B/#2-runblocking","text":"\u4e0d\u8fc7\u4e0a\u9762\u7684\u5199\u6cd5\u8fd8\u662f\u5b58\u5728\u95ee\u9898\uff0c\u5982\u679c\u4ee3\u7801\u5757\u4e2d\u7684\u4ee3\u7801\u57281\u79d2\u949f\u4e4b\u5185\u4e0d\u80fd\u8fd0\u884c\u7ed3\u675f\uff0c\u90a3\u4e48\u5c31\u4f1a\u88ab\u5f3a\u5236\u4e2d\u65ad\uff1a fun main () { Global . launch { println ( \"Codes run in coroutine scope\" ) delay ( 1500 ) println ( \"Codes run in coroutine scope finished\" ) } Thread . sleep ( 1000 ) } \u6211\u4eec\u5728\u4ee3\u7801\u5757\u4e2d\u52a0\u5165\u4e86\u4e00\u4e2a delay() \u51fd\u6570\uff0c\u5e76\u5728\u4e4b\u540e\u53c8\u6253\u5370\u4e86\u4e00\u884c\u65e5\u5fd7\u3002 delay() \u53ef\u4ee5\u8ba9\u5f53\u524d\u534f\u7a0b\u5ef6\u8fdf\u6307\u5b9a\u65f6\u95f4\u540e\u518d\u8fd0\u884c\uff0c\u4f46\u5b83\u548c Thread.sleep() \u65b9\u6cd5\u4e0d\u540c\u3002 delay() \u662f\u4e00\u4e2a\u975e\u963b\u585e\u5f0f\u7684\u6302\u8d77\u51fd\u6570\uff0c\u5b83\u53ea\u4f1a\u6302\u8d77\u5f53\u524d\u534f\u7a0b\uff0c\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u534f\u7a0b\u7684\u8fd0\u884c\u3002\u800c Thread.sleep() \u65b9\u6cd5\u4f1a\u963b\u585e\u5f53\u524d\u7684\u7ebf\u7a0b\uff0c\u8fd0\u884c\u5728\u8be5\u7ebf\u7a0b\u4e0b\u7684\u6240\u6709\u534f\u7a0b\u90fd\u4f1a\u88ab\u963b\u585e\u3002\u6ce8\u610f\uff0c delay() \u51fd\u6570\u53ea\u80fd\u5728\u534f\u7a0b\u7684\u4f5c\u7528\u57df\u6216\u5176\u4ed6\u6302\u8d77\u51fd\u6570\u4e2d\u8c03\u7528\u3002 \u8fd9\u91cc\u6211\u4eec\u8ba9\u534f\u7a0b\u6302\u8d771.5\u79d2\uff0c\u4f46\u662f\u4e3b\u7ebf\u7a0b\u5374\u53ea\u963b\u585e\u4e861\u79d2\uff0c\u91cd\u65b0\u8fd0\u884c\u7a0b\u5e8f\uff0c\u4f1a\u53d1\u73b0\u4ee3\u7801\u5757\u4e2d\u6700\u540e\u4e00\u6761\u65e5\u5fd7\u5e76\u6ca1\u6709\u6253\u5370\u51fa\u6765\uff0c\u56e0\u4e3a\u5b83\u8fd8\u6ca1\u80fd\u6765\u5f97\u53ca\u8fd0\u884c\uff0c\u5e94\u7528\u7a0b\u5e8f\u5c31\u5df2\u7ecf\u7ed3\u675f\u4e86\u3002\u90a3\u4e48\u6709\u6ca1\u6709\u4ec0\u4e48\u529e\u6cd5\u80fd\u8ba9\u5e94\u7528\u7a0b\u5e8f\u5728\u534f\u7a0b\u4e2d\u6240\u6709\u4ee3\u7801\u90fd\u8fd0\u884c\u5b8c\u4e86\u4e4b\u540e\u518d\u7ed3\u675f\u5462\uff1f\u501f\u52a9 runBlocking \u51fd\u6570\u5c31\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff1a fun main () { runBlocking { println ( \"Codes run in coroutine scope\" ) delay ( 1500 ) println ( \"Codes run in coroutine scope finished\" ) } } runBlocking \u51fd\u6570\u540c\u6837\u4f1a\u521b\u5efa\u4e00\u4e2a\u534f\u7a0b\u7684\u4f5c\u7528\u57df\uff0c\u4f46\u662f\u5b83 \u53ef\u4ee5\u4fdd\u8bc1\u5728\u534f\u7a0b\u4f5c\u7528\u57df\u5185\u7684\u6240\u6709\u4ee3\u7801\u548c\u5b50\u534f\u7a0b\u6ca1\u6709\u5168\u90e8\u6267\u884c\u5b8c\u4e4b\u524d\u4e00\u76f4\u963b\u585e\u5f53\u524d\u7ebf\u7a0b \u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c runBlocking \u51fd\u6570\u901a\u5e38\u53ea\u5e94\u8be5\u5728\u6d4b\u8bd5\u73af\u5883\u4e0b\u4f7f\u7528\uff0c\u5728\u6b63\u5f0f\u73af\u5883\u4e2d\u4f7f\u7528\u5bb9\u6613\u4ea7\u751f\u4e00\u4e9b\u6027\u80fd\u4e0a\u7684\u95ee\u9898\u3002","title":"2. runBlocking"},{"location":"Kotlin/%E5%8D%8F%E7%A8%8B/#3-launch","text":"\u867d\u8bf4\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u80fd\u591f\u8ba9\u4ee3\u7801\u5728\u534f\u7a0b\u4e2d\u8fd0\u884c\u4e86\uff0c\u53ef\u662f\u597d\u50cf\u5e76\u6ca1\u6709\u4f53\u4f1a\u5230\u4ec0\u4e48\u7279\u522b\u7684\u597d\u5904\u3002\u8fd9\u662f\u56e0\u4e3a\u76ee\u524d\u6240\u6709\u7684\u4ee3\u7801\u90fd\u662f\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u534f\u7a0b\u5f53\u4e2d\u7684\uff0c\u53ea\u6709\u6d89\u53ca\u5230\u9ad8\u5e76\u53d1\u7684\u5e94\u7528\u573a\u666f\uff0c\u534f\u7a0b\u76f8\u6bd4\u4e8e\u7ebf\u7a0b\u7684\u4f18\u52bf\u624d\u80fd\u4f53\u73b0\u51fa\u6765\u4e86\u3002\u5982\u4f55\u521b\u5efa\u591a\u4e2a\u534f\u7a0b\u5462\uff1f\u5f88\u7b80\u5355\uff0c\u4f7f\u7528 launch \u51fd\u6570\u5c31\u53ef\u4ee5\u4e86\uff1a fun main () { runBlocking { launch { println ( \"launch1\" ) delay ( 1000 ) println ( \"launch1 finished\" ) } launch { println ( \"launch2\" ) delay ( 1000 ) println ( \"launch2 finished\" ) } } } \u8fd0\u884c\u7ed3\u679c\uff1a launch1 launch2 launch1 finished launch2 finished \u6ce8\u610f\u8fd9\u91cc\u7684 launch \u51fd\u6570\u548c\u521a\u624d\u6240\u4f7f\u7528\u7684 GlobalScope.launch \u51fd\u6570\u4e0d\u540c\u3002\u9996\u5148\u5b83 \u5fc5\u987b\u5728\u534f\u7a0b\u7684\u4f5c\u7528\u57df\u4e2d\u624d\u80fd\u8c03\u7528 \uff0c\u5176\u6b21\u5b83 \u4f1a\u5728\u5f53\u524d\u534f\u7a0b\u7684\u4f5c\u7528\u57df\u4e0b\u521b\u5efa\u5b50\u534f\u7a0b \u3002\u5b50\u534f\u7a0b\u7684\u7279\u70b9\u662f\u5982\u679c\u5916\u5c42\u4f5c\u7528\u57df\u7684\u534f\u7a0b\u7ed3\u675f\u4e86\uff0c\u8be5\u4f5c\u7528\u57df\u4e0b\u7684\u6240\u6709\u5b50\u534f\u7a0b\u4e5f\u4f1a\u4e00\u540c\u7ed3\u675f\u3002\u76f8\u6bd4\u800c\u8a00\uff0c GlobalScope.launch \u51fd\u6570\u521b\u5efa\u7684\u6c38\u8fdc\u662f\u9876\u5c42\u534f\u7a0b\uff0c\u8fd9\u4e00\u70b9\u548c\u7ebf\u7a0b\u6bd4\u8f83\u50cf\uff0c\u56e0\u4e3a\u7ebf\u7a0b\u4e5f\u6ca1\u6709\u5c42\u7ea7\u8fd9\u4e00\u8bf4\uff0c\u6c38\u8fdc\u90fd\u662f\u9876\u5c42\u7684\u3002\u8fd9\u91cc\u6211\u4eec\u8c03\u7528\u4e86\u4e24\u6b21launch\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u521b\u5efa\u4e86\u4e24\u4e2a\u5b50\u534f\u7a0b\u3002 \u4ece\u8fd0\u884c\u7ed3\u679c\u53ef\u4ee5\u770b\u51fa\uff0c\u4e24\u4e2a\u5b50\u534f\u7a0b\u4e2d\u7684\u65e5\u5fd7\u662f\u4ea4\u66ff\u6253\u5370\u7684\uff0c\u8bf4\u660e\u5b83\u4eec\u786e\u5b9e\u662f\u50cf\u591a\u7ebf\u7a0b\u90a3\u6837\u5e76\u53d1\u8fd0\u884c\u7684\u3002\u7136\u800c\u8fd9\u4e24\u4e2a\u5b50\u534f\u7a0b\u5b9e\u9645\u5374\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u7ebf\u7a0b\u5f53\u4e2d\uff0c\u53ea\u662f\u7531\u7f16\u7a0b\u8bed\u8a00\u6765\u51b3\u5b9a\u5982\u4f55\u5728\u591a\u4e2a\u534f\u7a0b\u4e4b\u95f4\u8fdb\u884c\u8c03\u5ea6\uff0c\u8ba9\u8c01\u8fd0\u884c\uff0c\u8ba9\u8c01\u6302\u8d77\u3002\u8c03\u5ea6\u7684\u8fc7\u7a0b\u5b8c\u5168\u4e0d\u9700\u8981\u64cd\u4f5c\u7cfb\u7edf\u53c2\u4e0e\uff0c\u8fd9\u4e5f\u5c31\u4f7f\u5f97\u534f\u7a0b\u7684\u5e76\u53d1\u6548\u7387\u4f1a\u51fa\u5947\u5f97\u9ad8\uff1a fun main () { val start = System . currentTimeMillis () runBlocking { repeat ( 100000 ) { launch { println ( \"@\" ) } } } val end = System . currentTimeMillis () println ( start - end ) } \u8fd0\u884c\u7ed3\u679c\uff1a @ ... @ 961 \u8fd9\u91cc\u4f7f\u7528 repea t\u51fd\u6570\u5faa\u73af\u521b\u5efa\u4e8610\u4e07\u4e2a\u534f\u7a0b\uff0c\u8fd9\u91cc\u4ec5\u4ec5\u8017\u65f6\u4e86961\u6beb\u79d2\uff0c\u8fd9\u8db3\u4ee5\u8bc1\u660e\u534f\u7a0b\u6709\u591a\u4e48\u9ad8\u6548\u3002\u8bd5\u60f3\u4e00\u4e0b\uff0c\u5982\u679c\u5f00\u542f\u7684\u662f10\u4e07\u4e2a\u7ebf\u7a0b\uff0c\u7a0b\u5e8f\u6216\u8bb8\u5df2\u7ecf\u51fa\u73b0OOM\u5f02\u5e38\u4e86\u3002","title":"3. launch"},{"location":"Kotlin/%E5%8D%8F%E7%A8%8B/#4-suspend","text":"\u968f\u7740 launch \u51fd\u6570\u4e2d\u7684\u903b\u8f91\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u53ef\u80fd\u4f60\u9700\u8981\u5c06\u90e8\u5206\u4ee3\u7801\u63d0\u53d6\u5230\u4e00\u4e2a\u5355\u72ec\u7684\u51fd\u6570\u4e2d\u3002\u8fd9\u4e2a\u65f6\u5019\u5c31\u4ea7\u751f\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u6211\u4eec\u5728 launch \u51fd\u6570\u4e2d\u7f16\u5199\u7684\u4ee3\u7801\u662f\u62e5\u6709\u534f\u7a0b\u4f5c\u7528\u57df\u7684\uff0c\u4f46\u662f\u63d0\u53d6\u5230\u4e00\u4e2a\u5355\u72ec\u7684\u51fd\u6570\u4e2d\u5c31\u6ca1\u6709\u534f\u7a0b\u4f5c\u7528\u57df\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u8be5\u5982\u4f55\u8c03\u7528\u50cf delay() \u8fd9\u6837\u7684\u6302\u8d77\u51fd\u6570\u5462\uff1f\u4e3a\u6b64 Kotlin \u63d0\u4f9b\u4e86\u4e00\u4e2a suspend \u5173\u952e\u5b57\uff0c\u4f7f\u7528\u5b83\u53ef\u4ee5\u5c06\u4efb\u610f\u51fd\u6570\u58f0\u660e\u6210\u6302\u8d77\u51fd\u6570\uff0c\u800c\u6302\u8d77\u51fd\u6570\u4e4b\u95f4\u90fd\u662f\u53ef\u4ee5\u4e92\u76f8\u8c03\u7528\u7684\uff0c\u5982\u4e0b\u6240\u793a\uff1a suspend fun printDot () { println ( \".\" ) delay ( 1000 ) }","title":"4. suspend"},{"location":"Kotlin/%E5%8D%8F%E7%A8%8B/#5-coroutinescope","text":"suspend \u5173\u952e\u5b57\u53ea\u80fd\u5c06\u4e00\u4e2a\u51fd\u6570\u58f0\u660e\u6210\u6302\u8d77\u51fd\u6570\uff0c\u662f\u65e0\u6cd5\u7ed9\u5b83\u63d0\u4f9b\u534f\u7a0b\u4f5c\u7528\u57df\u7684\u3002\u5982\u679c\u5c1d\u8bd5\u5728 printDot() \u4e2d\u8c03\u7528 launch \u51fd\u6570\uff0c\u4e00\u5b9a\u662f\u65e0\u6cd5\u8c03\u7528\u6210\u529f\u7684\u3002\u501f\u52a9 coroutineScope \u51fd\u6570\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 coroutineScope \u51fd\u6570\u4e5f\u662f\u4e00\u4e2a\u6302\u8d77\u51fd\u6570\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u4efb\u4f55\u5176\u4ed6\u6302\u8d77\u51fd\u6570\u4e2d\u8c03\u7528\u3002\u5b83\u7684\u7279\u70b9\u662f \u4f1a\u7ee7\u627f\u5916\u90e8\u7684\u534f\u7a0b\u7684\u4f5c\u7528\u57df\u5e76\u521b\u5efa\u4e00\u4e2a\u5b50\u534f\u7a0b \uff0c\u501f\u52a9\u8fd9\u4e2a\u7279\u6027\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7ed9\u4efb\u610f\u6302\u8d77\u51fd\u6570\u63d0\u4f9b\u534f\u7a0b\u4f5c\u7528\u57df\u4e86\uff1a suspend fun printDot () = coroutineScope { launch { println ( \".\" ) delay ( 1000 ) } } \u53e6\u5916\uff0c coroutineScope \u51fd\u6570\u548c runBlocking \u51fd\u6570\u6709\u70b9\u7c7b\u4f3c\uff0c coroutineScope \u53ef\u4ee5\u4fdd\u8bc1\u5176\u4f5c\u7528\u57df\u5185\u7684\u6240\u6709\u4ee3\u7801\u548c\u5b50\u534f\u7a0b\u5728\u5168\u90e8\u6267\u884c\u5b8c\u4e4b\u524d\uff0c\u5f53\u524d\u4f5c\u7528\u57df\uff08\u534f\u7a0b\uff09\u4f1a\u4e00\u76f4\u88ab\u6302\u8d77\uff1a fun main () { // \u7ebf\u7a0bA runBlocking { // \u534f\u7a0bB coroutineScope { launch { for ( i in 1. . 10 ) { println ( i ) delay ( 1000 ) } } } println ( \"coroutineScope finished\" ) } println ( \"runBlocking finished\" ) } \u8fd0\u884c\u7ed3\u679c\uff1a 1 2 ... 9 10 coroutineScope finished //\uff08\u56e0\u4e3a coroutineScope \u4f1a\u7ee7\u627f\u5e76\u963b\u585e\u534f\u7a0b B\uff0c\u5f53 coroutineScope \u5185\u7684\u6240\u6709\u4ee3\u7801\u4ee5\u53ca\u5b50\u534f\u7a0b\u90fd\u6267\u884c\u5b8c\u540e\u624d\u6253\u5370 \"coroutineScope finished\"\uff09 runBlocking finished //\uff08\u56e0\u4e3a runBlocking \u6302\u8d77\u5916\u90e8\u7ebf\u7a0b A\uff0c\u6240\u4ee5\u6700\u540e\u624d\u6253\u5370 \"runBlocking finished\"\uff09 \u8fd9\u91cc\u5148\u4f7f\u7528 runBlocking \u51fd\u6570\u521b\u5efa\u4e86\u4e00\u4e2a\u534f\u7a0b\u4f5c\u7528\u57df\uff0c\u7136\u540e\u8c03\u7528 coroutineScope \u51fd\u6570\u521b\u5efa\u4e86\u4e00\u4e2a\u5b50\u534f\u7a0b\u3002\u5728 coroutineScope \u7684\u4f5c\u7528\u57df\u4e2d\uff0c\u6211\u4eec\u53c8\u8c03\u7528 launch \u51fd\u6570\u521b\u5efa\u4e86\u4e00\u4e2a\u5b50\u534f\u7a0b\uff0c\u5e76\u901a\u8fc7 for \u5faa\u73af\u4f9d\u6b21\u6253\u5370\u6570\u5b571\u523010\uff0c\u6bcf\u6b21\u6253\u5370\u95f4\u9694\u4e00\u79d2\u949f\u3002\u6700\u540e\u5728 runBlocking \u548c coroutineScope \u51fd\u6570\u7684\u7ed3\u5c3e\uff0c\u5206\u522b\u53c8\u6253\u5370\u4e86\u4e00\u884c\u65e5\u5fd7\u3002 \u4ece\u8fd0\u884c\u7ed3\u679c\u53ef\u4ee5\u770b\u51fa\u63a7\u5236\u53f0\u4f1a\u4ee51\u79d2\u949f\u7684\u95f4\u9694\u4f9d\u6b21\u8f93\u51fa\u6570\u5b571\u523010\uff0c\u7136\u540e\u624d\u4f1a\u6253\u5370 coroutineScope \u51fd\u6570\u7ed3\u5c3e\u7684\u65e5\u5fd7\uff0c\u6700\u540e\u6253\u5370 runBlocking \u51fd\u6570\u7ed3\u5c3e\u7684\u65e5\u5fd7\u3002\u7531\u6b64\u53ef\u89c1\uff0c coroutineScope \u786e\u5b9e\u662f\u5c06\u5916\u90e8\u534f\u7a0b\u6302\u8d77\u4e86\uff0c\u53ea\u6709\u5f53\u5b83\u4f5c\u7528\u57df\u5185\u7684\u6240\u6709\u4ee3\u7801\u548c\u5b50\u534f\u7a0b\u90fd\u6267\u884c\u5b8c\u6bd5\u4e4b\u540e\uff0c coroutineScope \u540e\u9762\u7684\u4ee3\u7801\u624d\u80fd\u5f97\u5230\u8fd0\u884c\u3002 \u867d\u7136\u770b\u4e0a\u53bb coroutineScope \u548c runBlocking \u7684\u4f5c\u7528\u662f\u6709\u70b9\u7c7b\u4f3c\u7684\uff0c\u4f46\u662f coroutineScope \u53ea\u4f1a\u963b\u585e\u5f53\u524d\u534f\u7a0b\uff0c\u65e2\u4e0d\u5f71\u54cd\u5176\u4ed6\u534f\u7a0b\uff0c\u4e5f\u4e0d\u5f71\u54cd\u4efb\u4f55\u7ebf\u7a0b \uff0c\u56e0\u6b64\u662f\u4e0d\u4f1a\u9020\u6210\u4efb\u4f55\u6027\u80fd\u4e0a\u7684\u95ee\u9898\u7684\u3002\u800c runBlocking \u7531\u4e8e\u4f1a\u6302\u8d77\u5916\u90e8\u7ebf\u7a0b \uff0c\u5982\u679c\u4f60\u6070\u597d\u53c8\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u5f53\u4e2d\u8c03\u7528\u5b83\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u6709\u53ef\u80fd\u4f1a\u5bfc\u81f4\u754c\u9762\u5361\u6b7b\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u4e0d\u592a\u63a8\u8350\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u4f7f\u7528\u3002","title":"5. coroutineScope"},{"location":"Kotlin/%E5%8D%8F%E7%A8%8B/#6","text":"GlobalScope.launch \u3001 runBlocking \u3001 launch \u3001 coroutineScope \u8fd9\u51e0\u79cd\u4f5c\u7528\u57df\u6784\u5efa\u5668\u90fd\u53ef\u4ee5\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b\u4f5c\u7528\u57df\u3002\u4e0d\u8fc7 GlobalScope.launch \u548c runBlocking \u51fd\u6570\u662f\u53ef\u4ee5\u5728\u4efb\u610f\u5730\u65b9\u8c03\u7528\u7684\uff0c coroutineScope \u51fd\u6570\u53ef\u4ee5\u5728\u534f\u7a0b\u4f5c\u7528\u57df\u6216\u6302\u8d77\u51fd\u6570\u4e2d\u8c03\u7528\uff0c\u800c launch \u51fd\u6570\u53ea\u80fd\u5728\u534f\u7a0b\u4f5c\u7528\u57df\u4e2d\u8c03\u7528\u3002 \u524d\u9762\u5df2\u7ecf\u8bf4\u4e86\uff0c runBlocking \u7531\u4e8e\u4f1a\u963b\u585e\u7ebf\u7a0b\uff0c\u56e0\u6b64\u53ea\u5efa\u8bae\u5728\u6d4b\u8bd5\u73af\u5883\u4e0b\u4f7f\u7528\u3002\u800c GlobalScope.launch \u7531\u4e8e\u6bcf\u6b21\u521b\u5efa\u7684\u90fd\u662f\u9876\u5c42\u534f\u7a0b\uff0c\u4e00\u822c\u4e5f\u4e0d\u592a\u5efa\u8bae\u4f7f\u7528\uff0c\u9664\u975e\u4f60\u975e\u5e38\u660e\u786e\u5c31\u662f\u8981\u521b\u5efa\u9876\u5c42\u534f\u7a0b\u3002\u4e3a\u4ec0\u4e48\u8bf4\u4e0d\u592a\u5efa\u8bae\u4f7f\u7528\u9876\u5c42\u534f\u7a0b\u5462\uff1f\u4e3b\u8981\u8fd8\u662f\u56e0\u4e3a\u5b83\u7ba1\u7406\u8d77\u6765\u6210\u672c\u592a\u9ad8\u4e86\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6bd4\u5982\u6211\u4eec\u5728\u67d0\u4e2a Activity \u4e2d\u4f7f\u7528\u534f\u7a0b\u53d1\u8d77\u4e86\u4e00\u6761\u7f51\u7edc\u8bf7\u6c42\uff0c\u7531\u4e8e\u7f51\u7edc\u8bf7\u6c42\u662f\u8017\u65f6\u7684\uff0c\u7528\u6237\u5728\u670d\u52a1\u5668\u8fd8\u6ca1\u6765\u5f97\u53ca\u54cd\u5e94\u7684\u60c5\u51b5\u4e0b\u5c31\u5173\u95ed\u4e86\u5f53\u524dActivity\uff0c\u6b64\u65f6\u6309\u7406\u8bf4\u5e94\u8be5\u53d6\u6d88\u8fd9\u6761\u7f51\u7edc\u8bf7\u6c42\uff0c\u6216\u8005\u81f3\u5c11\u4e0d\u5e94\u8be5\u8fdb\u884c\u56de\u8c03\uff0c\u56de\u8c03\u4e86\u4e5f\u6ca1\u6709\u610f\u4e49\u3002\u534f\u7a0b\u8981\u600e\u6837\u53d6\u6d88\u5462\uff1f\u4e0d\u7ba1\u662f GlobalScope.launch \u51fd\u6570\u8fd8\u662f launch \u51fd\u6570\uff0c\u5b83\u4eec\u90fd\u4f1a\u8fd4\u56de\u4e00\u4e2a Job \u5bf9\u8c61\uff0c\u53ea\u9700\u8981\u8c03\u7528 Job \u5bf9\u8c61\u7684 cancel() \u65b9\u6cd5\u5c31\u53ef\u4ee5\u53d6\u6d88\u534f\u7a0b\u4e86\uff1a val job = GlobalScope . launch { } job . cancel () \u5982\u679c\u6211\u4eec\u6bcf\u6b21\u521b\u5efa\u7684\u90fd\u662f\u9876\u5c42\u534f\u7a0b\uff0c\u90a3\u4e48\u5f53 Activity \u5173\u95ed\u65f6\uff0c\u5c31\u9700\u8981\u9010\u4e2a\u8c03\u7528\u6240\u6709\u5df2\u521b\u5efa\u534f\u7a0b\u7684 cancel() \u65b9\u6cd5\u3002\u5b9e\u9645\u9879\u76ee\u4e2d\u6bd4\u8f83\u5e38\u7528\u7684\u5199\u6cd5\u5982\u4e0b\uff1a val job = Job () val scope = CoroutineScope ( job ) scope . launch { // \u5177\u4f53\u903b\u8f91 } job . cancel () \u5148\u521b\u5efa\u4e86\u4e00\u4e2a Job \u5bf9\u8c61\uff0c\u7136\u540e\u628a\u5b83\u4f20\u5165 CoroutineScope() \u51fd\u6570\u5f53\u4e2d\uff0c\u6ce8\u610f\u8fd9\u91cc\u7684 CoroutineScope() \u662f\u4e2a\u51fd\u6570\uff0c\u867d\u7136\u5b83\u7684\u547d\u540d\u66f4\u50cf\u662f\u4e00\u4e2a\u7c7b\u3002 CoroutineScope() \u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a CoroutineScope \u5bf9\u8c61\uff0c\u8fd9\u79cd\u8bed\u6cd5\u7ed3\u6784\u7684\u8bbe\u8ba1\u66f4\u50cf\u662f\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a CoroutineScope \u7684\u5b9e\u4f8b\uff0c\u53ef\u80fd\u4e5f\u662f Kotlin \u6709\u610f\u4e3a\u4e4b\u7684\u3002\u6709\u4e86 CoroutineScope \u5bf9\u8c61\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u968f\u65f6\u8c03\u7528\u5b83\u7684 launch \u51fd\u6570\u6765\u521b\u5efa\u4e00\u4e2a\u534f\u7a0b\u4e86\u3002\u73b0\u5728\u6240\u6709\u8c03\u7528 CoroutineScope \u7684 launch \u51fd\u6570\u6240\u521b\u5efa\u7684\u534f\u7a0b\uff0c\u90fd\u4f1a\u88ab\u5173\u8054\u5728 Job \u5bf9\u8c61\u7684\u4f5c\u7528\u57df\u4e0b\u9762\u3002\u8fd9\u6837\u53ea\u9700\u8981\u8c03\u7528\u4e00\u6b21 cancel() \u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u5c06\u540c\u4e00\u4f5c\u7528\u57df\u5185\u7684\u6240\u6709\u534f\u7a0b\u5168\u90e8\u53d6\u6d88\uff0c\u4ece\u800c\u5927\u5927\u964d\u4f4e\u4e86\u534f\u7a0b\u7ba1\u7406\u7684\u6210\u672c\u3002\u4e0d\u8fc7\u76f8\u6bd4\u4e4b\u4e0b\uff0c CoroutineScope() \u51fd\u6570\u66f4\u9002\u5408\u7528\u4e8e\u5b9e\u9645\u9879\u76ee\u5f53\u4e2d\uff0c\u5982\u679c\u53ea\u662f\u5728 main() \u51fd\u6570\u4e2d\u7f16\u5199\u4e00\u4e9b\u5b66\u4e60\u6d4b\u8bd5\u7528\u7684\u4ee3\u7801\uff0c\u8fd8\u662f\u4f7f\u7528 runBlocking \u51fd\u6570\u6700\u4e3a\u65b9\u4fbf\u3002","title":"6. \u66f4\u591a\u7684\u4f5c\u7528\u57df\u6784\u9020\u5668"},{"location":"Kotlin/%E5%8D%8F%E7%A8%8B/#61-async","text":"\u8c03\u7528 launch \u51fd\u6570\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b\uff0c\u4f46\u662f launch \u51fd\u6570\u53ea\u80fd\u7528\u4e8e\u6267\u884c\u4e00\u6bb5\u903b\u8f91\uff0c\u5374\u4e0d\u80fd\u83b7\u53d6\u6267\u884c\u7684\u7ed3\u679c\uff0c\u56e0\u4e3a\u5b83\u7684\u8fd4\u56de\u503c\u6c38\u8fdc\u662f\u4e00\u4e2a Job \u5bf9\u8c61\u3002\u90a3\u4e48\u6709\u6ca1\u6709\u4ec0\u4e48\u529e\u6cd5\u80fd\u591f \u521b\u5efa\u4e00\u4e2a\u534f\u7a0b\u5e76\u83b7\u53d6\u5b83\u7684\u6267\u884c\u7ed3\u679c \u5462\uff1f\u5f53\u7136\u6709\uff0c\u4f7f\u7528 async \u51fd\u6570\u5c31\u53ef\u4ee5\u5b9e\u73b0\u3002 async \u51fd\u6570\u5fc5\u987b\u5728\u534f\u7a0b\u4f5c\u7528\u57df\u5f53\u4e2d\u624d\u80fd\u8c03\u7528\uff0c\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b50\u534f\u7a0b\u5e76\u8fd4\u56de\u4e00\u4e2a Deferred \u5bf9\u8c61 \uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u83b7\u53d6 async \u51fd\u6570\u4ee3\u7801\u5757\u7684\u6267\u884c\u7ed3\u679c\uff0c\u53ea\u9700\u8981\u8c03\u7528 Deferred \u5bf9\u8c61\u7684 await() \u65b9\u6cd5\u5373\u53ef\uff1a fun main () { runBlocking { val result = async { 5 + 5 }. await () println ( result ) } } \u4e8b\u5b9e\u4e0a\uff0c\u5728\u8c03\u7528\u4e86 async \u51fd\u6570\u4e4b\u540e\uff0c\u4ee3\u7801\u5757\u4e2d\u7684\u4ee3\u7801\u5c31\u4f1a\u7acb\u523b\u5f00\u59cb\u6267\u884c\u3002\u5f53\u8c03\u7528 await() \u65b9\u6cd5\u65f6\uff0c\u5982\u679c\u4ee3\u7801\u5757\u4e2d\u7684\u4ee3\u7801\u8fd8\u6ca1\u6267\u884c\u5b8c\uff0c\u90a3\u4e48 await() \u4f1a\u5c06\u5f53\u524d\u534f\u7a0b\u963b\u585e\u4f4f\uff0c\u76f4\u5230\u53ef\u4ee5\u83b7\u5f97 async \u51fd\u6570\u7684\u6267\u884c\u7ed3\u679c\u3002\u6211\u4eec\u6765\u9a8c\u8bc1\u4e00\u4e0b\uff1a fun main () { runBlocking { val start = System . currentTimeMillis () val result1 = async { delay ( 1000 ) 6 + 4 }. await () val result2 = async { delay ( 1000 ) 5 + 5 }. await () val end = System . currentTimeMillis () println ( \"result is ${ result1 + result2 } \" ) println ( \"cost ${ end - start } ms\" ) } } \u8fd0\u884c\u7ed3\u679c\uff1a result is 20 cost 2032 ms \u8fd9\u91cc\u8fde\u7eed\u4f7f\u7528\u4e86\u4e24\u4e2a async \u51fd\u6570\u6765\u6267\u884c\u4efb\u52a1\uff0c\u5e76\u5728\u4ee3\u7801\u5757\u4e2d\u8c03\u7528 delay() \u65b9\u6cd5\u8fdb\u884c1\u79d2\u7684\u5ef6\u8fdf\u3002\u6309\u7167\u521a\u624d\u7684\u7406\u8bba\uff0c await() \u65b9\u6cd5\u5728 async \u51fd\u6570\u4ee3\u7801\u5757\u4e2d\u7684\u4ee3\u7801\u6267\u884c\u5b8c\u4e4b\u524d\u4f1a\u4e00\u76f4\u5c06\u5f53\u524d\u534f\u7a0b\u963b\u585e\u4f4f\uff0c\u53ef\u4ee5\u770b\u5230\u8fd0\u884c\u8017\u65f62032\u6beb\u79d2\uff0c\u8bf4\u660e\u8fd9\u91cc\u7684\u4e24\u4e2a async \u51fd\u6570\u786e\u5b9e\u662f\u4e00\u79cd\u4e32\u884c\u7684\u5173\u7cfb\uff0c\u524d\u4e00\u4e2a\u6267\u884c\u5b8c\u4e86\u540e\u4e00\u4e2a\u624d\u80fd\u6267\u884c\u3002\u4f46\u662f\u8fd9\u79cd\u5199\u6cd5\u660e\u663e\u662f\u975e\u5e38\u4f4e\u6548\u7684\uff0c\u56e0\u4e3a\u4e24\u4e2a async \u51fd\u6570\u5b8c\u5168\u53ef\u4ee5\u540c\u65f6\u6267\u884c\u4ece\u800c\u63d0\u9ad8\u8fd0\u884c\u6548\u7387\u3002\u73b0\u5728\u5bf9\u4e0a\u8ff0\u4ee3\u7801\u8fdb\u884c\u4fee\u6539\uff1a fun main () { runBlocking { val start = System . currentTimeMillis () val deferred1 = async { delay ( 1000 ) 6 + 4 } val deferred2 = async { delay ( 1000 ) 5 + 5 } val end = System . currentTimeMillis () println ( \"result is ${ deferred1 . await () + deferred2 . await () } \" ) println ( \"cost ${ end - start } ms\" ) } } \u8fd0\u884c\u7ed3\u679c\uff1a result is 20 cost 1029 ms \u6211\u4eec\u4e0d\u5728\u6bcf\u6b21\u8c03\u7528 async \u51fd\u6570\u4e4b\u540e\u5c31\u7acb\u523b\u4f7f\u7528 await() \u65b9\u6cd5\u83b7\u53d6\u7ed3\u679c\u4e86\uff0c\u800c\u662f\u4ec5\u5728\u9700\u8981\u7528\u5230 async \u51fd\u6570\u7684\u6267\u884c\u7ed3\u679c\u65f6\u624d\u8c03\u7528 await() \u8fdb\u884c\u83b7\u53d6\uff0c\u8fd9\u6837\u4e24\u4e2a async \u51fd\u6570\u5c31\u53d8\u6210\u4e00\u79cd\u5e76\u884c\u5173\u7cfb\u4e86\u3002\u91cd\u65b0\u8fd0\u884c\u7a0b\u5e8f\uff0c\u73b0\u5728\u8fd0\u884c\u8017\u65f6\u53d8\u6210\u4e861029\u6beb\u79d2\uff0c\u8fd0\u884c\u6548\u7387\u7684\u63d0\u5347\u663e\u800c\u6613\u89c1\u3002","title":"6.1 async"},{"location":"Kotlin/%E5%8D%8F%E7%A8%8B/#62-withcontext","text":"withContext() \u51fd\u6570\u662f\u4e00\u4e2a\u6302\u8d77\u51fd\u6570\uff0c\u5927\u4f53\u53ef\u4ee5\u5c06\u5b83\u7406\u89e3\u6210 async \u51fd\u6570\u7684\u4e00\u79cd\u7b80\u5316\u7248\u5199\u6cd5\uff1a fun main () { runBlocking { val result = withContext ( Dispatchers . Default ) { 5 + 5 } println ( result ) } } \u8c03\u7528withContext()\u51fd\u6570\u4e4b\u540e\uff0c\u4f1a\u7acb\u5373\u6267\u884c\u4ee3\u7801\u5757\u4e2d\u7684\u4ee3\u7801\uff0c\u540c\u65f6\u5c06\u5916\u90e8\u534f\u7a0b\u6302\u8d77\u3002\u5f53\u4ee3\u7801\u5757\u4e2d\u7684\u4ee3\u7801\u5168\u90e8\u6267\u884c\u5b8c\u4e4b\u540e\uff0c\u4f1a\u5c06\u6700\u540e\u4e00\u884c\u7684\u6267\u884c\u7ed3\u679c\u4f5c\u4e3a withContext() \u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u57fa\u672c\u4e0a\u76f8\u5f53\u4e8e val result= async { 5 + 5 }.await() \u7684\u5199\u6cd5\u3002\u552f\u4e00\u4e0d\u540c\u7684\u662f\uff0c withContext() \u51fd\u6570\u5f3a\u5236\u8981\u6c42\u6211\u4eec\u6307\u5b9a\u4e00\u4e2a\u7ebf\u7a0b\u53c2\u6570\uff0c\u534f\u7a0b\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u7ebf\u7a0b\u7684\u6982\u5ff5\uff0c\u56e0\u6b64\u5f88\u591a\u4f20\u7edf\u7f16\u7a0b\u60c5\u51b5\u4e0b\u9700\u8981\u5f00\u542f\u591a\u7ebf\u7a0b\u6267\u884c\u7684\u5e76\u53d1\u4efb\u52a1\uff0c\u73b0\u5728\u53ea\u9700\u8981\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e0b\u5f00\u542f\u591a\u4e2a\u534f\u7a0b\u6765\u6267\u884c\u5c31\u53ef\u4ee5\u4e86\u3002\u4f46\u662f\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u6211\u4eec\u5c31\u6c38\u8fdc\u4e0d\u9700\u8981\u5f00\u542f\u7ebf\u7a0b\u4e86\uff0c\u4f8b\u5982 Android \u4e2d\u8981\u6c42\u7f51\u7edc\u8bf7\u6c42\u5fc5\u987b\u5728\u5b50\u7ebf\u7a0b\u4e2d\u8fdb\u884c\uff0c\u5373\u4f7f\u4f60\u5f00\u542f\u4e86\u534f\u7a0b\u53bb\u6267\u884c\u7f51\u7edc\u8bf7\u6c42\uff0c\u5047\u5982\u5b83\u662f\u4e3b\u7ebf\u7a0b\u5f53\u4e2d\u7684\u534f\u7a0b\uff0c\u90a3\u4e48\u7a0b\u5e8f\u4ecd\u7136\u4f1a\u51fa\u9519\u3002\u8fd9\u65f6\u5019\u5c31\u5e94\u8be5\u901a\u8fc7\u7ebf\u7a0b\u53c2\u6570\u7ed9\u534f\u7a0b\u6307\u5b9a\u4e00\u4e2a\u5177\u4f53\u7684\u8fd0\u884c\u7ebf\u7a0b\u3002 \u7ebf\u7a0b\u53c2\u6570\u4e3b\u8981\u6709\u4ee5\u4e0b3\u79cd\u503c\u53ef\u9009\uff1a Dispatchers.Default \u3001 Dispatchers.IO \u548c Dispatchers.Main \u3002 Dispatchers.Default \u8868\u793a\u4f1a\u4f7f\u7528\u4e00\u79cd\u9ed8\u8ba4\u4f4e\u5e76\u53d1\u7684\u7ebf\u7a0b\u7b56\u7565\uff0c\u5f53\u4f60\u8981\u6267\u884c\u7684\u4ee3\u7801\u5c5e\u4e8e\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u65f6\uff0c\u5f00\u542f\u8fc7\u9ad8\u7684\u5e76\u53d1\u53cd\u800c\u53ef\u80fd\u4f1a\u5f71\u54cd\u4efb\u52a1\u7684\u8fd0\u884c\u6548\u7387\uff0c\u6b64\u65f6\u5c31\u53ef\u4ee5\u4f7f\u7528 Dispatchers.Default \u3002 Dispatchers.IO \u8868\u793a\u4f1a\u4f7f\u7528\u4e00\u79cd\u8f83\u9ad8\u5e76\u53d1\u7684\u7ebf\u7a0b\u7b56\u7565\uff0c\u5f53\u4f60\u8981\u6267\u884c\u7684\u4ee3\u7801\u5927\u591a\u6570\u65f6\u95f4\u662f\u5728\u963b\u585e\u548c\u7b49\u5f85\u4e2d\uff0c\u6bd4\u5982\u8bf4\u6267\u884c\u7f51\u7edc\u8bf7\u6c42\u65f6\uff0c\u4e3a\u4e86\u80fd\u591f\u652f\u6301\u66f4\u9ad8\u7684\u5e76\u53d1\u6570\u91cf\uff0c\u6b64\u65f6\u5c31\u53ef\u4ee5\u4f7f\u7528 Dispatchers.IO \u3002 Dispatchers.Main \u5219\u8868\u793a\u4e0d\u4f1a\u5f00\u542f\u5b50\u7ebf\u7a0b\uff0c\u800c\u662f\u5728 Android \u4e3b\u7ebf\u7a0b\u4e2d\u6267\u884c\u4ee3\u7801\uff0c\u4f46\u662f\u8fd9\u4e2a\u503c\u53ea\u80fd\u5728 Android \u9879\u76ee\u4e2d\u4f7f\u7528\uff0c\u7eaf Kotlin \u7a0b\u5e8f\u4f7f\u7528\u8fd9\u79cd\u7c7b\u578b\u7684\u7ebf\u7a0b\u53c2\u6570\u4f1a\u51fa\u73b0\u9519\u8bef\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u4e0a\u9762\u6240\u5b66\u7684\u534f\u7a0b\u4f5c\u7528\u57df\u6784\u5efa\u5668\u4e2d\uff0c\u9664\u4e86 coroutineScope \u51fd\u6570\u4e4b\u5916\uff0c\u5176\u4ed6\u6240\u6709\u7684\u51fd\u6570\u90fd\u662f\u53ef\u4ee5\u6307\u5b9a\u8fd9\u6837\u4e00\u4e2a\u7ebf\u7a0b\u53c2\u6570\u7684\uff0c\u53ea\u4e0d\u8fc7 withContext() \u51fd\u6570\u662f\u5f3a\u5236\u8981\u6c42\u6307\u5b9a\u7684\uff0c\u800c\u5176\u4ed6\u51fd\u6570\u5219\u662f\u53ef\u9009\u7684\u3002","title":"6.2 withContext()"},{"location":"Kotlin/%E5%8D%8F%E7%A8%8B/#7","text":"\u6211\u4eec\u5e38\u5e38\u7528\u56de\u8c03\u673a\u5236\u5b9e\u73b0\u83b7\u53d6\u5f02\u6b65\u7f51\u7edc\u8bf7\u6c42\u6570\u636e\u54cd\u5e94\u7684\u529f\u80fd\u3002\u8fd9\u79cd\u56de\u8c03\u673a\u5236\u57fa\u672c\u4e0a\u662f\u4f9d\u9760\u533f\u540d\u7c7b\u6765\u5b9e\u73b0\u7684\uff0c\u5199\u6cd5\u901a\u5e38\u6bd4\u8f83\u70e6\u7410\uff1a HttpUtil . sendHttpRequest ( address , object : HttpCallbackListener { override fun onFinish ( response : String ) { // \u5f97\u5230\u670d\u52a1\u5668\u8fd4\u56de\u7684\u5177\u4f53\u5185\u5bb9 } override fun onError ( e : Exception ) { // \u5bf9\u5f02\u5e38\u60c5\u51b5\u8fdb\u884c\u5904\u7406 } }) \u5728\u591a\u5c11\u4e2a\u5730\u65b9\u53d1\u8d77\u7f51\u7edc\u8bf7\u6c42\uff0c\u5c31\u9700\u8981\u7f16\u5199\u591a\u5c11\u6b21\u8fd9\u6837\u7684\u533f\u540d\u7c7b\u5b9e\u73b0\u3002\u6709\u6ca1\u6709\u66f4\u52a0\u7b80\u5355\u4e00\u70b9\u7684\u5199\u6cd5\u5462\uff1f\u501f\u52a9 Kotlin \u7684\u534f\u7a0b\u4f7f\u6211\u4eec\u7684\u8fd9\u79cd\u8bbe\u60f3\u6210\u4e3a\u4e86\u53ef\u80fd\uff0c\u4f7f\u7528 suspendCoroutine \u51fd\u6570\u5c31\u80fd\u5c06\u4f20\u7edf\u56de\u8c03\u673a\u5236\u7684\u5199\u6cd5\u5927\u5e45\u7b80\u5316\u3002 suspendCoroutine \u51fd\u6570\u5fc5\u987b\u5728\u534f\u7a0b\u4f5c\u7528\u57df\u6216\u6302\u8d77\u51fd\u6570\u4e2d\u624d\u80fd\u8c03\u7528\uff0c\u5b83\u63a5\u6536\u4e00\u4e2a Lambda \u8868\u8fbe\u5f0f\u53c2\u6570\uff0c\u4e3b\u8981\u4f5c\u7528\u662f\u5c06\u5f53\u524d\u534f\u7a0b\u7acb\u5373\u6302\u8d77\uff0c\u7136\u540e\u5728\u4e00\u4e2a\u666e\u901a\u7684\u7ebf\u7a0b\u4e2d\u6267\u884c Lambda \u8868\u8fbe\u5f0f\u4e2d\u7684\u4ee3\u7801\u3002Lambda \u8868\u8fbe\u5f0f\u7684\u53c2\u6570\u5217\u8868\u4e0a\u4f1a\u4f20\u5165\u4e00\u4e2a Continuation \u53c2\u6570\uff0c\u8c03\u7528\u5b83\u7684 resume() \u65b9\u6cd5\u6216 resumeWithException() \u53ef\u4ee5\u8ba9\u534f\u7a0b\u6062\u590d\u6267\u884c\u3002 suspend fun request ( address : String ): String = suspendCoroutine { continuation -> HttpUtil . sendHttpRequest ( address , object : HttpCallbackListener { override fun onFinish ( response : String ) { continuation . resume ( response ) } override fun onError ( e : Exception ) { continuation . resumeWithException ( t ) } }) } \u53ef\u4ee5\u770b\u5230\uff0c request() \u51fd\u6570\u662f\u4e00\u4e2a\u6302\u8d77\u51fd\u6570\uff0c\u63a5\u6536\u4e00\u4e2a address \u53c2\u6570\u3002\u5728 request() \u51fd\u6570\u7684\u5185\u90e8\u8c03\u7528\u4e86 suspendCoroutine \u51fd\u6570\uff0c\u8fd9\u6837\u5f53\u524d\u534f\u7a0b\u5c31\u4f1a\u88ab\u7acb\u523b\u6302\u8d77\uff0c\u800c Lambda \u8868\u8fbe\u5f0f\u4e2d\u7684\u4ee3\u7801\u5219\u4f1a\u5728\u666e\u901a\u7ebf\u7a0b\u4e2d\u6267\u884c\u3002\u63a5\u7740\u6211\u4eec\u5728Lambda\u8868\u8fbe\u5f0f\u4e2d\u8c03\u7528 HttpUtil.sendHttpRequest() \u65b9\u6cd5\u53d1\u8d77\u7f51\u7edc\u8bf7\u6c42\uff0c\u5e76\u901a\u8fc7\u4f20\u7edf\u56de\u8c03\u7684\u65b9\u5f0f\u76d1\u542c\u8bf7\u6c42\u7ed3\u679c\u3002\u5982\u679c\u8bf7\u6c42\u6210\u529f\u5c31\u8c03\u7528 Continuation\u7684resume() \u65b9\u6cd5\u6062\u590d\u88ab\u6302\u8d77\u7684\u534f\u7a0b\uff0c\u5e76\u4f20\u5165\u670d\u52a1\u5668\u54cd\u5e94\u7684\u6570\u636e\uff0c\u8be5\u503c\u4f1a\u6210\u4e3a suspendCoroutine \u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002\u5982\u679c\u8bf7\u6c42\u5931\u8d25\uff0c\u5c31\u8c03\u7528 Continuation \u7684 resumeWithException() \u6062\u590d\u88ab\u6302\u8d77\u7684\u534f\u7a0b\uff0c\u5e76\u4f20\u5165\u5177\u4f53\u7684\u5f02\u5e38\u539f\u56e0\u3002\u4f60\u53ef\u80fd\u4f1a\u8bf4\uff0c\u8fd9\u91cc\u4e0d\u662f\u4ecd\u7136\u4f7f\u7528\u4e86\u4f20\u7edf\u56de\u8c03\u7684\u5199\u6cd5\u5417\uff1f\u4ee3\u7801\u600e\u4e48\u5c31\u53d8\u5f97\u66f4\u52a0\u7b80\u5316\u4e86\uff1f\u8fd9\u662f\u56e0\u4e3a\uff0c\u4e0d\u7ba1\u4e4b\u540e\u6211\u4eec\u8981\u53d1\u8d77\u591a\u5c11\u6b21\u7f51\u7edc\u8bf7\u6c42\uff0c\u90fd\u4e0d\u9700\u8981\u518d\u91cd\u590d\u8fdb\u884c\u56de\u8c03\u5b9e\u73b0\u4e86\u3002\u6bd4\u5982\u8bf4\u83b7\u53d6\u767e\u5ea6\u9996\u9875\u7684\u54cd\u5e94\u6570\u636e\uff1a suspend fun getBaiduResponse () { try { val response = request ( \"https://www.baidu.com\" ) } catch ( e : Exception ) { // \u5bf9\u5f02\u5e38\u60c5\u51b5\u8fdb\u884c\u5904\u7406 } } \u7531\u4e8e getBaiduResponse() \u662f\u4e00\u4e2a\u6302\u8d77\u51fd\u6570\uff0c\u56e0\u6b64\u5f53\u5b83\u8c03\u7528\u4e86 request() \u51fd\u6570\u65f6\uff0c\u5f53\u524d\u7684\u534f\u7a0b\u5c31\u4f1a\u88ab\u7acb\u523b\u6302\u8d77\uff0c\u7136\u540e\u4e00\u76f4\u7b49\u5f85\u7f51\u7edc\u8bf7\u6c42\u6210\u529f\u6216\u5931\u8d25\u540e\uff0c\u5f53\u524d\u534f\u7a0b\u624d\u80fd\u6062\u590d\u8fd0\u884c\u3002\u8fd9\u6837\u5373\u4f7f\u4e0d\u4f7f\u7528\u56de\u8c03\u7684\u5199\u6cd5\uff0c\u6211\u4eec\u4e5f\u80fd\u591f\u83b7\u5f97\u5f02\u6b65\u7f51\u7edc\u8bf7\u6c42\u7684\u54cd\u5e94\u6570\u636e\uff0c\u800c\u5982\u679c\u8bf7\u6c42\u5931\u8d25\uff0c\u5219\u4f1a\u76f4\u63a5\u8fdb\u5165 catch \u8bed\u53e5\u5f53\u4e2d\u3002 \u4e0d\u8fc7\u8fd9\u91cc\u4f60\u53ef\u80fd\u53c8\u4f1a\u4ea7\u751f\u65b0\u7684\u7591\u60d1\uff0c getBaiduResponse() \u51fd\u6570\u88ab\u58f0\u660e\u6210\u4e86\u6302\u8d77\u51fd\u6570\uff0c\u8fd9\u6837\u5b83\u4e5f\u53ea\u80fd\u5728\u534f\u7a0b\u4f5c\u7528\u57df\u6216\u5176\u4ed6\u6302\u8d77\u51fd\u6570\u4e2d\u8c03\u7528\u4e86\uff0c\u4f7f\u7528\u8d77\u6765\u5c82\u4e0d\u662f\u975e\u5e38\u6709\u5c40\u9650\u6027\uff1f\u786e\u5b9e\uff0c\u56e0\u4e3a suspendCoroutine \u51fd\u6570\u672c\u8eab\u5c31\u662f\u8981\u7ed3\u5408\u534f\u7a0b\u4e00\u8d77\u4f7f\u7528\u7684\u3002 \u4e8b\u5b9e\u4e0a\uff0c suspendCoroutine \u51fd\u6570\u51e0\u4e4e\u53ef\u4ee5\u7528\u4e8e\u7b80\u5316\u4efb\u4f55\u56de\u8c03\u7684\u5199\u6cd5\uff0c\u6bd4\u5982\u4f7f\u7528 Retrofit \u6765\u53d1\u8d77\u7f51\u7edc\u8bf7\u6c42\u9700\u8981\u8fd9\u6837\u5199\uff1a fun main () { val retrofit = Retrofit . Builder () . baseUrl (...) . addConverterFactory (...) . build () val xxxService = retrofit . create ( XxxService :: class . java ) xxxService . getXXXData (). enqueue ( object : Call < ResponseBody > { override fun onResponse ( call : Call < ResponseBody > , response : Response < ResponseBody > ) { // \u5f97\u5230\u670d\u52a1\u5668\u8fd4\u56de\u7684\u6570\u636e } override onFailure ( call : Call < ResponseBody > , t : Throwable ) { t . printStackTrace () } }) } \u7531\u4e8e\u4e0d\u540c\u7684 Service \u63a5\u53e3\u8fd4\u56de\u7684\u6570\u636e\u7c7b\u578b\u4e5f\u4e0d\u540c\uff0c\u6240\u4ee5\u8fd9\u6b21\u6211\u4eec\u4e0d\u80fd\u50cf\u521a\u624d\u90a3\u6837\u9488\u5bf9\u5177\u4f53\u7684\u7c7b\u578b\u8fdb\u884c\u7f16\u7a0b\u4e86\uff0c\u800c\u662f\u8981\u4f7f\u7528\u6cdb\u578b\u7684\u65b9\u5f0f\u3002\u5b9a\u4e49\u4e00\u4e2a await() \u51fd\u6570\uff1a suspend fun < T > Call < T > . await (): T { return suspendCoroutine { continuation -> enqueue ( object : Call < T > { override fun onResponse ( call : Call < T > , response : Response < T > ) { val body = response . body () if ( body != null ) { continuation . resume ( body ) } else { RuntimeException ( \"response body is null\" ) } } override onFailure ( call : Call < ResponseBody > , t : Throwable ) { continuation . resumeWithException ( t ) } }) } } \u9996\u5148 await() \u51fd\u6570\u4ecd\u7136\u662f\u4e00\u4e2a\u6302\u8d77\u51fd\u6570\uff0c\u7136\u540e\u6211\u4eec\u7ed9\u5b83\u58f0\u660e\u4e86\u4e00\u4e2a\u6cdb\u578b T\uff0c\u5e76\u5c06 await() \u5b9a\u4e49\u6210\u4e86 Call<T> \u7684\u6269\u5c55\u51fd\u6570\uff0c\u8fd9\u6837\u6240\u6709\u8fd4\u56de\u503c\u662f Call \u7c7b\u578b\u7684 Retrofit \u7f51\u7edc\u8bf7\u6c42\u63a5\u53e3\u5c31\u90fd\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 await() \u51fd\u6570\u4e86\u3002\u63a5\u7740\uff0c await() \u51fd\u6570\u4e2d\u4f7f\u7528\u4e86 suspendCoroutine \u51fd\u6570\u6765\u6302\u8d77\u5f53\u524d\u534f\u7a0b\uff0c\u5e76\u4e14\u7531\u4e8e\u6269\u5c55\u51fd\u6570\u7684\u539f\u56e0\uff0c\u6211\u4eec\u73b0\u5728\u62e5\u6709\u4e86 Call \u5bf9\u8c61\u7684\u4e0a\u4e0b\u6587\uff0c\u90a3\u4e48\u8fd9\u91cc\u5c31\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 enqueue() \u65b9\u6cd5\u8ba9 Retrofit \u53d1\u8d77\u7f51\u7edc\u8bf7\u6c42\u3002\u63a5\u4e0b\u6765\uff0c\u4f7f\u7528\u540c\u6837\u7684\u65b9\u5f0f\u5bf9 Retrofit \u54cd\u5e94\u7684\u6570\u636e\u6216\u8005\u7f51\u7edc\u8bf7\u6c42\u5931\u8d25\u7684\u60c5\u51b5\u8fdb\u884c\u5904\u7406\u5c31\u53ef\u4ee5\u4e86\u3002\u53e6\u5916\u8fd8\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\uff0c\u5728 onResponse() \u56de\u8c03\u5f53\u4e2d\uff0c\u6211\u4eec\u8c03\u7528 body() \u65b9\u6cd5\u89e3\u6790\u51fa\u6765\u7684\u5bf9\u8c61\u662f\u53ef\u80fd\u4e3a\u7a7a\u7684\u3002\u5982\u679c\u4e3a\u7a7a\u7684\u8bdd\uff0c\u8fd9\u91cc\u7684\u505a\u6cd5\u662f\u624b\u52a8\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u4f60\u4e5f\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u903b\u8f91\u8fdb\u884c\u66f4\u52a0\u5408\u9002\u7684\u5904\u7406\u3002\u6709\u4e86 await() \u51fd\u6570\u4e4b\u540e\uff0c\u8c03\u7528\u6240\u6709 Retrofit \u7684 Service \u63a5\u53e3\u90fd\u4f1a\u53d8\u5f97\u6781\u5176\u7b80\u5355\uff1a suspend fun getXxxData () { val retrofit = Retrofit . Builder () . baseUrl (...) . addConverterFactory (...) . build () val xxxService = retrofit . create ( XxxService :: class . java ) val response = try { xxxService . getXXXData (). await () } catch ( e : Exception ) { // ... } }","title":"7. \u4f7f\u7528\u534f\u7a0b\u7b80\u5316\u56de\u8c03\u7684\u5199\u6cd5"},{"location":"Kotlin/%E5%BB%B6%E8%BF%9F%E5%88%9D%E5%A7%8B%E5%8C%96%E5%92%8C%E5%AF%86%E5%B0%81%E7%B1%BB/","text":"\u5ef6\u8fdf\u521d\u59cb\u5316\u548c\u5bc6\u5c01\u7c7b \u00b6 \u5ef6\u8fdf\u521d\u59cb\u5316 \u00b6 \u5982\u679c\u4e00\u4e2a\u7c7b\u4e2d\u5b58\u5728\u8bb8\u591a\u5168\u5c40\u53d8\u91cf\u5b9e\u4f8b\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u5b83\u4eec\u80fd\u591f\u6ee1\u8db3 Kotlin \u7684\u7a7a\u6307\u9488\u68c0\u67e5\u8bed\u6cd5\u6807\u51c6\uff0c\u4f60\u5c31\u4e0d\u5f97\u4e0d\u505a\u5f88\u591a\u989d\u5916\u7684\u975e\u7a7a\u5224\u65ad\u5de5\u4f5c\uff0c\u5373\u4f7f\u4f60\u5f88\u80af\u5b9a\u5b83\u4eec\u4e0d\u53ef\u80fd\u4e3a\u7a7a\uff0c\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a class MainActivity : AppCompatActivity (), View . OnClickListener { data Class Fruit ( val name : String ) private var fruits : List < Fruit >? = null override fun onCreate ( saveInstanceState : Bundle?) { // \u5047\u8bbe\u5b57\u7b26\u4e32\u662f\u4ece\u6570\u636e\u5e93\u4e2d\u8bfb\u53d6\u7684 fruits = listOf ( Fruit ( \"Apple\" ), Fruit ( \"Pear\" )) val btn : Button = findViewById ( R . id . btn ) btn . setOnClickListener ( this ) } override fun onClick ( v : View?) { fruits ?. forEach { fruit -> println ( fruit . name ) } } } \u5c06 fruits \u8bbe\u7f6e\u4e3a\u5168\u5c40\u53d8\u91cf\uff0c\u4f46\u5b83\u7684\u521d\u59cb\u5316\u5de5\u4f5c\u5728 onCreate \u4e2d\u5b8c\u6210\uff0c\u6240\u4ee5\u4e0d\u5f97\u4e0d\u628a\u5b83\u58f0\u660e\u4e3a List<Fruit>? \u5e76\u5c06\u5176\u8d4b\u503c\u4e3a null\u3002\u867d\u7136\u6211\u4eec\u4f1a\u5728 onCreate \u5bf9 fruits \u8fdb\u884c\u521d\u59cb\u5316\uff0c\u4e5f\u80fd\u4fdd\u8bc1 onClick \u4f1a\u5728 onCreate \u4e4b\u540e\u624d\u88ab\u8c03\u7528\uff0c\u4f46\u5728 onClick \u4e2d\u4f7f\u7528 fruits \u65f6\u4ecd\u8981\u8fdb\u884c\u5224\u7a7a\u5904\u7406\u3002 \u5f53\u4ee3\u7801\u4e2d\u6709\u8d8a\u6765\u8d8a\u591a\u7684\u5168\u5c40\u53d8\u91cf\u5b9e\u4f8b\u65f6\uff0c\u8fd9\u4e2a\u95ee\u9898\u5c06\u6108\u53d1\u660e\u663e\u3002\u89e3\u51b3\u529e\u6cd5\u4e5f\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u5bf9\u5168\u5c40\u53d8\u91cf\u8fdb\u884c\u5ef6\u8fdf\u521d\u59cb\u5316\u3002 \u5ef6\u8fdf\u521d\u59cb\u5316\u5173\u952e\u5b57\u4e3a lateinit \uff0c\u5b83\u4f1a\u544a\u8bc9 Kotlin \u7f16\u8bd1\u5668\uff1a\u6211\u7b49\u4f1a\u518d\u5bf9\u8fd9\u4e2a\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\u3002\u8fd9\u6837\u5c31\u65e0\u9700\u5728\u4e00\u5f00\u59cb\u5c06\u53d8\u91cf\u8d4b\u503c\u4e3a null \u4e86\uff0c\u53d8\u91cf\u4e5f\u5c31\u65e0\u9700\u58f0\u660e\u4e3a\u53ef\u7a7a\u7c7b\u578b\uff0c\u540e\u7eed\u4f7f\u7528\u4e5f\u5c31\u514d\u53bb\u4e86\u53d8\u91cf\u5224\u7a7a\u7684\u7e41\u7410\u6b65\u9aa4\u3002 class MainActivity : AppCompatActivity (), View . OnClickListener { data Class Fruit ( val name : String ) private lateinit var fruits : List < Fruit > override fun onCreate ( saveInstanceState : Bundle?) { // \u5047\u8bbe\u5b57\u7b26\u4e32\u662f\u4ece\u6570\u636e\u5e93\u4e2d\u8bfb\u53d6\u7684 fruits = listOf ( Fruit ( \"Apple\" ), Fruit ( \"Pear\" )) val btn : Button = findViewById ( R . id . btn ) btn . setOnClickListener ( this ) } override fun onClick ( v : View?) { fruits . forEach { fruit -> println ( fruit . name ) } } } \u4f46\u5ef6\u8fdf\u521d\u59cb\u5316\u4e5f\u4e0d\u662f\u6ca1\u6709\u98ce\u9669\uff0c\u4f60\u5fc5\u987b\u786e\u4fdd\u53d8\u91cf\u5728\u4f7f\u7528\u4e4b\u524d\u5df2\u7ecf\u5b8c\u6210\u4e86\u521d\u59cb\u5316\u5de5\u4f5c\u3002\u5f53\u7136\uff0c\u4f60\u8fd8\u53ef\u4ee5\u901a\u8fc7\u4ee3\u7801\u6765\u5224\u65ad\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u662f\u5426\u5df2\u7ecf\u5b8c\u6210\u4e86\u521d\u59cb\u5316\uff0c\u8fd9\u6837\u80fd\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u6709\u6548\u907f\u514d\u91cd\u590d\u5bf9\u4e00\u4e2a\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\u64cd\u4f5c\u3002 class MainActivity : AppCompatActivity (), View . OnClickListener { data Class Fruit ( val name : String ) private lateinit var fruits : List < Fruit > override fun onCreate ( saveInstanceState : Bundle?) { if ( !:: fruits . isInitialized ){ fruits = listOf ( Fruit ( \"Apple\" ), Fruit ( \"Pear\" )) } ... } } ::xxx.isInitialized \u53ef\u7528\u4e8e\u5224\u65ad\u53d8\u91cf xxx \u662f\u5426\u5df2\u7ecf\u521d\u59cb\u5316 \u5bc6\u5c01\u7c7b \u00b6 interface Result class Success ( val msg : String ) : Result class Failure ( val error : Exception ) : Result fun getResultMsg ( result : Result ) = when ( result ) { is Success -> result . msg is Failure -> result . error . message else -> throw IllegalArgumentException () } \u5b9e\u9645\u4e0a Result \u53ea\u53ef\u80fd\u662f Success \u6216 Failure\uff0celse\u6761\u4ef6\u662f\u6c38\u8fdc\u8d70\u4e0d\u5230\u7684\uff0c\u4f46\u4e3a\u4e86\u6ee1\u8db3 Kotlin \u7f16\u8bd1\u5668\u7684\u8bed\u6cd5\u68c0\u67e5\uff0c\u6211\u4eec\u4e0d\u5f97\u4e0d\u591a\u7f16\u5199\u8fd9\u4e2a else \u6761\u4ef6\u3002\u9664\u6b64\u4ee5\u5916\uff0c\u7f16\u5199 else \u6761\u4ef6\u8fd8\u6709\u53e6\u5916\u6709\u4e00\u4e2a\u6f5c\u5728\u98ce\u9669\uff0c\u5982\u679c\u73b0\u5728\u65b0\u589e\u4e86\u4e00\u4e2a Unknown \u7c7b\u5e76\u5b9e\u73b0 Result \u63a5\u53e3\uff0c\u4f46\u5fd8\u8bb0\u5728 getResultMsg() \u4e2d\u6dfb\u52a0\u76f8\u5e94\u6761\u4ef6\u5206\u652f\uff0c\u5c31\u4f1a\u5bfc\u81f4\u8fd0\u884c\u65f6\u8fdb\u5165 else \u6761\u4ef6\u91cc\u9020\u6210\u7a0b\u5e8f\u51fa\u73b0\u5f02\u5e38\u800c\u5d29\u6e83\u3002 \u4f7f\u7528\u5bc6\u5c01\u7c7b\u5219\u53ef\u4ee5\u5f88\u597d\u7684\u89e3\u51b3\u4ee5\u4e0a\u95ee\u9898\uff0c\u5bc6\u5c01\u7c7b\u7684\u5173\u952e\u5b57 \u4e3a sealed class sealed class Result class Success ( val msg : String ) : Result () class Failure ( val error : Exception ) : Result () \u5c06 Result \u6539\u4e3a\u5bc6\u5c01\u7c7b\u540e\uff0c getResultMsg() \u4e2d\u7684 else \u6761\u4ef6\u5c31\u4e0d\u518d\u662f\u5fc5\u9700\u7684\u4e86 fun getResultMsg ( result : Result ) = when ( result ) { is Success -> result . msg is Failure -> result . error . message } \u56e0\u4e3a\u5f53\u5728 when \u4e2d\u4f20\u5165\u4e00\u4e2a\u5bc6\u5c01\u7c7b\u53d8\u91cf\u4f5c\u4e3a\u6761\u4ef6\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u68c0\u67e5\u8be5\u5bc6\u5c01\u7c7b\u6709\u54ea\u4e9b\u5b50\u7c7b\uff0c\u5e76\u5f3a\u5236\u8981\u6c42\u5c06\u6bcf\u4e00\u4e2a\u5b50\u7c7b\u6240\u5bf9\u5e94\u7684\u6761\u4ef6\u5168\u90e8\u5904\u7406\u3002 \uff08\u5bc6\u5c01\u7c7b\u53ca\u5176\u6240\u6709\u5b50\u7c7b\u53ea\u80fd\u5b9a\u4e49\u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u7684\u9876\u5c42\u4f4d\u7f6e\uff0c\u4e0d\u80fd\u5d4c\u5957\u5728\u5176\u4ed6\u7c7b\u4e2d\uff09","title":"\u5ef6\u8fdf\u521d\u59cb\u5316\u548c\u5bc6\u5c01\u7c7b"},{"location":"Kotlin/%E5%BB%B6%E8%BF%9F%E5%88%9D%E5%A7%8B%E5%8C%96%E5%92%8C%E5%AF%86%E5%B0%81%E7%B1%BB/#_1","text":"","title":"\u5ef6\u8fdf\u521d\u59cb\u5316\u548c\u5bc6\u5c01\u7c7b"},{"location":"Kotlin/%E5%BB%B6%E8%BF%9F%E5%88%9D%E5%A7%8B%E5%8C%96%E5%92%8C%E5%AF%86%E5%B0%81%E7%B1%BB/#_2","text":"\u5982\u679c\u4e00\u4e2a\u7c7b\u4e2d\u5b58\u5728\u8bb8\u591a\u5168\u5c40\u53d8\u91cf\u5b9e\u4f8b\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u5b83\u4eec\u80fd\u591f\u6ee1\u8db3 Kotlin \u7684\u7a7a\u6307\u9488\u68c0\u67e5\u8bed\u6cd5\u6807\u51c6\uff0c\u4f60\u5c31\u4e0d\u5f97\u4e0d\u505a\u5f88\u591a\u989d\u5916\u7684\u975e\u7a7a\u5224\u65ad\u5de5\u4f5c\uff0c\u5373\u4f7f\u4f60\u5f88\u80af\u5b9a\u5b83\u4eec\u4e0d\u53ef\u80fd\u4e3a\u7a7a\uff0c\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a class MainActivity : AppCompatActivity (), View . OnClickListener { data Class Fruit ( val name : String ) private var fruits : List < Fruit >? = null override fun onCreate ( saveInstanceState : Bundle?) { // \u5047\u8bbe\u5b57\u7b26\u4e32\u662f\u4ece\u6570\u636e\u5e93\u4e2d\u8bfb\u53d6\u7684 fruits = listOf ( Fruit ( \"Apple\" ), Fruit ( \"Pear\" )) val btn : Button = findViewById ( R . id . btn ) btn . setOnClickListener ( this ) } override fun onClick ( v : View?) { fruits ?. forEach { fruit -> println ( fruit . name ) } } } \u5c06 fruits \u8bbe\u7f6e\u4e3a\u5168\u5c40\u53d8\u91cf\uff0c\u4f46\u5b83\u7684\u521d\u59cb\u5316\u5de5\u4f5c\u5728 onCreate \u4e2d\u5b8c\u6210\uff0c\u6240\u4ee5\u4e0d\u5f97\u4e0d\u628a\u5b83\u58f0\u660e\u4e3a List<Fruit>? \u5e76\u5c06\u5176\u8d4b\u503c\u4e3a null\u3002\u867d\u7136\u6211\u4eec\u4f1a\u5728 onCreate \u5bf9 fruits \u8fdb\u884c\u521d\u59cb\u5316\uff0c\u4e5f\u80fd\u4fdd\u8bc1 onClick \u4f1a\u5728 onCreate \u4e4b\u540e\u624d\u88ab\u8c03\u7528\uff0c\u4f46\u5728 onClick \u4e2d\u4f7f\u7528 fruits \u65f6\u4ecd\u8981\u8fdb\u884c\u5224\u7a7a\u5904\u7406\u3002 \u5f53\u4ee3\u7801\u4e2d\u6709\u8d8a\u6765\u8d8a\u591a\u7684\u5168\u5c40\u53d8\u91cf\u5b9e\u4f8b\u65f6\uff0c\u8fd9\u4e2a\u95ee\u9898\u5c06\u6108\u53d1\u660e\u663e\u3002\u89e3\u51b3\u529e\u6cd5\u4e5f\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u5bf9\u5168\u5c40\u53d8\u91cf\u8fdb\u884c\u5ef6\u8fdf\u521d\u59cb\u5316\u3002 \u5ef6\u8fdf\u521d\u59cb\u5316\u5173\u952e\u5b57\u4e3a lateinit \uff0c\u5b83\u4f1a\u544a\u8bc9 Kotlin \u7f16\u8bd1\u5668\uff1a\u6211\u7b49\u4f1a\u518d\u5bf9\u8fd9\u4e2a\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\u3002\u8fd9\u6837\u5c31\u65e0\u9700\u5728\u4e00\u5f00\u59cb\u5c06\u53d8\u91cf\u8d4b\u503c\u4e3a null \u4e86\uff0c\u53d8\u91cf\u4e5f\u5c31\u65e0\u9700\u58f0\u660e\u4e3a\u53ef\u7a7a\u7c7b\u578b\uff0c\u540e\u7eed\u4f7f\u7528\u4e5f\u5c31\u514d\u53bb\u4e86\u53d8\u91cf\u5224\u7a7a\u7684\u7e41\u7410\u6b65\u9aa4\u3002 class MainActivity : AppCompatActivity (), View . OnClickListener { data Class Fruit ( val name : String ) private lateinit var fruits : List < Fruit > override fun onCreate ( saveInstanceState : Bundle?) { // \u5047\u8bbe\u5b57\u7b26\u4e32\u662f\u4ece\u6570\u636e\u5e93\u4e2d\u8bfb\u53d6\u7684 fruits = listOf ( Fruit ( \"Apple\" ), Fruit ( \"Pear\" )) val btn : Button = findViewById ( R . id . btn ) btn . setOnClickListener ( this ) } override fun onClick ( v : View?) { fruits . forEach { fruit -> println ( fruit . name ) } } } \u4f46\u5ef6\u8fdf\u521d\u59cb\u5316\u4e5f\u4e0d\u662f\u6ca1\u6709\u98ce\u9669\uff0c\u4f60\u5fc5\u987b\u786e\u4fdd\u53d8\u91cf\u5728\u4f7f\u7528\u4e4b\u524d\u5df2\u7ecf\u5b8c\u6210\u4e86\u521d\u59cb\u5316\u5de5\u4f5c\u3002\u5f53\u7136\uff0c\u4f60\u8fd8\u53ef\u4ee5\u901a\u8fc7\u4ee3\u7801\u6765\u5224\u65ad\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u662f\u5426\u5df2\u7ecf\u5b8c\u6210\u4e86\u521d\u59cb\u5316\uff0c\u8fd9\u6837\u80fd\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u6709\u6548\u907f\u514d\u91cd\u590d\u5bf9\u4e00\u4e2a\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\u64cd\u4f5c\u3002 class MainActivity : AppCompatActivity (), View . OnClickListener { data Class Fruit ( val name : String ) private lateinit var fruits : List < Fruit > override fun onCreate ( saveInstanceState : Bundle?) { if ( !:: fruits . isInitialized ){ fruits = listOf ( Fruit ( \"Apple\" ), Fruit ( \"Pear\" )) } ... } } ::xxx.isInitialized \u53ef\u7528\u4e8e\u5224\u65ad\u53d8\u91cf xxx \u662f\u5426\u5df2\u7ecf\u521d\u59cb\u5316","title":"\u5ef6\u8fdf\u521d\u59cb\u5316"},{"location":"Kotlin/%E5%BB%B6%E8%BF%9F%E5%88%9D%E5%A7%8B%E5%8C%96%E5%92%8C%E5%AF%86%E5%B0%81%E7%B1%BB/#_3","text":"interface Result class Success ( val msg : String ) : Result class Failure ( val error : Exception ) : Result fun getResultMsg ( result : Result ) = when ( result ) { is Success -> result . msg is Failure -> result . error . message else -> throw IllegalArgumentException () } \u5b9e\u9645\u4e0a Result \u53ea\u53ef\u80fd\u662f Success \u6216 Failure\uff0celse\u6761\u4ef6\u662f\u6c38\u8fdc\u8d70\u4e0d\u5230\u7684\uff0c\u4f46\u4e3a\u4e86\u6ee1\u8db3 Kotlin \u7f16\u8bd1\u5668\u7684\u8bed\u6cd5\u68c0\u67e5\uff0c\u6211\u4eec\u4e0d\u5f97\u4e0d\u591a\u7f16\u5199\u8fd9\u4e2a else \u6761\u4ef6\u3002\u9664\u6b64\u4ee5\u5916\uff0c\u7f16\u5199 else \u6761\u4ef6\u8fd8\u6709\u53e6\u5916\u6709\u4e00\u4e2a\u6f5c\u5728\u98ce\u9669\uff0c\u5982\u679c\u73b0\u5728\u65b0\u589e\u4e86\u4e00\u4e2a Unknown \u7c7b\u5e76\u5b9e\u73b0 Result \u63a5\u53e3\uff0c\u4f46\u5fd8\u8bb0\u5728 getResultMsg() \u4e2d\u6dfb\u52a0\u76f8\u5e94\u6761\u4ef6\u5206\u652f\uff0c\u5c31\u4f1a\u5bfc\u81f4\u8fd0\u884c\u65f6\u8fdb\u5165 else \u6761\u4ef6\u91cc\u9020\u6210\u7a0b\u5e8f\u51fa\u73b0\u5f02\u5e38\u800c\u5d29\u6e83\u3002 \u4f7f\u7528\u5bc6\u5c01\u7c7b\u5219\u53ef\u4ee5\u5f88\u597d\u7684\u89e3\u51b3\u4ee5\u4e0a\u95ee\u9898\uff0c\u5bc6\u5c01\u7c7b\u7684\u5173\u952e\u5b57 \u4e3a sealed class sealed class Result class Success ( val msg : String ) : Result () class Failure ( val error : Exception ) : Result () \u5c06 Result \u6539\u4e3a\u5bc6\u5c01\u7c7b\u540e\uff0c getResultMsg() \u4e2d\u7684 else \u6761\u4ef6\u5c31\u4e0d\u518d\u662f\u5fc5\u9700\u7684\u4e86 fun getResultMsg ( result : Result ) = when ( result ) { is Success -> result . msg is Failure -> result . error . message } \u56e0\u4e3a\u5f53\u5728 when \u4e2d\u4f20\u5165\u4e00\u4e2a\u5bc6\u5c01\u7c7b\u53d8\u91cf\u4f5c\u4e3a\u6761\u4ef6\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u68c0\u67e5\u8be5\u5bc6\u5c01\u7c7b\u6709\u54ea\u4e9b\u5b50\u7c7b\uff0c\u5e76\u5f3a\u5236\u8981\u6c42\u5c06\u6bcf\u4e00\u4e2a\u5b50\u7c7b\u6240\u5bf9\u5e94\u7684\u6761\u4ef6\u5168\u90e8\u5904\u7406\u3002 \uff08\u5bc6\u5c01\u7c7b\u53ca\u5176\u6240\u6709\u5b50\u7c7b\u53ea\u80fd\u5b9a\u4e49\u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u7684\u9876\u5c42\u4f4d\u7f6e\uff0c\u4e0d\u80fd\u5d4c\u5957\u5728\u5176\u4ed6\u7c7b\u4e2d\uff09","title":"\u5bc6\u5c01\u7c7b"},{"location":"Kotlin/%E6%89%A9%E5%B1%95%E5%87%BD%E6%95%B0%E5%92%8C%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD/","text":"\u6269\u5c55\u51fd\u6570\u548c\u8fd0\u7b97\u7b26\u91cd\u8f7d \u00b6 \u6269\u5c55\u51fd\u6570 \u00b6 \u6269\u5c55\u51fd\u6570\u8868\u793a\u5373\u4f7f\u5728\u4e0d\u4fee\u6539\u67d0\u4e2a\u7c7b\u6e90\u7801\u7684\u60c5\u51b5\u4e0b\uff0c\u4ecd\u53ef\u4ee5\u5411\u8be5\u7c7b\u6dfb\u52a0\u65b0\u7684\u51fd\u6570\u3002 \u5b9a\u4e49\u6269\u5c55\u51fd\u6570\u7684\u8bed\u6cd5\u7ed3\u6784\uff1a fun ClassName . methodName ( param1 : Int , param2 : Int ) : Int { return 0 } \u4ee5\u7edf\u8ba1\u5b57\u7b26\u4e32\u7684\u5b57\u6bcd\u6570\u91cf\u4e3a\u4f8b\uff0c\u7528\u6269\u5c55\u51fd\u6570\u6765\u5b9e\u73b0\uff1a fun String . lettersCount () : Int { var count = 0 for ( char in this ){ if ( char . isLetter ()) count ++ } } val count = \"abcde123@###!#\" . letterCount () \u5c06 letterCount() \u5b9a\u4e49\u4e3a String \u7684\u62d3\u5c55\u65b9\u6cd5\uff0c\u51fd\u6570\u4e2d\u5c31\u81ea\u52a8\u62e5\u6709\u4e86 String \u7684\u4e0a\u4e0b\u6587\uff0c\u6240\u4ee5\u76f4\u63a5 \u904d\u5386 this \u5224\u65ad\u5b57\u7b26\u662f\u5426\u4e3a\u5b57\u6bcd\u5373\u53ef\u3002 \u6269\u5c55\u51fd\u6570\u53ef\u4ee5\u5b9a\u4e49\u5728\u4efb\u4f55\u7684\u7c7b\u91cc\u9762\uff0c\u4e0d\u8fc7\u6700\u597d\u8fd8\u662f\u5c06\u62d3\u5c55\u51fd\u6570\u5b9a\u4e49\u4e3a\u9876\u5c42\u65b9\u6cd5\uff0c\u4ee5\u4fbf\u4f7f\u5176\u62e5\u6709\u5168\u5c40\u7684\u8bbf\u95ee\u57df\uff0c\u53e6\u5916\uff0c\u9876\u5c42\u65b9\u6cd5\u6240\u5728\u6587\u4ef6\u7684\u6587\u4ef6\u540d\u867d\u7136\u6ca1\u6709\u9650\u5236\uff0c\u4e0d\u8fc7\u5efa\u8bae\u5411\u54ea\u4e2a\u7c7b\u6dfb\u52a0\u62d3\u5c55\u65b9\u6cd5\uff0c\u5c31\u5b9a\u4e49\u4e00\u4e2a\u540c\u540d\u7684 .kt \u6587\u4ef6\uff0c\u4ee5\u4fbf\u540e\u7eed\u67e5\u627e\u3002 \u8fd0\u7b97\u7b26\u91cd\u8f7d \u00b6 \u6211\u4eec\u90fd\u77e5\u9053\uff0c\u6570\u5b57 + \u6570\u5b57 \u8868\u793a\u6c42\u548c\uff0c\u5b57\u7b26\u4e32 + \u5b57\u7b26\u4e32 \u8868\u793a\u5bf9\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u62fc\u63a5\uff0c\u5728 Kotlin \u4e2d\uff0c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5141\u8bb8\u6211\u4eec\u8ba9\u4efb\u610f\u4e24\u4e2a\u5bf9\u8c61\u8fdb\u884c\u76f8\u52a0\uff0c\u6216\u662f\u8fdb\u884c\u66f4\u591a\u7684\u5176\u4ed6\u8fd0\u7b97\u3002 \u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u5173\u952e\u5b57\u4e3a operator \uff0c\u53ea\u8981\u5728\u6307\u5b9a\u51fd\u6570\u524d\u52a0\u4e0a\u8fd9\u4e2a\u5173\u952e\u5b57\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u8fd0\u7b97\u7b26\u91cd\u8f7d\u529f\u80fd\u3002\u8fd9\u4e2a\u6307\u5b9a\u51fd\u6570\u662f\u4ec0\u4e48\u51fd\u6570\u5462\uff1f\u4e0d\u540c\u7684\u8fd0\u7b97\u7b26\u5bf9\u5e94\u7684\u91cd\u8f7d\u51fd\u6570\u662f\u4e0d\u540c\u7684\uff0c\u4f8b\u5982\uff0c\"\"+\" \u5bf9\u5e94\u7684\u662f plus() \u51fd\u6570\uff0c\"-\" \u5bf9\u5e94\u7684\u662f minus() \u51fd\u6570\u3002 \u4ee5\u52a0\u53f7\u8fd0\u7b97\u7b26\u4e3a\u4f8b\uff0c\u5b9e\u73b0\u8ba9\u4e24\u4e2a\u5bf9\u8c61\u76f8\u52a0\u7684\u529f\u80fd\uff1a class Obj { operator fun plus ( obj : Obj ): Obj { // \u5904\u7406\u76f8\u52a0\u7684\u903b\u8f91 } } val obj1 = Obj () val obj2 = Obj () val obj3 = obj1 + obj2 obj1 + obj2 \u7684\u8bed\u6cd5\u770b\u4f3c\u795e\u5947\uff0c\u5b9e\u9645\u4e0a\uff0c\u5b83\u4f1a\u5728\u7f16\u8bd1\u65f6\u88ab\u8f6c\u6362\u6210 obj1.plus(obj2) \u7684\u8c03\u7528\u65b9\u5f0f\u3002 \u4e0d\u4ec5\u5982\u6b64\uff0cKotlin \u8fd8\u5141\u8bb8\u6211\u4eec\u5bf9\u540c\u4e00\u4e2a\u8fd0\u7b97\u7b26\u8fdb\u884c\u591a\u91cd\u91cd\u8f7d\uff0c\u4f8b\u5982\uff0c\u9664\u4e86\u5b9e\u73b0 Obj \u548c Obj \u76f8\u52a0\u5916\uff0c\u8fd8\u5b9e\u73b0 Obj \u548c\u6570\u5b57\u76f8\u52a0\u3002 class Obj { operator fun plus ( obj : Obj ): Obj { // \u5904\u7406\u76f8\u52a0\u7684\u903b\u8f91 } operator fun plus ( num : Int ): Obj { // \u5904\u7406\u76f8\u52a0\u7684\u903b\u8f91 } } val obj = Obj () val n = 100 obj + n \u8bed\u6cd5\u7cd6\u8868\u8fbe\u5f0f\u548c\u5b9e\u9645\u8c03\u7528\u51fd\u6570\u5bf9\u7167\u8868 \u8bed\u6cd5\u7cd6\u8868\u8fbe\u5f0f \u5b9e\u9645\u8c03\u7528\u51fd\u6570 a + b a.plus(b) a - b a.minus(b) a * b a.times(b) a / b a.div(b) a % b a.rem(b) a++ a.inc() a-- a.dec() +a a.unaryPlus() -a a.unaryMinus() !a a.not() a == b a.equals(b) a > b a < b a >= b a.compareTo(b) a <= b a..b a.rangTo(b) a[b] a.get(b) a[b] = c a.set(b, c) a in b b.contains(a)","title":"\u6269\u5c55\u51fd\u6570\u548c\u8fd0\u7b97\u7b26\u91cd\u8f7d"},{"location":"Kotlin/%E6%89%A9%E5%B1%95%E5%87%BD%E6%95%B0%E5%92%8C%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD/#_1","text":"","title":"\u6269\u5c55\u51fd\u6570\u548c\u8fd0\u7b97\u7b26\u91cd\u8f7d"},{"location":"Kotlin/%E6%89%A9%E5%B1%95%E5%87%BD%E6%95%B0%E5%92%8C%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD/#_2","text":"\u6269\u5c55\u51fd\u6570\u8868\u793a\u5373\u4f7f\u5728\u4e0d\u4fee\u6539\u67d0\u4e2a\u7c7b\u6e90\u7801\u7684\u60c5\u51b5\u4e0b\uff0c\u4ecd\u53ef\u4ee5\u5411\u8be5\u7c7b\u6dfb\u52a0\u65b0\u7684\u51fd\u6570\u3002 \u5b9a\u4e49\u6269\u5c55\u51fd\u6570\u7684\u8bed\u6cd5\u7ed3\u6784\uff1a fun ClassName . methodName ( param1 : Int , param2 : Int ) : Int { return 0 } \u4ee5\u7edf\u8ba1\u5b57\u7b26\u4e32\u7684\u5b57\u6bcd\u6570\u91cf\u4e3a\u4f8b\uff0c\u7528\u6269\u5c55\u51fd\u6570\u6765\u5b9e\u73b0\uff1a fun String . lettersCount () : Int { var count = 0 for ( char in this ){ if ( char . isLetter ()) count ++ } } val count = \"abcde123@###!#\" . letterCount () \u5c06 letterCount() \u5b9a\u4e49\u4e3a String \u7684\u62d3\u5c55\u65b9\u6cd5\uff0c\u51fd\u6570\u4e2d\u5c31\u81ea\u52a8\u62e5\u6709\u4e86 String \u7684\u4e0a\u4e0b\u6587\uff0c\u6240\u4ee5\u76f4\u63a5 \u904d\u5386 this \u5224\u65ad\u5b57\u7b26\u662f\u5426\u4e3a\u5b57\u6bcd\u5373\u53ef\u3002 \u6269\u5c55\u51fd\u6570\u53ef\u4ee5\u5b9a\u4e49\u5728\u4efb\u4f55\u7684\u7c7b\u91cc\u9762\uff0c\u4e0d\u8fc7\u6700\u597d\u8fd8\u662f\u5c06\u62d3\u5c55\u51fd\u6570\u5b9a\u4e49\u4e3a\u9876\u5c42\u65b9\u6cd5\uff0c\u4ee5\u4fbf\u4f7f\u5176\u62e5\u6709\u5168\u5c40\u7684\u8bbf\u95ee\u57df\uff0c\u53e6\u5916\uff0c\u9876\u5c42\u65b9\u6cd5\u6240\u5728\u6587\u4ef6\u7684\u6587\u4ef6\u540d\u867d\u7136\u6ca1\u6709\u9650\u5236\uff0c\u4e0d\u8fc7\u5efa\u8bae\u5411\u54ea\u4e2a\u7c7b\u6dfb\u52a0\u62d3\u5c55\u65b9\u6cd5\uff0c\u5c31\u5b9a\u4e49\u4e00\u4e2a\u540c\u540d\u7684 .kt \u6587\u4ef6\uff0c\u4ee5\u4fbf\u540e\u7eed\u67e5\u627e\u3002","title":"\u6269\u5c55\u51fd\u6570"},{"location":"Kotlin/%E6%89%A9%E5%B1%95%E5%87%BD%E6%95%B0%E5%92%8C%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD/#_3","text":"\u6211\u4eec\u90fd\u77e5\u9053\uff0c\u6570\u5b57 + \u6570\u5b57 \u8868\u793a\u6c42\u548c\uff0c\u5b57\u7b26\u4e32 + \u5b57\u7b26\u4e32 \u8868\u793a\u5bf9\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u62fc\u63a5\uff0c\u5728 Kotlin \u4e2d\uff0c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5141\u8bb8\u6211\u4eec\u8ba9\u4efb\u610f\u4e24\u4e2a\u5bf9\u8c61\u8fdb\u884c\u76f8\u52a0\uff0c\u6216\u662f\u8fdb\u884c\u66f4\u591a\u7684\u5176\u4ed6\u8fd0\u7b97\u3002 \u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u5173\u952e\u5b57\u4e3a operator \uff0c\u53ea\u8981\u5728\u6307\u5b9a\u51fd\u6570\u524d\u52a0\u4e0a\u8fd9\u4e2a\u5173\u952e\u5b57\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u8fd0\u7b97\u7b26\u91cd\u8f7d\u529f\u80fd\u3002\u8fd9\u4e2a\u6307\u5b9a\u51fd\u6570\u662f\u4ec0\u4e48\u51fd\u6570\u5462\uff1f\u4e0d\u540c\u7684\u8fd0\u7b97\u7b26\u5bf9\u5e94\u7684\u91cd\u8f7d\u51fd\u6570\u662f\u4e0d\u540c\u7684\uff0c\u4f8b\u5982\uff0c\"\"+\" \u5bf9\u5e94\u7684\u662f plus() \u51fd\u6570\uff0c\"-\" \u5bf9\u5e94\u7684\u662f minus() \u51fd\u6570\u3002 \u4ee5\u52a0\u53f7\u8fd0\u7b97\u7b26\u4e3a\u4f8b\uff0c\u5b9e\u73b0\u8ba9\u4e24\u4e2a\u5bf9\u8c61\u76f8\u52a0\u7684\u529f\u80fd\uff1a class Obj { operator fun plus ( obj : Obj ): Obj { // \u5904\u7406\u76f8\u52a0\u7684\u903b\u8f91 } } val obj1 = Obj () val obj2 = Obj () val obj3 = obj1 + obj2 obj1 + obj2 \u7684\u8bed\u6cd5\u770b\u4f3c\u795e\u5947\uff0c\u5b9e\u9645\u4e0a\uff0c\u5b83\u4f1a\u5728\u7f16\u8bd1\u65f6\u88ab\u8f6c\u6362\u6210 obj1.plus(obj2) \u7684\u8c03\u7528\u65b9\u5f0f\u3002 \u4e0d\u4ec5\u5982\u6b64\uff0cKotlin \u8fd8\u5141\u8bb8\u6211\u4eec\u5bf9\u540c\u4e00\u4e2a\u8fd0\u7b97\u7b26\u8fdb\u884c\u591a\u91cd\u91cd\u8f7d\uff0c\u4f8b\u5982\uff0c\u9664\u4e86\u5b9e\u73b0 Obj \u548c Obj \u76f8\u52a0\u5916\uff0c\u8fd8\u5b9e\u73b0 Obj \u548c\u6570\u5b57\u76f8\u52a0\u3002 class Obj { operator fun plus ( obj : Obj ): Obj { // \u5904\u7406\u76f8\u52a0\u7684\u903b\u8f91 } operator fun plus ( num : Int ): Obj { // \u5904\u7406\u76f8\u52a0\u7684\u903b\u8f91 } } val obj = Obj () val n = 100 obj + n \u8bed\u6cd5\u7cd6\u8868\u8fbe\u5f0f\u548c\u5b9e\u9645\u8c03\u7528\u51fd\u6570\u5bf9\u7167\u8868 \u8bed\u6cd5\u7cd6\u8868\u8fbe\u5f0f \u5b9e\u9645\u8c03\u7528\u51fd\u6570 a + b a.plus(b) a - b a.minus(b) a * b a.times(b) a / b a.div(b) a % b a.rem(b) a++ a.inc() a-- a.dec() +a a.unaryPlus() -a a.unaryMinus() !a a.not() a == b a.equals(b) a > b a < b a >= b a.compareTo(b) a <= b a..b a.rangTo(b) a[b] a.get(b) a[b] = c a.set(b, c) a in b b.contains(a)","title":"\u8fd0\u7b97\u7b26\u91cd\u8f7d"},{"location":"Kotlin/%E6%B3%9B%E5%9E%8B%E4%B8%8E%E5%A7%94%E6%89%98/","text":"\u6cdb\u578b\u4e0e\u59d4\u6258 \u00b6 \u6cdb\u578b \u00b6 \u6cdb\u578b\u4e3b\u8981\u6709\u4e24\u79cd\u5b9a\u4e49\u65b9\u5f0f\uff1a \u6cdb\u578b\u7c7b \u6cdb\u578b\u65b9\u6cd5 \u4f7f\u7528\u7684\u8bed\u6cd5\u7ed3\u6784\u90fd\u662f <T> \uff0c\u5f53\u7136\u5b57\u6bcd T \u4e0d\u662f\u56fa\u5b9a\u8981\u6c42\uff0c\u5176\u5b9e\u4f7f\u7528\u4efb\u4f55\u5b57\u6bcd\u90fd\u662f\u53ef\u4ee5\u7684\uff0c\u4e0d\u8fc7 T \u662f\u4e00\u79cd\u7ea6\u5b9a\u4fd7\u6210\u7684\u6cdb\u578b\u5199\u6cd5\u3002 // \u5b9a\u4e49\u6cdb\u578b\u7c7b class MyClass < T > { fun method ( param : T ): T { return param } } fun main () { val myClass = MyClass < Int > () val result = myClass . method ( 123 ) } \u4e0a\u9762\u7684 MyClass \u5c31\u662f\u4e00\u4e2a\u6cdb\u578b\u7c7b\uff0cMyClass \u4e2d\u7684\u65b9\u6cd5\u5141\u8bb8\u4f7f\u7528 T \u7c7b\u578b\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c\u3002 // \u5b9a\u4e49\u6cdb\u578b\u65b9\u6cd5 class MyClass { fun < T > method ( param : T ): T { return param } } fun main () { val myClass = MyClass () val result = myClass . method < Int > ( 123 ) } Kotlin \u4e2d\u8fd8\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u4e0a\u754c\u7684\u65b9\u5f0f\u6765\u5bf9\u6cdb\u578b\u7684\u7c7b\u578b\u8fdb\u884c\u7ea6\u675f\uff1a class MyClass { fun < T : Number > method ( param : T ): T { return param } } \u53e6\u5916\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u6cdb\u578b\u90fd\u662f\u53ef\u4ee5\u6307\u5b9a\u6210\u53ef\u7a7a\u7c7b\u578b\u7684\uff0c\u56e0\u4e3a\u9ed8\u8ba4\u7684\u6cdb\u578b\u4e0a\u754c\u662f Any? \uff0c\u5982\u679c\u60f3\u8981\u6cdb\u578b\u7684\u7c7b\u578b\u4e3a\u4e0d\u53ef\u4e3a\u7a7a\uff0c\u9700\u8981\u624b\u52a8\u6307\u5b9a\u6cdb\u578b\u7684\u4e0a\u754c\u4e3a Any\u3002 \u4e0b\u9762\u5229\u7528\u6cdb\u578b\u6765\u5b9e\u73b0 apply() \u6807\u51c6\u51fd\u6570\u7684\u529f\u80fd\uff1a fun < T > T . build ( block : T .() -> Unit ): T { block () return this } \u59d4\u6258 \u00b6 \u59d4\u6258\u6a21\u5f0f\u5df2\u88ab\u8bc1\u660e\u662f\u5b9e\u73b0\u7ee7\u627f\u4e00\u4e2a\u5f88\u597d\u7684\u66ff\u4ee3\u65b9\u5f0f\u3002\u4e3a\u4ec0\u4e48\u8981\u66ff\u4ee3\u7ee7\u627f\uff0c\u7ee7\u627f\u6709\u4ec0\u4e48\u7f3a\u70b9\u5417\uff1f\u5728\u5b66\u4e60\u59d4\u6258\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u804a\u4e00\u804a\u4f7f\u7528\u7ee7\u627f\u6765\u53d1\u6325\u4ee3\u7801\u53ef\u91cd\u7528\u6027\u7684\u7f3a\u70b9\u3002 \u7d27\u8026\u5408 abstract class Account ( var balance : Float = 0f ) { // \u5229\u7387 val rate = 0.05f // \u5229\u606f\u8ba1\u7b97 open fun calculateInterest () = balance * rate } // \u73b0\u91d1\u8d26\u6237 class MoneyMarket ( balance : Float ) : Account ( balance ) // \u80a1\u7968\u8d26\u6237 class Stocks ( balance : Float ) : Account ( balance ) { override fun calculateInterest () = balance * rate * 1.3f } // \u6295\u8d44\u8d26\u6237 class Investment ( balance : Float ) : Account ( balance ) { override fun calculateInterest () = balance * rate * 1.3f } \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u521b\u5efa\u4e86\u4e00\u4e2a\u8d26\u6237\u57fa\u7c7b Account \uff0c\u5229\u606f\u7684\u8ba1\u7b97\u9ed8\u8ba4\u5b9e\u73b0\u4e3a \u8d26\u6237\u4f59\u989d * \u5229\u7387 \u3002\u73b0\u5728\uff0c\u5982\u679c\u60f3\u521b\u5efa\u66f4\u591a\u7c7b\u578b\u7684\u8d26\u6237\uff0c\u4e14\u5b83\u4eec\u7684\u5229\u606f\u8ba1\u7b97\u65b9\u5f0f\u4e0e\u80a1\u7968\u8d26\u6237\u76f8\u540c\uff08 balance * rate * 1.3f \uff09\uff0c\u6211\u4eec\u5fc5\u987b\u4e0d\u65ad\u5730\u91cd\u5199 calculateInterest \u4e14\u5f80\u91cc\u9762\u7c98\u8d34\u540c\u6837\u7684\u4ee3\u7801\uff0c\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u8fd9\u8fdd\u80cc\u4e86\u7ee7\u627f\u7684\u76ee\u7684\u3002\u518d\u8005\uff0c\u5982\u679c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u4f7f\u7528\u4e0e\u80a1\u7968\u8d26\u6237\u76f8\u540c\u7684\u5229\u606f\u8ba1\u7b97\u65b9\u5f0f\u7684\u8d26\u6237\u8d8a\u6765\u8d8a\u591a\uff0c\u6211\u4eec\u60f3\u5c06\u5176\u66f4\u6539\u4e3a\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u90a3\u4e48\u5c31\u5fc5\u987b\u4fee\u6539 Account.calculateInterest() \uff0c\u8fd9\u662f\u5f00\u95ed\u539f\u5219\u5f88\u5927\u7684\u4e00\u4e2a\u7981\u5fcc\u3002 \u5f00\u95ed\u539f\u5219 (The Open/Closed Principle, OCP) \u89c4\u5b9a\uff1a\u8f6f\u4ef6\u4e2d\u7684\u5bf9\u8c61\uff08\u7c7b\uff0c\u6a21\u5757\uff0c\u51fd\u6570\u7b49\u7b49\uff09\u5e94\u8be5\u5bf9\u6269\u5c55\u662f\u5f00\u653e\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u4fee\u6539\u662f\u5c01\u95ed\u7684\u3002 \u4ee3\u7801\u8106\u5f31\u6027 \u901a\u8fc7 override \u91cd\u5199\uff0c\u6211\u4eec\u5176\u5b9e\u5c31\u662f\u5728\u5bf9\u7236\u7c7b\u7684\u884c\u4e3a\u6253\u8865\u4e01\u3002\u50cf\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u53ea\u9700\u7b80\u5355\u5730\u5b8c\u5168\u91cd\u5199\u4e00\u4e2a\u5229\u606f\u8ba1\u7b97\u51fd\u6570\uff0c\u5728\u8fd9\u4e48\u7b80\u5355\u7684\u4e00\u4e2a\u7c7b\u91cc\u9762\uff0c\u8fd9\u5f88\u5bb9\u6613\u3002\u4f46\u5982\u679c\u6d89\u53ca\u5230\u66f4\u590d\u6742\u7684\u7c7b\u65f6\uff0c\u91cd\u5199\u53ef\u80fd\u4f1a\u4e0d\u7ecf\u610f\u5730\u6539\u53d8\u65b9\u6cd5\u5730\u529f\u80fd\uff0c\u5c24\u5176\u662f\u5f53\u8be5\u529f\u80fd\u4f9d\u8d56\u4e8e\u4e0e\u60a8\u4e0d\u77e5\u9053\u7684\u5176\u4ed6\u5c5e\u6027\u548c\u65b9\u6cd5\u8fdb\u884c\u901a\u4fe1\u3002 \u5f53\u7ee7\u627f\u7684\u7c7b\u662f\u4f60\u65e0\u6cd5\u63a7\u5236\u7684\u7b2c\u4e09\u65b9\u7c7b\uff0c\u95ee\u9898\u4f1a\u53d8\u5f97\u66f4\u52a0\u590d\u6742\u3002 \u6765\u770b\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff08\u62d3\u5c55 HashSet \u6dfb\u52a0\u4e00\u4e2a\u8ba1\u6570\u5668\uff09\uff1a class CountSet : HashSet < String > () { var addCount = 0 override fun addAll ( elements : Collection < String > ): Boolean { addCount += elements . size return super . addAll ( elements ) } override fun add ( element : String ): Boolean { addCount ++ return super . add ( element ) } } fun main () { val countSet = CountSet () countSet . addAll ( setOf ( \"A\" , \"B\" , \"C\" )) println ( \"Count is ${ countSet . addCount } \" ) } \u50cf\u8fd9\u79cd\u65b9\u6cd5\u4e4b\u95f4\u5177\u6709\u4ea4\u4e92\u7684\u590d\u6742\u7c7b\u5f88\u53ef\u80fd\u4f1a\u7834\u574f\u6211\u4eec\u901a\u8fc7\u91cd\u5199\u63d0\u4f9b\u7684\u529f\u80fd\u3002 \u4f60\u53ef\u80fd\u4f1a\u8bf4\uff0c\u65e2\u7136\u6211\u4eec\u77e5\u9053 addAll() \u7684\u7ec6\u8282\uff0c\u90a3\u53ea\u8981\u5728 add() \u91cc\u9762\u8fdb\u884c\u8ba1\u6570\u5c31\u53ef\u4ee5\u4e86\u554a\u3002\u8fd9\u7684\u786e\u80fd\u591f\u89e3\u51b3\u8fd9\u4e2a\u7279\u5b9a\u7684\u95ee\u9898\uff0c\u4f46 HashSet \u662f\u7b2c\u4e09\u65b9\u7c7b\u800c\u4e0d\u662f\u4f60\u81ea\u5df1\u7684\u7c7b\uff0c\u4f60\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u53d8\u3002 \u597d\u4e86\uff0c\u8bdd\u4e0d\u591a\u8bf4\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5f00\u59cb\u5b66\u4e60\u59d4\u6258\u3002 \u59d4\u6258\u662f\u4e00\u79cd\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5b83\u7684\u57fa\u672c\u7406\u5ff5\u662f\uff1a\u64cd\u4f5c\u5bf9\u8c61\u81ea\u5df1\u4e0d\u4f1a\u53bb\u5904\u7406\u67d0\u6bb5\u903b\u8f91\uff0c\u800c\u662f\u628a\u5de5\u4f5c\u59d4\u6258\u7ed9\u53e6\u5916\u4e00\u4e2a\u8f85\u52a9\u5bf9\u8c61\u53bb\u5904\u7406 Kotlin \u5c06\u59d4\u6258\u529f\u80fd\u5206\u4e3a\u4e24\u79cd\uff1a \u7c7b\u59d4\u6258 \u59d4\u6258\u5c5e\u6027 \u7c7b\u59d4\u6258 \u00b6 \u7c7b\u59d4\u6258\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5c06\u4e00\u4e2a\u7c7b\u7684\u5177\u4f53\u5b9e\u73b0\u59d4\u6258\u7ed9\u53e6\u4e00\u4e2a\u7c7b\u53bb\u5b8c\u6210\u3002 Set \u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u5982\u679c\u8981\u4f7f\u7528 Set \u8fd9\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u9700\u8981\u7528 Set \u5177\u4f53\u7684\u5b9e\u73b0\u7c7b\u6bd4\u5982 HashSet\u3002\u501f\u52a9\u4e8e\u59d4\u6258\u6a21\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5df1\u7684 Set \u5177\u4f53\u5b9e\u73b0\u7c7b\u3002 class MySet < T > ( val helperSet : HashSet < T > ) : Set < T > { override val size : Int get () = helperSet . size override fun contains ( element : T ) = helperSet . contains ( element ) override fun isEmpty () = helperSet . isEmpty () ... } MySet \u7684\u6784\u9020\u51fd\u6570\u4e2d\u63a5\u6536\u4e00\u4e2a HashSet \u53c2\u6570\uff0c\u5b83\u5145\u5f53\u4e00\u4e2a\u8f85\u52a9\u5bf9\u8c61\u7684\u89d2\u8272\uff0c\u5728 Set \u63a5\u53e3\u6240\u6709\u65b9\u6cd5\u5b9e\u73b0\u4e2d\uff0c\u6211\u4eec\u90fd\u6ca1\u6709\u5b9e\u73b0\u81ea\u5df1\u7684\u903b\u8f91\uff0c\u53ea\u662f\u7b80\u5355\u8c03\u7528\u8f85\u52a9\u5bf9\u8c61\u4e2d\u76f8\u5e94\u7684\u65b9\u6cd5\u5b9e\u73b0\uff0c\u8fd9\u5176\u5b9e\u5c31\u662f\u4e00\u79cd\u59d4\u6258\u6a21\u5f0f\u3002 \u65e2\u7136\u90fd\u662f\u8c03\u7528\u8f85\u52a9\u5bf9\u8c61\u7684\u65b9\u6cd5\u5b9e\u73b0\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u4f7f\u7528\u8f85\u52a9\u5bf9\u8c61\u5462\uff1f\u8fd9\u4e48\u8bf4\u786e\u5b9e\u6ca1\u9519\uff0c\u4f46\u5982\u679c\u53ea\u662f\u60f3\u8ba9\u5927\u90e8\u5206\u7684\u65b9\u6cd5\u59d4\u6258\u7ed9\u8f85\u52a9\u5bf9\u8c61\uff0c\u5c11\u90e8\u5206\u65b9\u6cd5\u7531\u81ea\u5df1\u4eb2\u81ea\u91cd\u5199\uff0c\u6216\u52a0\u5165\u4e00\u4e9b\u81ea\u5df1\u72ec\u6709\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48 MySet \u5c31\u4f1a\u6210\u4e3a\u4e00\u4e2a\u5168\u65b0\u7684\u6570\u636e\u7ed3\u6784\u7c7b\uff0c\u8fd9\u4e5f\u662f\u59d4\u6258\u6a21\u5f0f\u7684\u610f\u4e49\u6240\u5728\u3002 \u4e0d\u8fc7\u8fd9\u79cd\u5199\u6cd5\u4e5f\u6709\u4e00\u5b9a\u7684\u5f0a\u7aef\uff0c\u5982\u679c\u63a5\u53e3\u4e2d\u5f85\u5b9e\u73b0\u7684\u65b9\u6cd5\u8f83\u5c11\u8fd8\u597d\uff0c\u8981\u662f\u6709\u4e0a\u767e\u4e0a\u5343\u4e2a\u5f85\u5b9e\u73b0\u65b9\u6cd5\uff0c\u6bcf\u4e2a\u90fd\u8981\u53bb\u8c03\u7528\u8f85\u52a9\u5bf9\u8c61\u7684\u76f8\u5e94\u65b9\u6cd5\uff0c\u4eba\u90fd\u50bb\u4e86\u3002\u6240\u5e78\uff0cKotlin \u5728\u8bed\u6cd5\u4e0a\u539f\u751f\u652f\u6301\u59d4\u6258\uff0c\u53ea\u9700\u5728\u63a5\u53e3\u540e\u4f7f\u7528 by \u5173\u952e\u5b57\uff0c\u540e\u9762\u52a0\u4e0a\u53d7\u59d4\u6258\u7684\u8f85\u52a9\u5bf9\u8c61\u5c31\u80fd\u514d\u53bb\u9010\u4e2a\u8c03\u7528\u8f85\u52a9\u5bf9\u8c61\u76f8\u5e94\u7684\u5177\u4f53\u5b9e\u73b0\u65b9\u6cd5\uff1a class MySet < T > ( val helperSet : HashSet < T > ) : Set < T > by helperSet { } \u5982\u679c\u4f60\u4e0d\u9700\u8981\u4f20\u5165\u4e0d\u540c\u7684\u8f85\u52a9\u5bf9\u8c61\u5b9e\u4f8b\uff0c\u751a\u81f3\u53ef\u4ee5\u8fd9\u4e48\u5199\uff1a class MySet < T > () : Set < T > by HashSet () { } \u59d4\u6258\u5c5e\u6027 \u00b6 \u5c5e\u6027\u59d4\u6258\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5c06\u4e00\u4e2a\u5c5e\u6027\uff08\u5b57\u6bb5\uff09\u7684\u5177\u4f53\u5b9e\u73b0\u59d4\u6258\u7ed9\u53e6\u5916\u4e00\u4e2a\u7c7b\u53bb\u5b8c\u6210\u3002 \u59d4\u6258\u5c5e\u6027\u7684\u8bed\u6cd5\uff1a class MyClass (){ var p : Any? by Delegate () } \u8fd9\u91cc\u7528 by \u8fde\u63a5\u4e86\u5de6\u8fb9\u7684\u5c5e\u6027\u548c\u53f3\u8fb9\u7684 Delegate \u5b9e\u4f8b\uff0c\u8fd9\u79cd\u5199\u6cd5\u8868\u793a\u5c06 p \u5c5e\u6027\u7684\u5177\u4f53\u5b9e\u73b0\u59d4\u6258\u7ed9\u4e86 Delegate \u7c7b\u53bb\u5b8c\u6210\u3002\u5f53\u8c03\u7528 p \u5c5e\u6027\u65f6\u4f1a\u81ea\u52a8\u8c03\u7528 Delegate \u7c7b\u7684 getValue() \u65b9\u6cd5\uff0c\u800c\u5f53\u7ed9 p \u5c5e\u6027\u8d4b\u503c\u65f6\u5219\u4f1a\u81ea\u52a8\u8c03\u7528 Delegate \u7684 setValue() \u65b9\u6cd5\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5bf9 Delegate \u7c7b\u8fdb\u884c\u5177\u4f53\u5b9e\u73b0\uff1a import kotlin.reflect.KProperty class Delegate () { var propValue : Any? = null operator fun getValue ( thisRef : Any? , property : KProperty <*> ): Any? = propValue operator fun setValue ( thisRef : Any? , property : KProperty <*> , value : Any? ) { propValue = value } } getValue() \u548c setValue() \u90fd\u8981\u7528\u5173\u952e\u5b57 operator \u8fdb\u884c\u58f0\u660e\uff08\u8fd0\u7b97\u7b26\u91cd\u8f7d\uff09 getValue() \u7b2c\u4e00\u4e2a\u53c2\u6570\u7528\u4e8e\u58f0\u660e Delegate \u7c7b\u7684\u59d4\u6258\u529f\u80fd\u53ef\u4ee5\u5728\u4ec0\u4e48\u7c7b\u4e2d\u4f7f\u7528\uff0c\u8fd9\u91cc\u58f0\u660e\u4e3a Any? \u8868\u793a\u53ef\u4ee5\u5728\u6240\u6709\u7c7b\u4e2d\u4f7f\u7528\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570 property: KProperty<*> \u662f Kotlin \u4e2d\u7684\u4e00\u4e2a\u5c5e\u6027\u64cd\u4f5c\u7c7b\uff0c\u53ef\u7528\u4e8e\u83b7\u53d6\u5404\u79cd\u5c5e\u6027\u7684\u76f8\u5173\u503c\uff08 <*> \u8fd9\u79cd\u6cdb\u578b\u7684\u5199\u6cd5\u8868\u793a\u4e0d\u77e5\u9053\u6216\u4e0d\u5173\u5fc3\u6cdb\u578b\u7684\u5177\u4f53\u7c7b\u578b\uff09 setValue() \u65b9\u6cd5\u524d\u4e24\u4e2a\u53c2\u6570\u548c getValue() \u662f\u76f8\u540c\u7684\uff0c\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u8868\u793a\u5177\u4f53\u8981\u8d4b\u503c\u7ed9\u59d4\u6258\u5c5e\u6027\u7684\u503c\uff0c\u8fd9\u4e2a\u53c2\u6570\u7684\u7c7b\u578b\u5fc5\u987b\u548c getValue() \u65b9\u6cd5\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u4fdd\u6301\u4e00\u81f4\u3002 \u5982\u679c \u59d4\u6258\u5c5e\u6027\u662f\u4f7f\u7528 val \u5173\u952e\u5b57\u6765\u58f0\u660e\u7684\uff0c\u90a3\u4e48\u662f\u6ca1\u6709\u5fc5\u8981\u5b9e\u73b0\u88ab\u59d4\u6258\u7c7b\u7684 setValue() \u65b9\u6cd5\uff0c\u539f\u56e0\u4e5f\u5f88\u5bb9\u6613\u7406\u89e3\uff0cval \u5173\u952e\u5b57\u610f\u5473\u7740\u5c5e\u6027\u5728\u521d\u59cb\u5316\u540e\u65e0\u6cd5\u88ab\u91cd\u65b0\u8d4b\u503c\u3002 lazy \u51fd\u6570 \u00b6 lazy \u51fd\u6570\u662f\u4e00\u79cd\u61d2\u52a0\u8f7d\u6280\u672f\uff0c\u628a\u60f3\u8981\u5ef6\u8fdf\u6267\u884c\u7684\u4ee3\u7801\u7f6e\u4e8e by lazy \u4ee3\u7801\u5757\u4e2d\uff0c\u8fd9\u6837\u4ee3\u7801\u4e0d\u4f1a\u5728\u4e00\u5f00\u59cb\u5c31\u6267\u884c\uff0c\u53ea\u6709\u5f53\u76f8\u5173\u53d8\u91cf\u9996\u6b21\u88ab\u8c03\u7528\u65f6\uff0c\u4ee3\u7801\u5757\u624d\u4f1a\u6267\u884c\uff1a fun main (){ val lazyValue : String by lazy { println ( \"computed!\" ) \"Hello\" } println ( lazyValue ) println ( lazyValue ) } \u8fd0\u884c\u7ed3\u679c\uff1a computed ! Hello Hello \u5b66\u4e60\u5b8c\u59d4\u6258\u529f\u80fd\u540e\uff0c\u6211\u4eec\u6765\u5bf9 by lazy \u7684\u5de5\u4f5c\u539f\u7406\u8fdb\u884c\u89e3\u5bc6\uff0c\u5176\u57fa\u672c\u8bed\u6cd5\u4e3a\uff1a val p by lazy {...} by \u662f\u59d4\u6258\u7684\u5173\u952e\u5b57\uff0clazy \u4e0d\u8fc7\u662f\u4e00\u4e2a\u9ad8\u9636\u51fd\u6570\u800c\u5df2\uff0c\u5728 lazy \u51fd\u6570\u4e2d\u4f1a\u521b\u5efa\u5e76\u8fd4\u56de\u4e00\u4e2a\u88ab\u59d4\u6258\u5bf9\u8c61\uff0c\u5f53\u6211\u4eec\u8c03\u7528 p \u5c5e\u6027\u65f6\uff0c\u5176\u5b9e\u8c03\u7528\u7684\u662f\u88ab\u59d4\u6258\u5bf9\u8c61\u7684 getValue() \u65b9\u6cd5\uff0c\u7136\u540e getValue() \u65b9\u6cd5\u53c8\u4f1a\u53bb\u8c03\u7528 lazy \u51fd\u6570\u4f20\u5165\u7684 lambda \u8868\u8fbe\u5f0f\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u8868\u8fbe\u5f0f\u4e2d\u7684\u4ee3\u7801\u5c31\u5f97\u5230\u4e86\u6267\u884c\uff0c\u5e76\u4e14\u8c03\u7528 p \u5c5e\u6027\u540e\u5f97\u5230\u7684\u503c\u5c31\u662f Lambda \u8868\u8fbe\u5f0f\u4e2d\u7684\u6700\u540e\u4e00\u884c\u4ee3\u7801\u7684\u8fd4\u56de\u503c\u3002 \u8fd9\u4e48\u770b\u6765\uff0cKotln \u7684\u61d2\u52a0\u8f7d\u6280\u672f\u4e5f\u6ca1\u6709\u591a\u795e\u79d8\u561b\uff0c\u8ba9\u6211\u4eec\u6765\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5df1\u7684 lazy \u51fd\u6570\u8bd5\u8bd5\u770b\uff1a fun < T > later ( block : () -> T ) = Later ( block ) \u9996\u5148\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u9876\u5c42\u51fd\u6570 later() \uff0c\u5b83\u63a5\u6536\u4e00\u4e2a\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a lambda \u8868\u8fbe\u5f0f\u3002 \u540c\u65f6\u5b83\u8fd8\u662f\u4e00\u4e2a\u6cdb\u578b\u51fd\u6570\uff0c\u56e0\u4e3a\u5982\u679c\u4e8b\u5148\u6307\u5b9a\u4e86\u4f7f\u7528 later() \u7684\u5c5e\u6027/\u5b57\u6bb5\u7684\u7c7b\u578b\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u8ba9\u4f20\u5165\u7684 lambda \u8868\u8fbe\u5f0f\u7684\u6700\u540e\u4e00\u884c\u7684\u8fd4\u56de\u503c\u4e5f\u662f\u540c\u6837\u7684\u7c7b\u578b\u3002 /** * \u56e0\u4e3a\u6307\u5b9a\u4e86 p \u7684\u7c7b\u578b\u4e3a String\uff0c * \u6240\u4ee5 lambda \u8868\u8fbe\u5f0f\u7684\u6700\u540e\u4e00\u884c\u7684\u8fd4\u56de\u503c\u4e5f\u5e94\u8be5\u5fc5\u987b\u662f String */ val p : String by later { ... \"Hello World!\" } later() \u8fd4\u56de\u4e00\u4e2a Later \u5bf9\u8c61\uff08\u88ab\u59d4\u6258\u5bf9\u8c61\uff09\uff0c\u5e76\u628a\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff08\u5c5e\u6027/\u5b57\u6bb5\u7684\u5177\u4f53\u5b9e\u73b0\uff09\u4f20\u9012\u7ed9 Later \u7c7b\u3002 class Later < T > ( val block : () -> T ) { var value : Any? = null operator fun getValue ( thisRef : Any? , property : KProperty <*> ): T { if ( value == null ){ value = block () } return value as T } } Later \u63a5\u6536\u7684\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a\u6cdb\u578b\uff0c\u56e0\u800c Later \u7c7b\u4e5f\u81ea\u7136\u800c\u7136\u5730\u5fc5\u987b\u662f\u4e00\u4e2a\u6cdb\u578b\u7c7b\u3002 \u5c5e\u6027/\u5b57\u6bb5\u7684\u5177\u4f53\u5b9e\u73b0\u5728\u4e8e\u51fd\u6570\u7c7b\u578b\u53c2\u6570 block\uff0c\u5f53\u8bbf\u95ee\u5c5e\u6027/\u5b57\u6bb5\u65f6\uff0c\u4f1a\u901a\u8fc7 getValue() \u65b9\u6cd5\u53bb\u8c03\u7528\u51fd\u6570\u7c7b\u578b\u53c2\u6570block \u83b7\u53d6\u8fd4\u56de\u503c\uff0c\u6240\u4ee5 getValue() \u7684\u8fd4\u56de\u503c\u7c7b\u578b\u4e0e\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u4e00\u81f4\u3002 \u8fd9\u91cc\u6211\u4eec\u5229\u7528\u4e00\u4e2a value \u53d8\u91cf\u5bf9\u8fd4\u56de\u503c\u8fdb\u884c\u7f13\u5b58\u3002\u5982\u679c value \u4e3a\u7a7a\u5c31\u8c03\u7528\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u53bb\u83b7\u53d6\u503c\uff0c\u5426\u5219\u76f4\u63a5\u8fd4\u56de\u3002 \u81f3\u6b64\uff0c\u6211\u4eec\u81ea\u5df1\u7684 later \u61d2\u52a0\u8f7d\u51fd\u6570\u5c31\u5df2\u7ecf\u5b8c\u6210\u4e86\u3002\u4e0d\u8fc7\u5fc5\u987b\u8bf4\u660e\u7684\u662f\uff0c\u6211\u4eec\u53ea\u662f\u5927\u81f4\u4e0a\u8fd8\u539f\u4e86 lazy \u51fd\u6570\u7684\u57fa\u672c\u5b9e\u73b0\u539f\u7406\uff0c\u4e3a\u7684\u662f\u5b66\u4e60\u59d4\u6258\u529f\u80fd\uff0c\u5728\u540c\u6b65\u3001\u7a7a\u503c\u5904\u7406\u7b49\u7ec6\u8282\u65b9\u9762\u5e76\u6ca1\u6709\u5b9e\u73b0\u5730\u5f88\u4e25\u8c28\u3002","title":"\u6cdb\u578b\u4e0e\u59d4\u6258"},{"location":"Kotlin/%E6%B3%9B%E5%9E%8B%E4%B8%8E%E5%A7%94%E6%89%98/#_1","text":"","title":"\u6cdb\u578b\u4e0e\u59d4\u6258"},{"location":"Kotlin/%E6%B3%9B%E5%9E%8B%E4%B8%8E%E5%A7%94%E6%89%98/#_2","text":"\u6cdb\u578b\u4e3b\u8981\u6709\u4e24\u79cd\u5b9a\u4e49\u65b9\u5f0f\uff1a \u6cdb\u578b\u7c7b \u6cdb\u578b\u65b9\u6cd5 \u4f7f\u7528\u7684\u8bed\u6cd5\u7ed3\u6784\u90fd\u662f <T> \uff0c\u5f53\u7136\u5b57\u6bcd T \u4e0d\u662f\u56fa\u5b9a\u8981\u6c42\uff0c\u5176\u5b9e\u4f7f\u7528\u4efb\u4f55\u5b57\u6bcd\u90fd\u662f\u53ef\u4ee5\u7684\uff0c\u4e0d\u8fc7 T \u662f\u4e00\u79cd\u7ea6\u5b9a\u4fd7\u6210\u7684\u6cdb\u578b\u5199\u6cd5\u3002 // \u5b9a\u4e49\u6cdb\u578b\u7c7b class MyClass < T > { fun method ( param : T ): T { return param } } fun main () { val myClass = MyClass < Int > () val result = myClass . method ( 123 ) } \u4e0a\u9762\u7684 MyClass \u5c31\u662f\u4e00\u4e2a\u6cdb\u578b\u7c7b\uff0cMyClass \u4e2d\u7684\u65b9\u6cd5\u5141\u8bb8\u4f7f\u7528 T \u7c7b\u578b\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c\u3002 // \u5b9a\u4e49\u6cdb\u578b\u65b9\u6cd5 class MyClass { fun < T > method ( param : T ): T { return param } } fun main () { val myClass = MyClass () val result = myClass . method < Int > ( 123 ) } Kotlin \u4e2d\u8fd8\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u4e0a\u754c\u7684\u65b9\u5f0f\u6765\u5bf9\u6cdb\u578b\u7684\u7c7b\u578b\u8fdb\u884c\u7ea6\u675f\uff1a class MyClass { fun < T : Number > method ( param : T ): T { return param } } \u53e6\u5916\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u6cdb\u578b\u90fd\u662f\u53ef\u4ee5\u6307\u5b9a\u6210\u53ef\u7a7a\u7c7b\u578b\u7684\uff0c\u56e0\u4e3a\u9ed8\u8ba4\u7684\u6cdb\u578b\u4e0a\u754c\u662f Any? \uff0c\u5982\u679c\u60f3\u8981\u6cdb\u578b\u7684\u7c7b\u578b\u4e3a\u4e0d\u53ef\u4e3a\u7a7a\uff0c\u9700\u8981\u624b\u52a8\u6307\u5b9a\u6cdb\u578b\u7684\u4e0a\u754c\u4e3a Any\u3002 \u4e0b\u9762\u5229\u7528\u6cdb\u578b\u6765\u5b9e\u73b0 apply() \u6807\u51c6\u51fd\u6570\u7684\u529f\u80fd\uff1a fun < T > T . build ( block : T .() -> Unit ): T { block () return this }","title":"\u6cdb\u578b"},{"location":"Kotlin/%E6%B3%9B%E5%9E%8B%E4%B8%8E%E5%A7%94%E6%89%98/#_3","text":"\u59d4\u6258\u6a21\u5f0f\u5df2\u88ab\u8bc1\u660e\u662f\u5b9e\u73b0\u7ee7\u627f\u4e00\u4e2a\u5f88\u597d\u7684\u66ff\u4ee3\u65b9\u5f0f\u3002\u4e3a\u4ec0\u4e48\u8981\u66ff\u4ee3\u7ee7\u627f\uff0c\u7ee7\u627f\u6709\u4ec0\u4e48\u7f3a\u70b9\u5417\uff1f\u5728\u5b66\u4e60\u59d4\u6258\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u804a\u4e00\u804a\u4f7f\u7528\u7ee7\u627f\u6765\u53d1\u6325\u4ee3\u7801\u53ef\u91cd\u7528\u6027\u7684\u7f3a\u70b9\u3002 \u7d27\u8026\u5408 abstract class Account ( var balance : Float = 0f ) { // \u5229\u7387 val rate = 0.05f // \u5229\u606f\u8ba1\u7b97 open fun calculateInterest () = balance * rate } // \u73b0\u91d1\u8d26\u6237 class MoneyMarket ( balance : Float ) : Account ( balance ) // \u80a1\u7968\u8d26\u6237 class Stocks ( balance : Float ) : Account ( balance ) { override fun calculateInterest () = balance * rate * 1.3f } // \u6295\u8d44\u8d26\u6237 class Investment ( balance : Float ) : Account ( balance ) { override fun calculateInterest () = balance * rate * 1.3f } \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u521b\u5efa\u4e86\u4e00\u4e2a\u8d26\u6237\u57fa\u7c7b Account \uff0c\u5229\u606f\u7684\u8ba1\u7b97\u9ed8\u8ba4\u5b9e\u73b0\u4e3a \u8d26\u6237\u4f59\u989d * \u5229\u7387 \u3002\u73b0\u5728\uff0c\u5982\u679c\u60f3\u521b\u5efa\u66f4\u591a\u7c7b\u578b\u7684\u8d26\u6237\uff0c\u4e14\u5b83\u4eec\u7684\u5229\u606f\u8ba1\u7b97\u65b9\u5f0f\u4e0e\u80a1\u7968\u8d26\u6237\u76f8\u540c\uff08 balance * rate * 1.3f \uff09\uff0c\u6211\u4eec\u5fc5\u987b\u4e0d\u65ad\u5730\u91cd\u5199 calculateInterest \u4e14\u5f80\u91cc\u9762\u7c98\u8d34\u540c\u6837\u7684\u4ee3\u7801\uff0c\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u8fd9\u8fdd\u80cc\u4e86\u7ee7\u627f\u7684\u76ee\u7684\u3002\u518d\u8005\uff0c\u5982\u679c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u4f7f\u7528\u4e0e\u80a1\u7968\u8d26\u6237\u76f8\u540c\u7684\u5229\u606f\u8ba1\u7b97\u65b9\u5f0f\u7684\u8d26\u6237\u8d8a\u6765\u8d8a\u591a\uff0c\u6211\u4eec\u60f3\u5c06\u5176\u66f4\u6539\u4e3a\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u90a3\u4e48\u5c31\u5fc5\u987b\u4fee\u6539 Account.calculateInterest() \uff0c\u8fd9\u662f\u5f00\u95ed\u539f\u5219\u5f88\u5927\u7684\u4e00\u4e2a\u7981\u5fcc\u3002 \u5f00\u95ed\u539f\u5219 (The Open/Closed Principle, OCP) \u89c4\u5b9a\uff1a\u8f6f\u4ef6\u4e2d\u7684\u5bf9\u8c61\uff08\u7c7b\uff0c\u6a21\u5757\uff0c\u51fd\u6570\u7b49\u7b49\uff09\u5e94\u8be5\u5bf9\u6269\u5c55\u662f\u5f00\u653e\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u4fee\u6539\u662f\u5c01\u95ed\u7684\u3002 \u4ee3\u7801\u8106\u5f31\u6027 \u901a\u8fc7 override \u91cd\u5199\uff0c\u6211\u4eec\u5176\u5b9e\u5c31\u662f\u5728\u5bf9\u7236\u7c7b\u7684\u884c\u4e3a\u6253\u8865\u4e01\u3002\u50cf\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u53ea\u9700\u7b80\u5355\u5730\u5b8c\u5168\u91cd\u5199\u4e00\u4e2a\u5229\u606f\u8ba1\u7b97\u51fd\u6570\uff0c\u5728\u8fd9\u4e48\u7b80\u5355\u7684\u4e00\u4e2a\u7c7b\u91cc\u9762\uff0c\u8fd9\u5f88\u5bb9\u6613\u3002\u4f46\u5982\u679c\u6d89\u53ca\u5230\u66f4\u590d\u6742\u7684\u7c7b\u65f6\uff0c\u91cd\u5199\u53ef\u80fd\u4f1a\u4e0d\u7ecf\u610f\u5730\u6539\u53d8\u65b9\u6cd5\u5730\u529f\u80fd\uff0c\u5c24\u5176\u662f\u5f53\u8be5\u529f\u80fd\u4f9d\u8d56\u4e8e\u4e0e\u60a8\u4e0d\u77e5\u9053\u7684\u5176\u4ed6\u5c5e\u6027\u548c\u65b9\u6cd5\u8fdb\u884c\u901a\u4fe1\u3002 \u5f53\u7ee7\u627f\u7684\u7c7b\u662f\u4f60\u65e0\u6cd5\u63a7\u5236\u7684\u7b2c\u4e09\u65b9\u7c7b\uff0c\u95ee\u9898\u4f1a\u53d8\u5f97\u66f4\u52a0\u590d\u6742\u3002 \u6765\u770b\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff08\u62d3\u5c55 HashSet \u6dfb\u52a0\u4e00\u4e2a\u8ba1\u6570\u5668\uff09\uff1a class CountSet : HashSet < String > () { var addCount = 0 override fun addAll ( elements : Collection < String > ): Boolean { addCount += elements . size return super . addAll ( elements ) } override fun add ( element : String ): Boolean { addCount ++ return super . add ( element ) } } fun main () { val countSet = CountSet () countSet . addAll ( setOf ( \"A\" , \"B\" , \"C\" )) println ( \"Count is ${ countSet . addCount } \" ) } \u50cf\u8fd9\u79cd\u65b9\u6cd5\u4e4b\u95f4\u5177\u6709\u4ea4\u4e92\u7684\u590d\u6742\u7c7b\u5f88\u53ef\u80fd\u4f1a\u7834\u574f\u6211\u4eec\u901a\u8fc7\u91cd\u5199\u63d0\u4f9b\u7684\u529f\u80fd\u3002 \u4f60\u53ef\u80fd\u4f1a\u8bf4\uff0c\u65e2\u7136\u6211\u4eec\u77e5\u9053 addAll() \u7684\u7ec6\u8282\uff0c\u90a3\u53ea\u8981\u5728 add() \u91cc\u9762\u8fdb\u884c\u8ba1\u6570\u5c31\u53ef\u4ee5\u4e86\u554a\u3002\u8fd9\u7684\u786e\u80fd\u591f\u89e3\u51b3\u8fd9\u4e2a\u7279\u5b9a\u7684\u95ee\u9898\uff0c\u4f46 HashSet \u662f\u7b2c\u4e09\u65b9\u7c7b\u800c\u4e0d\u662f\u4f60\u81ea\u5df1\u7684\u7c7b\uff0c\u4f60\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u53d8\u3002 \u597d\u4e86\uff0c\u8bdd\u4e0d\u591a\u8bf4\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5f00\u59cb\u5b66\u4e60\u59d4\u6258\u3002 \u59d4\u6258\u662f\u4e00\u79cd\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5b83\u7684\u57fa\u672c\u7406\u5ff5\u662f\uff1a\u64cd\u4f5c\u5bf9\u8c61\u81ea\u5df1\u4e0d\u4f1a\u53bb\u5904\u7406\u67d0\u6bb5\u903b\u8f91\uff0c\u800c\u662f\u628a\u5de5\u4f5c\u59d4\u6258\u7ed9\u53e6\u5916\u4e00\u4e2a\u8f85\u52a9\u5bf9\u8c61\u53bb\u5904\u7406 Kotlin \u5c06\u59d4\u6258\u529f\u80fd\u5206\u4e3a\u4e24\u79cd\uff1a \u7c7b\u59d4\u6258 \u59d4\u6258\u5c5e\u6027","title":"\u59d4\u6258"},{"location":"Kotlin/%E6%B3%9B%E5%9E%8B%E4%B8%8E%E5%A7%94%E6%89%98/#_4","text":"\u7c7b\u59d4\u6258\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5c06\u4e00\u4e2a\u7c7b\u7684\u5177\u4f53\u5b9e\u73b0\u59d4\u6258\u7ed9\u53e6\u4e00\u4e2a\u7c7b\u53bb\u5b8c\u6210\u3002 Set \u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u5982\u679c\u8981\u4f7f\u7528 Set \u8fd9\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u9700\u8981\u7528 Set \u5177\u4f53\u7684\u5b9e\u73b0\u7c7b\u6bd4\u5982 HashSet\u3002\u501f\u52a9\u4e8e\u59d4\u6258\u6a21\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5df1\u7684 Set \u5177\u4f53\u5b9e\u73b0\u7c7b\u3002 class MySet < T > ( val helperSet : HashSet < T > ) : Set < T > { override val size : Int get () = helperSet . size override fun contains ( element : T ) = helperSet . contains ( element ) override fun isEmpty () = helperSet . isEmpty () ... } MySet \u7684\u6784\u9020\u51fd\u6570\u4e2d\u63a5\u6536\u4e00\u4e2a HashSet \u53c2\u6570\uff0c\u5b83\u5145\u5f53\u4e00\u4e2a\u8f85\u52a9\u5bf9\u8c61\u7684\u89d2\u8272\uff0c\u5728 Set \u63a5\u53e3\u6240\u6709\u65b9\u6cd5\u5b9e\u73b0\u4e2d\uff0c\u6211\u4eec\u90fd\u6ca1\u6709\u5b9e\u73b0\u81ea\u5df1\u7684\u903b\u8f91\uff0c\u53ea\u662f\u7b80\u5355\u8c03\u7528\u8f85\u52a9\u5bf9\u8c61\u4e2d\u76f8\u5e94\u7684\u65b9\u6cd5\u5b9e\u73b0\uff0c\u8fd9\u5176\u5b9e\u5c31\u662f\u4e00\u79cd\u59d4\u6258\u6a21\u5f0f\u3002 \u65e2\u7136\u90fd\u662f\u8c03\u7528\u8f85\u52a9\u5bf9\u8c61\u7684\u65b9\u6cd5\u5b9e\u73b0\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u4f7f\u7528\u8f85\u52a9\u5bf9\u8c61\u5462\uff1f\u8fd9\u4e48\u8bf4\u786e\u5b9e\u6ca1\u9519\uff0c\u4f46\u5982\u679c\u53ea\u662f\u60f3\u8ba9\u5927\u90e8\u5206\u7684\u65b9\u6cd5\u59d4\u6258\u7ed9\u8f85\u52a9\u5bf9\u8c61\uff0c\u5c11\u90e8\u5206\u65b9\u6cd5\u7531\u81ea\u5df1\u4eb2\u81ea\u91cd\u5199\uff0c\u6216\u52a0\u5165\u4e00\u4e9b\u81ea\u5df1\u72ec\u6709\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48 MySet \u5c31\u4f1a\u6210\u4e3a\u4e00\u4e2a\u5168\u65b0\u7684\u6570\u636e\u7ed3\u6784\u7c7b\uff0c\u8fd9\u4e5f\u662f\u59d4\u6258\u6a21\u5f0f\u7684\u610f\u4e49\u6240\u5728\u3002 \u4e0d\u8fc7\u8fd9\u79cd\u5199\u6cd5\u4e5f\u6709\u4e00\u5b9a\u7684\u5f0a\u7aef\uff0c\u5982\u679c\u63a5\u53e3\u4e2d\u5f85\u5b9e\u73b0\u7684\u65b9\u6cd5\u8f83\u5c11\u8fd8\u597d\uff0c\u8981\u662f\u6709\u4e0a\u767e\u4e0a\u5343\u4e2a\u5f85\u5b9e\u73b0\u65b9\u6cd5\uff0c\u6bcf\u4e2a\u90fd\u8981\u53bb\u8c03\u7528\u8f85\u52a9\u5bf9\u8c61\u7684\u76f8\u5e94\u65b9\u6cd5\uff0c\u4eba\u90fd\u50bb\u4e86\u3002\u6240\u5e78\uff0cKotlin \u5728\u8bed\u6cd5\u4e0a\u539f\u751f\u652f\u6301\u59d4\u6258\uff0c\u53ea\u9700\u5728\u63a5\u53e3\u540e\u4f7f\u7528 by \u5173\u952e\u5b57\uff0c\u540e\u9762\u52a0\u4e0a\u53d7\u59d4\u6258\u7684\u8f85\u52a9\u5bf9\u8c61\u5c31\u80fd\u514d\u53bb\u9010\u4e2a\u8c03\u7528\u8f85\u52a9\u5bf9\u8c61\u76f8\u5e94\u7684\u5177\u4f53\u5b9e\u73b0\u65b9\u6cd5\uff1a class MySet < T > ( val helperSet : HashSet < T > ) : Set < T > by helperSet { } \u5982\u679c\u4f60\u4e0d\u9700\u8981\u4f20\u5165\u4e0d\u540c\u7684\u8f85\u52a9\u5bf9\u8c61\u5b9e\u4f8b\uff0c\u751a\u81f3\u53ef\u4ee5\u8fd9\u4e48\u5199\uff1a class MySet < T > () : Set < T > by HashSet () { }","title":"\u7c7b\u59d4\u6258"},{"location":"Kotlin/%E6%B3%9B%E5%9E%8B%E4%B8%8E%E5%A7%94%E6%89%98/#_5","text":"\u5c5e\u6027\u59d4\u6258\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5c06\u4e00\u4e2a\u5c5e\u6027\uff08\u5b57\u6bb5\uff09\u7684\u5177\u4f53\u5b9e\u73b0\u59d4\u6258\u7ed9\u53e6\u5916\u4e00\u4e2a\u7c7b\u53bb\u5b8c\u6210\u3002 \u59d4\u6258\u5c5e\u6027\u7684\u8bed\u6cd5\uff1a class MyClass (){ var p : Any? by Delegate () } \u8fd9\u91cc\u7528 by \u8fde\u63a5\u4e86\u5de6\u8fb9\u7684\u5c5e\u6027\u548c\u53f3\u8fb9\u7684 Delegate \u5b9e\u4f8b\uff0c\u8fd9\u79cd\u5199\u6cd5\u8868\u793a\u5c06 p \u5c5e\u6027\u7684\u5177\u4f53\u5b9e\u73b0\u59d4\u6258\u7ed9\u4e86 Delegate \u7c7b\u53bb\u5b8c\u6210\u3002\u5f53\u8c03\u7528 p \u5c5e\u6027\u65f6\u4f1a\u81ea\u52a8\u8c03\u7528 Delegate \u7c7b\u7684 getValue() \u65b9\u6cd5\uff0c\u800c\u5f53\u7ed9 p \u5c5e\u6027\u8d4b\u503c\u65f6\u5219\u4f1a\u81ea\u52a8\u8c03\u7528 Delegate \u7684 setValue() \u65b9\u6cd5\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5bf9 Delegate \u7c7b\u8fdb\u884c\u5177\u4f53\u5b9e\u73b0\uff1a import kotlin.reflect.KProperty class Delegate () { var propValue : Any? = null operator fun getValue ( thisRef : Any? , property : KProperty <*> ): Any? = propValue operator fun setValue ( thisRef : Any? , property : KProperty <*> , value : Any? ) { propValue = value } } getValue() \u548c setValue() \u90fd\u8981\u7528\u5173\u952e\u5b57 operator \u8fdb\u884c\u58f0\u660e\uff08\u8fd0\u7b97\u7b26\u91cd\u8f7d\uff09 getValue() \u7b2c\u4e00\u4e2a\u53c2\u6570\u7528\u4e8e\u58f0\u660e Delegate \u7c7b\u7684\u59d4\u6258\u529f\u80fd\u53ef\u4ee5\u5728\u4ec0\u4e48\u7c7b\u4e2d\u4f7f\u7528\uff0c\u8fd9\u91cc\u58f0\u660e\u4e3a Any? \u8868\u793a\u53ef\u4ee5\u5728\u6240\u6709\u7c7b\u4e2d\u4f7f\u7528\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570 property: KProperty<*> \u662f Kotlin \u4e2d\u7684\u4e00\u4e2a\u5c5e\u6027\u64cd\u4f5c\u7c7b\uff0c\u53ef\u7528\u4e8e\u83b7\u53d6\u5404\u79cd\u5c5e\u6027\u7684\u76f8\u5173\u503c\uff08 <*> \u8fd9\u79cd\u6cdb\u578b\u7684\u5199\u6cd5\u8868\u793a\u4e0d\u77e5\u9053\u6216\u4e0d\u5173\u5fc3\u6cdb\u578b\u7684\u5177\u4f53\u7c7b\u578b\uff09 setValue() \u65b9\u6cd5\u524d\u4e24\u4e2a\u53c2\u6570\u548c getValue() \u662f\u76f8\u540c\u7684\uff0c\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u8868\u793a\u5177\u4f53\u8981\u8d4b\u503c\u7ed9\u59d4\u6258\u5c5e\u6027\u7684\u503c\uff0c\u8fd9\u4e2a\u53c2\u6570\u7684\u7c7b\u578b\u5fc5\u987b\u548c getValue() \u65b9\u6cd5\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u4fdd\u6301\u4e00\u81f4\u3002 \u5982\u679c \u59d4\u6258\u5c5e\u6027\u662f\u4f7f\u7528 val \u5173\u952e\u5b57\u6765\u58f0\u660e\u7684\uff0c\u90a3\u4e48\u662f\u6ca1\u6709\u5fc5\u8981\u5b9e\u73b0\u88ab\u59d4\u6258\u7c7b\u7684 setValue() \u65b9\u6cd5\uff0c\u539f\u56e0\u4e5f\u5f88\u5bb9\u6613\u7406\u89e3\uff0cval \u5173\u952e\u5b57\u610f\u5473\u7740\u5c5e\u6027\u5728\u521d\u59cb\u5316\u540e\u65e0\u6cd5\u88ab\u91cd\u65b0\u8d4b\u503c\u3002","title":"\u59d4\u6258\u5c5e\u6027"},{"location":"Kotlin/%E6%B3%9B%E5%9E%8B%E4%B8%8E%E5%A7%94%E6%89%98/#lazy","text":"lazy \u51fd\u6570\u662f\u4e00\u79cd\u61d2\u52a0\u8f7d\u6280\u672f\uff0c\u628a\u60f3\u8981\u5ef6\u8fdf\u6267\u884c\u7684\u4ee3\u7801\u7f6e\u4e8e by lazy \u4ee3\u7801\u5757\u4e2d\uff0c\u8fd9\u6837\u4ee3\u7801\u4e0d\u4f1a\u5728\u4e00\u5f00\u59cb\u5c31\u6267\u884c\uff0c\u53ea\u6709\u5f53\u76f8\u5173\u53d8\u91cf\u9996\u6b21\u88ab\u8c03\u7528\u65f6\uff0c\u4ee3\u7801\u5757\u624d\u4f1a\u6267\u884c\uff1a fun main (){ val lazyValue : String by lazy { println ( \"computed!\" ) \"Hello\" } println ( lazyValue ) println ( lazyValue ) } \u8fd0\u884c\u7ed3\u679c\uff1a computed ! Hello Hello \u5b66\u4e60\u5b8c\u59d4\u6258\u529f\u80fd\u540e\uff0c\u6211\u4eec\u6765\u5bf9 by lazy \u7684\u5de5\u4f5c\u539f\u7406\u8fdb\u884c\u89e3\u5bc6\uff0c\u5176\u57fa\u672c\u8bed\u6cd5\u4e3a\uff1a val p by lazy {...} by \u662f\u59d4\u6258\u7684\u5173\u952e\u5b57\uff0clazy \u4e0d\u8fc7\u662f\u4e00\u4e2a\u9ad8\u9636\u51fd\u6570\u800c\u5df2\uff0c\u5728 lazy \u51fd\u6570\u4e2d\u4f1a\u521b\u5efa\u5e76\u8fd4\u56de\u4e00\u4e2a\u88ab\u59d4\u6258\u5bf9\u8c61\uff0c\u5f53\u6211\u4eec\u8c03\u7528 p \u5c5e\u6027\u65f6\uff0c\u5176\u5b9e\u8c03\u7528\u7684\u662f\u88ab\u59d4\u6258\u5bf9\u8c61\u7684 getValue() \u65b9\u6cd5\uff0c\u7136\u540e getValue() \u65b9\u6cd5\u53c8\u4f1a\u53bb\u8c03\u7528 lazy \u51fd\u6570\u4f20\u5165\u7684 lambda \u8868\u8fbe\u5f0f\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u8868\u8fbe\u5f0f\u4e2d\u7684\u4ee3\u7801\u5c31\u5f97\u5230\u4e86\u6267\u884c\uff0c\u5e76\u4e14\u8c03\u7528 p \u5c5e\u6027\u540e\u5f97\u5230\u7684\u503c\u5c31\u662f Lambda \u8868\u8fbe\u5f0f\u4e2d\u7684\u6700\u540e\u4e00\u884c\u4ee3\u7801\u7684\u8fd4\u56de\u503c\u3002 \u8fd9\u4e48\u770b\u6765\uff0cKotln \u7684\u61d2\u52a0\u8f7d\u6280\u672f\u4e5f\u6ca1\u6709\u591a\u795e\u79d8\u561b\uff0c\u8ba9\u6211\u4eec\u6765\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5df1\u7684 lazy \u51fd\u6570\u8bd5\u8bd5\u770b\uff1a fun < T > later ( block : () -> T ) = Later ( block ) \u9996\u5148\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u9876\u5c42\u51fd\u6570 later() \uff0c\u5b83\u63a5\u6536\u4e00\u4e2a\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a lambda \u8868\u8fbe\u5f0f\u3002 \u540c\u65f6\u5b83\u8fd8\u662f\u4e00\u4e2a\u6cdb\u578b\u51fd\u6570\uff0c\u56e0\u4e3a\u5982\u679c\u4e8b\u5148\u6307\u5b9a\u4e86\u4f7f\u7528 later() \u7684\u5c5e\u6027/\u5b57\u6bb5\u7684\u7c7b\u578b\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u8ba9\u4f20\u5165\u7684 lambda \u8868\u8fbe\u5f0f\u7684\u6700\u540e\u4e00\u884c\u7684\u8fd4\u56de\u503c\u4e5f\u662f\u540c\u6837\u7684\u7c7b\u578b\u3002 /** * \u56e0\u4e3a\u6307\u5b9a\u4e86 p \u7684\u7c7b\u578b\u4e3a String\uff0c * \u6240\u4ee5 lambda \u8868\u8fbe\u5f0f\u7684\u6700\u540e\u4e00\u884c\u7684\u8fd4\u56de\u503c\u4e5f\u5e94\u8be5\u5fc5\u987b\u662f String */ val p : String by later { ... \"Hello World!\" } later() \u8fd4\u56de\u4e00\u4e2a Later \u5bf9\u8c61\uff08\u88ab\u59d4\u6258\u5bf9\u8c61\uff09\uff0c\u5e76\u628a\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff08\u5c5e\u6027/\u5b57\u6bb5\u7684\u5177\u4f53\u5b9e\u73b0\uff09\u4f20\u9012\u7ed9 Later \u7c7b\u3002 class Later < T > ( val block : () -> T ) { var value : Any? = null operator fun getValue ( thisRef : Any? , property : KProperty <*> ): T { if ( value == null ){ value = block () } return value as T } } Later \u63a5\u6536\u7684\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a\u6cdb\u578b\uff0c\u56e0\u800c Later \u7c7b\u4e5f\u81ea\u7136\u800c\u7136\u5730\u5fc5\u987b\u662f\u4e00\u4e2a\u6cdb\u578b\u7c7b\u3002 \u5c5e\u6027/\u5b57\u6bb5\u7684\u5177\u4f53\u5b9e\u73b0\u5728\u4e8e\u51fd\u6570\u7c7b\u578b\u53c2\u6570 block\uff0c\u5f53\u8bbf\u95ee\u5c5e\u6027/\u5b57\u6bb5\u65f6\uff0c\u4f1a\u901a\u8fc7 getValue() \u65b9\u6cd5\u53bb\u8c03\u7528\u51fd\u6570\u7c7b\u578b\u53c2\u6570block \u83b7\u53d6\u8fd4\u56de\u503c\uff0c\u6240\u4ee5 getValue() \u7684\u8fd4\u56de\u503c\u7c7b\u578b\u4e0e\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u4e00\u81f4\u3002 \u8fd9\u91cc\u6211\u4eec\u5229\u7528\u4e00\u4e2a value \u53d8\u91cf\u5bf9\u8fd4\u56de\u503c\u8fdb\u884c\u7f13\u5b58\u3002\u5982\u679c value \u4e3a\u7a7a\u5c31\u8c03\u7528\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u53bb\u83b7\u53d6\u503c\uff0c\u5426\u5219\u76f4\u63a5\u8fd4\u56de\u3002 \u81f3\u6b64\uff0c\u6211\u4eec\u81ea\u5df1\u7684 later \u61d2\u52a0\u8f7d\u51fd\u6570\u5c31\u5df2\u7ecf\u5b8c\u6210\u4e86\u3002\u4e0d\u8fc7\u5fc5\u987b\u8bf4\u660e\u7684\u662f\uff0c\u6211\u4eec\u53ea\u662f\u5927\u81f4\u4e0a\u8fd8\u539f\u4e86 lazy \u51fd\u6570\u7684\u57fa\u672c\u5b9e\u73b0\u539f\u7406\uff0c\u4e3a\u7684\u662f\u5b66\u4e60\u59d4\u6258\u529f\u80fd\uff0c\u5728\u540c\u6b65\u3001\u7a7a\u503c\u5904\u7406\u7b49\u7ec6\u8282\u65b9\u9762\u5e76\u6ca1\u6709\u5b9e\u73b0\u5730\u5f88\u4e25\u8c28\u3002","title":"lazy \u51fd\u6570"},{"location":"Kotlin/%E6%B3%9B%E5%9E%8B%E7%9A%84%E9%AB%98%E7%BA%A7%E7%89%B9%E5%BE%81/","text":"\u6cdb\u578b\u7684\u9ad8\u7ea7\u7279\u5f81 \u00b6 1. \u6cdb\u578b\u5b9e\u5316 \u00b6 \u8981\u6df1\u523b\u7406\u89e3\u6cdb\u578b\u5b9e\u5316\uff0c\u6211\u4eec\u5f97\u5148\u89e3\u91ca\u4e00\u4e0b Java \u7684\u6cdb\u578b\u64e6\u9664\u673a\u5236\uff08\u867d\u7136 Java \u4e2d\u6ca1\u6709\u6cdb\u578b\u5b9e\u5316\u7684\u6982\u5ff5\uff09 1.1 Java \u7684\u6cdb\u578b\u64e6\u9664\u673a\u5236 \u00b6 \u5728 JDK 1.5 \u4e4b\u524d\uff0cJava\u662f\u6ca1\u6709\u6cdb\u578b\u529f\u80fd\u7684\uff0c\u5f7c\u65f6\u8bf8\u5982 List \u4e4b\u7c7b\u7684\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u7684\u6570\u636e\uff0c\u53d6\u51fa\u6570\u636e\u7684\u65f6\u5019\u4e5f\u9700\u8981\u624b\u52a8\u5411\u4e0b\u8f6c\u578b\u624d\u884c\u3002\u76f4\u5230 JDK 1.5\uff0cJava \u624d\u5f15\u5165\u6cdb\u578b\u529f\u80fd\u3002 Java \u7684\u6cdb\u578b\u529f\u80fd\u662f\u901a\u8fc7\u7c7b\u578b\u64e6\u9664\u673a\u5236\u6765\u5b9e\u73b0\u7684\u3002\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u5c31\u662f\u8bf4\u6cdb\u578b\u5bf9\u4e8e\u7c7b\u578b\u7684\u7ea6\u675f\u53ea\u5728\u7f16\u8bd1\u65f6\u671f\u5b58\u5728\uff0c\u8fd0\u884c\u65f6\u4ecd\u7136\u4f1a\u6309\u7167 JDK 1.5\u4e4b\u524d\u7684\u673a\u5236\u6765\u8fd0\u884c\uff0cJVM \u662f\u8bc6\u522b\u4e0d\u51fa\u6765\u6211\u4eec\u5728\u4ee3\u7801\u4e2d\u6307\u5b9a\u7684\u6cdb\u578b\u7c7b\u578b\u7684\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2aList\\ \u96c6\u5408\uff0c\u867d\u7136\u5728\u7f16\u8bd1\u65f6\u671f\u53ea\u80fd\u5411\u96c6\u5408\u4e2d\u6dfb\u52a0\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u5143\u7d20\uff0c\u4f46\u662f\u5728\u8fd0\u884c\u65f6\u671f JVM\u5e76\u4e0d\u80fd\u77e5\u9053\u5b83\u672c\u6765\u53ea\u6253\u7b97\u5305\u542b\u54ea\u79cd\u7c7b\u578b\u7684\u5143\u7d20\uff0c\u53ea\u80fd\u8bc6\u522b\u51fa\u6765\u5b83\u662f\u4e2a List\u3002 \u6240\u6709\u57fa\u4e8e JVM \u7684\u8bed\u8a00\uff0c\u5b83\u4eec\u7684\u6cdb\u578b\u529f\u80fd\u90fd\u662f\u901a\u8fc7\u7c7b\u578b\u64e6\u9664\u673a\u5236\u6765\u5b9e\u73b0\u7684\uff0c\u5176\u4e2d\u5f53\u7136\u4e5f\u5305\u62ec\u4e86 Kotlin\u3002\u8fd9\u79cd\u673a\u5236\u4f7f\u5f97\u6211\u4eec\u4e0d\u53ef\u80fd\u4f7f\u7528 a is T \u6216\u8005 T::class.java \u8fd9\u6837\u7684\u8bed\u6cd5\uff0c\u56e0\u4e3a T \u7684\u5b9e\u9645\u7c7b\u578b\u5728\u8fd0\u884c\u7684\u65f6\u5019\u5df2\u7ecf\u88ab\u64e6\u9664\u4e86\u3002 1.2 \u5185\u8054\u51fd\u6570\u5bf9\u6cdb\u578b\u7684\u5f71\u54cd \u00b6 Kotlin \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5185\u8054\u51fd\u6570\u7684\u6982\u5ff5\u3002\u5185\u8054\u51fd\u6570\u4e2d\u7684\u4ee3\u7801\u4f1a\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u81ea\u52a8\u88ab\u66ff\u6362\u5230\u8c03\u7528\u5b83\u7684\u5730\u65b9\uff0c\u8fd9\u6837\u7684\u8bdd\u4e5f\u5c31\u4e0d\u5b58\u5728\u4ec0\u4e48\u6cdb\u578b\u64e6\u9664\u7684\u95ee\u9898\u4e86\uff0c\u56e0\u4e3a\u4ee3\u7801\u5728\u7f16\u8bd1\u4e4b\u540e\u4f1a\u76f4\u63a5\u4f7f\u7528\u5b9e\u9645\u7684\u7c7b\u578b\u6765\u66ff\u4ee3\u5185\u8054\u51fd\u6570\u4e2d\u7684\u6cdb\u578b\u58f0\u660e\u3002 \u6700\u7ec8\u4ee3\u7801\uff1a \u53ef\u4ee5\u770b\u5230\uff0c bar() \u662f\u4e00\u4e2a\u5e26\u6709\u6cdb\u578b\u7c7b\u578b\u7684\u5185\u8054\u51fd\u6570\uff0c foo() \u8c03\u7528\u4e86 bar() \u51fd\u6570\uff0c\u5728\u4ee3\u7801\u7f16\u8bd1\u4e4b\u540e\uff0c bar() \u4e2d\u7684\u4ee3\u7801\u5c06\u53ef\u4ee5\u83b7\u5f97\u6cdb\u578b\u7684\u5b9e\u9645\u7c7b\u578b\u3002\u8fd9\u5c31\u610f\u5473\u7740\uff0cKotlin \u4e2d\u662f\u53ef\u4ee5\u5c06\u5185\u8054\u51fd\u6570\u4e2d\u7684\u6cdb\u578b\u8fdb\u884c\u5b9e\u5316\u7684\u3002 1.3 \u5177\u4f53\u5b9e\u73b0 \u00b6 \u5177\u4f53\u600e\u4e48\u5199\u624d\u80fd\u5c06\u6cdb\u578b\u5b9e\u5316\u5462\uff1f\u9996\u5148\uff0c\u8be5\u51fd\u6570\u5fc5\u987b\u662f\u5185\u8054\u51fd\u6570\u624d\u884c\uff0c\u4e5f\u5c31\u662f\u8981\u7528 inline \u5173\u952e\u5b57\u6765\u4fee\u9970\u8be5\u51fd\u6570\u3002\u5176\u6b21\uff0c\u5728\u58f0\u660e\u6cdb\u578b\u7684\u5730\u65b9\u5fc5\u987b\u52a0\u4e0a reified \u5173\u952e\u5b57\u6765\u8868\u793a\u8be5\u6cdb\u578b\u8981\u8fdb\u884c\u5b9e\u5316\uff1a inline fun < reified T > getGenericType (){ } \u4e0a\u8ff0\u51fd\u6570\u4e2d\u7684\u6cdb\u578b T \u5c31\u662f\u4e00\u4e2a\u88ab\u5b9e\u5316\u7684\u6cdb\u578b\uff0c\u56e0\u4e3a\u5b83\u6ee1\u8db3\u4e86 \u5185\u8054\u51fd\u6570 \u548c reified \u5173\u952e\u5b57\u8fd9\u4e24\u4e2a\u524d\u63d0\u6761\u4ef6\u3002\u90a3\u4e48\u501f\u52a9\u6cdb\u578b\u5b9e\u5316\uff0c\u5230\u5e95\u53ef\u4ee5\u5b9e\u73b0\u4ec0\u4e48\u6837\u7684\u6548\u679c\u5462\uff1f\u4ece\u51fd\u6570\u540d\u5c31\u53ef\u4ee5\u770b\u51fa\u6765\u4e86\uff0c\u8fd9\u91cc\u6211\u4eec\u51c6\u5907\u5b9e\u73b0\u4e00\u4e2a\u83b7\u53d6\u6cdb\u578b\u5b9e\u9645\u7c7b\u578b\u7684\u529f\u80fd\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a inline fun < reified T > getGenericType () = T :: class . java \u867d\u7136\u53ea\u6709\u4e00\u884c\u4ee3\u7801\uff0c\u4f46\u662f\u8fd9\u91cc\u5374\u5b9e\u73b0\u4e86\u4e00\u4e2a Java \u4e2d\u5b8c\u5168\u4e0d\u53ef\u80fd\u5b9e\u73b0\u7684\u529f\u80fd\uff1a getGenericType() \u76f4\u63a5\u8fd4\u56de\u4e86\u5f53\u524d\u6307\u5b9a\u6cdb\u578b\u7684\u5b9e\u9645\u7c7b\u578b\u3002 T.class \u8fd9\u6837\u7684\u8bed\u6cd5\u5728Java\u4e2d\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u800c\u5728 Kotlin \u4e2d\uff0c\u501f\u52a9\u6cdb\u578b\u5b9e\u5316\u529f\u80fd\u5c31\u53ef\u4ee5\u4f7f\u7528 T::class.java \u8fd9\u6837\u7684\u8bed\u6cd5\u4e86\u3002 2. \u6cdb\u578b\u5b9e\u5316\u7684\u5e94\u7528 \u00b6 Android \u7684\u56db\u5927\u7ec4\u4ef6\u9664\u4e86 ContentProvider \u4e4b\u5916\uff0c\u5176\u4f59\u76843\u4e2a\u7ec4\u4ef6\u6709\u4e00\u4e2a\u5171\u540c\u7684\u7279\u70b9\uff1a\u90fd\u8981\u7ed3\u5408 Intent \u4e00\u8d77\u4f7f\u7528\u3002 val intent = Intent ( context , TestActivity :: class . java ) context . startActivity ( intent ) \u6709\u6ca1\u6709\u89c9\u5f97 TestActivity::class.java \u8fd9\u6837\u7684\u8bed\u6cd5\u5f88\u96be\u53d7\u5462\uff1fKotlin \u7684\u6cdb\u578b\u5b9e\u5316\u529f\u80fd\u4f7f\u5f97\u6211\u4eec\u62e5\u6709\u4e86\u66f4\u597d\u7684\u9009\u62e9\u3002 inline fun < reified T > startActivity ( context : Context ){ val intent = Intent ( context , T :: class . java ) context . startActivity ( intent ) } \u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a startActivity() \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u63a5\u6536\u4e00\u4e2a Context \u53c2\u6570\uff0c\u5e76\u540c\u65f6\u4f7f\u7528 inline \u548c reified \u5173\u952e\u5b57\u8ba9\u6cdb\u578b T \u6210\u4e3a\u4e86\u4e00\u4e2a\u88ab\u5b9e\u5316\u7684\u6cdb\u578b\u3002\u63a5\u4e0b\u6765\u5c31\u662f\u795e\u5947\u7684\u5730\u65b9\u4e86\uff0cIntent \u63a5\u6536\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u672c\u6765\u5e94\u8be5\u662f\u4e00\u4e2a\u5177\u4f53 Activity\u7684 Class \u7c7b\u578b\uff0c\u4f46\u7531\u4e8e\u73b0\u5728 T \u5df2\u7ecf\u662f\u4e00\u4e2a\u88ab\u5b9e\u5316\u7684\u6cdb\u578b\u4e86\uff0c\u56e0\u6b64\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f20\u5165 T::class.java \u3002\u6700\u540e\u8c03\u7528 Context \u7684 startActivity() \u6765\u5b8c\u6210 Activity \u7684\u542f\u52a8\u3002\u73b0\u5728\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u542f\u52a8 TestActivity\uff0c\u53ea\u9700\u8981\u8fd9\u6837\u5199\u5c31\u53ef\u4ee5\u4e86\uff1a startActivity < TestActivity > ( context ) Kotlin \u5c06\u80fd\u591f\u8bc6\u522b\u51fa\u6307\u5b9a\u6cdb\u578b\u7684\u5b9e\u9645\u7c7b\u578b\uff0c\u5e76\u542f\u52a8\u76f8\u5e94\u7684 Activity\u3002 \u4e0d\u8fc7\uff0c\u73b0\u5728\u7684 startActivity() \u51fd\u6570\u5176\u5b9e\u8fd8\u662f\u6709\u95ee\u9898\u7684\uff0c\u56e0\u4e3a\u901a\u5e38\u5728\u542f\u7528 Activity \u7684\u65f6\u5019\u8fd8\u53ef\u80fd\u4f1a\u4f7f\u7528 Intent \u9644\u5e26\u4e00\u4e9b\u53c2\u6570\uff0c\u6bd4\u5982\uff1a intent.putExtra(\"param1\", 123) \uff0c\u7ecf\u8fc7\u521a\u624d\u7684\u5c01\u88c5\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u65e0\u6cd5\u8fdb\u884c\u4f20\u53c2\u4e86\u3002 \u5176\u5b9e\u4e5f\u4e0d\u96be\u89e3\u51b3\uff0c\u53ea\u9700\u8981\u501f\u52a9\u9ad8\u9636\u51fd\u6570\u5c31\u53ef\u4ee5\u8f7b\u677e\u641e\u5b9a\u3002\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684 startActivity() \u51fd\u6570\u91cd\u8f7d\uff0c\u5982\u4e0b\u6240\u793a\uff1a inline fun < reified T > startActivity ( context : Context , block : Intent .() -> Unit ){ val intent = Intent ( context , T :: class . java ) intent . block () context . startActivity ( intent ) } \u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u6b21\u7684 startActivity() \u51fd\u6570\u4e2d\u589e\u52a0\u4e86\u4e00\u4e2a\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff0c\u5e76\u4e14\u5b83\u7684\u51fd\u6570\u7c7b\u578b\u662f\u5b9a\u4e49\u5728 Intent \u7c7b\u5f53\u4e2d\u7684\u3002\u5728\u521b\u5efa\u5b8c Intent \u5b9e\u4f8b\u540e\uff0c\u968f\u5373\u8c03\u7528\u8be5\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff0c\u5e76\u628a Intent \u5b9e\u4f8b\u4f20\u5165\uff0c\u8fd9\u6837\u8c03\u7528 startActivity() \u51fd\u6570\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u5728 Lambda \u8868\u8fbe\u5f0f\u4e2d\u4e3a Intent \u4f20\u9012\u53c2\u6570\u4e86\uff0c\u5982\u4e0b\u6240\u793a\uff1a startActivity < TestActivity > ( context ) { putExtra ( \"param1\" , 123 ) } 3. \u6cdb\u578b\u7684\u534f\u53d8 \u00b6 \u5b66\u4e60\u534f\u53d8\u548c\u9006\u53d8\u524d\uff0c\u5148\u5f97\u5148\u4e86\u89e3\u4e00\u4e2a\u7ea6\u5b9a\u3002\u4e00\u4e2a \u6cdb\u578b\u7c7b\u6216\u8005\u6cdb\u578b\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5 \uff0c\u5b83\u7684\u53c2\u6570\u5217\u8868\u662f\u63a5\u6536\u6570\u636e\u7684\u5730\u65b9\uff0c\u79f0\u4e3a in \u4f4d\u7f6e\uff0c\u800c\u5b83\u7684\u8fd4\u56de\u503c\u662f\u8f93\u51fa\u6570\u636e\u7684\u5730\u65b9\uff0c\u79f0\u4e3a out \u4f4d\u7f6e\uff1a \u597d\uff0c\u6709\u4e86\u8fd9\u4e2a\u7ea6\u5b9a\u524d\u63d0\uff0c\u6211\u4eec\u7ee7\u7eed\u3002 open class Person ( val name : String , val age : Int ) class Student ( name : String , age : Int ) : Person ( name , age ) class Teacher ( name : String , age : Int ) : Person ( name , age ) \u8fd9\u91cc\u9996\u5148\u5b9a\u4e49\u4e86\u4e00\u4e2a Person \u7c7b\uff0c\u7136\u540e\u53c8\u5b9a\u4e49\u4e86 Student \u548c Teacher \u8fd9\u4e24\u4e2a\u7c7b\u4f5c\u4e3a Person \u7c7b\u7684\u5b50\u7c7b\u3002\u8fd9\u65f6\u5982\u679c\u67d0\u4e2a\u65b9\u6cd5\u63a5\u6536\u4e00\u4e2a List<Person> \u7c7b\u578b\u7684\u53c2\u6570\uff0c\u800c\u6211\u4eec\u4f20\u5165\u4e00\u4e2a List<Student> \u7684\u5b9e\u4f8b\uff0c\u8fd9\u6837\u5408\u4e0d\u5408\u6cd5\u5462\uff1fJava \u4e2d\u662f\u4e0d\u5141\u8bb8\u7684\uff0c\u56e0\u4e3a List<Student> \u4e0d\u80fd\u6210\u4e3a List<Person> \u7684\u5b50\u7c7b\uff0c\u5426\u5219\u5c06\u53ef\u80fd\u5b58\u5728\u7c7b\u578b\u8f6c\u6362\u7684\u5b89\u5168\u9690\u60a3\u3002\u4e0b\u9762\u6211\u4eec\u7528\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\u8fdb\u884c\u8bf4\u660e\u3002\u8fd9\u91cc\u81ea\u5b9a\u4e49\u4e00\u4e2a SimpleData \u7c7b\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a class SimpleData < T > { private var data : T? = null fun set ( t : T?) { data = t } fun get () = data } \u63a5\u7740\u6211\u4eec \u5047\u8bbe \uff0c\u5982\u679c\u7f16\u7a0b\u8bed\u8a00\u5141\u8bb8\u5411\u67d0\u4e2a\u63a5\u6536 SimpleData<Person> \u53c2\u6570\u7684\u65b9\u6cd5\u4f20\u5165 SimpleData<Student> \u7684\u5b9e\u4f8b\uff0c\u90a3\u4e48\u5982\u4e0b\u4ee3\u7801\u5c31\u4f1a\u662f\u5408\u6cd5\u7684\uff1a fun main () { val student = Student ( \"Tom\" , 18 ) val data = SimpleData < Student > () data . set ( student ) handleSimpleData ( data ) // \u5b9e\u9645\u4e0a\u8fd9\u884c\u4f1a\u62a5\u9519 val studentData = data . get () } fun handleSimpleData ( data : SimpleData < Person > ) { val teacher = Teacher ( \"Mike\" , 35 ) data . set ( teacher ) } \u5728main() \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a Student \u7684\u5b9e\u4f8b\uff0c\u5c06\u5b83\u5c01\u88c5\u5230 SimpleData<Student> \u4e2d\u5e76\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9 handleSimpleData(data: SimpleData<Person>) \u65b9\u6cd5\u3002\uff08\u8fd9\u91cc\u5047\u8bbe\u53ef\u4ee5\u7f16\u8bd1\u901a\u8fc7\uff09\u3002 \u90a3\u4e48\u5728 handleSimpleData() \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a Teacher \u7684\u5b9e\u4f8b\uff0c\u5e76\u7528\u5b83\u6765\u66ff\u6362 SimpleData<Person> \u53c2\u6570\u4e2d\u7684\u539f\u6709\u6570\u636e\u3002\u8fd9\u79cd\u64cd\u4f5c\u80af\u5b9a\u662f\u5408\u6cd5\u7684\uff0c\u56e0\u4e3a Teacher \u4e5f\u662f Person \u7684\u5b50\u7c7b\u3002\u4f46\u662f\u95ee\u9898\u9a6c\u4e0a\u6765\u4e86\uff0c\u56de\u5230 main() \u65b9\u6cd5\u5f53\u4e2d\uff0c\u6211\u4eec\u8c03\u7528 SimpleData<Student> \u7684 get() \u65b9\u6cd5\u6765\u83b7\u53d6\u5b83\u5185\u90e8\u5c01\u88c5\u7684 Student \u6570\u636e\uff0c\u53ef\u73b0\u5728 SimpleData<Student> \u4e2d\u5b9e\u9645\u5305\u542b\u7684\u5374\u662f\u4e00\u4e2a Teacher \u7684\u5b9e\u4f8b\uff0c\u90a3\u4e48\u6b64\u65f6\u5fc5\u7136\u4f1a\u4ea7\u751f\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\u3002\u6240\u4ee5\uff0c\u4e3a\u4e86\u675c\u7edd\u8fd9\u79cd\u5b89\u5168\u9690\u60a3\uff0cJava \u662f\u4e0d\u5141\u8bb8\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u6765\u4f20\u9012\u53c2\u6570\u7684\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u5373\u4f7f Student \u662f Person \u7684\u5b50\u7c7b\uff0cSimpleData<Student> \u5e76\u4e0d\u662f SimpleData<Person> \u7684\u5b50\u7c7b\u3002 \u56de\u987e\u4e00\u4e0b\u521a\u624d\u7684\u4ee3\u7801\uff0c\u95ee\u9898\u53d1\u751f\u7684\u4e3b\u8981\u539f\u56e0\u662f\u5728 handleSimpleData() \u65b9\u6cd5\u4e2d\u5411 SimpleData<Person> \u91cc\u8bbe\u7f6e\u4e86\u4e00\u4e2a Teacher \u7684\u5b9e\u4f8b\u3002\u5982\u679c SimpleData \u5728\u6cdb\u578b T \u4e0a\u662f\u53ea\u8bfb\u7684\u8bdd\uff0c\u80af\u5b9a\u5c31\u6ca1\u6709\u7c7b\u578b\u8f6c\u6362\u7684\u5b89\u5168\u9690\u60a3\u4e86\uff0c\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u540e SimpleData<Student> \u53ef\u4e0d\u53ef\u4ee5\u6210\u4e3a SimpleData<Person> \u7684\u5b50\u7c7b\u5462\uff1f\u8bb2\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u7ec8\u4e8e\u8981\u5f15\u51fa\u6cdb\u578b\u534f\u53d8\u7684\u5b9a\u4e49\u4e86\uff1a \u5047\u5982\u5b9a\u4e49\u4e86\u4e00\u4e2a MyClass<T> \u7684\u6cdb\u578b\u7c7b\uff0c\u5176\u4e2d A \u662f B \u7684\u5b50\u7c7b\uff0c\u540c\u65f6 MyClass<A> \u53c8\u662f MyClass<B> \u7684\u5b50\u7c7b\u578b\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u79f0 MyClass \u5728 T \u8fd9\u4e2a\u6cdb\u578b\u4e0a\u662f\u534f\u53d8\u7684\u3002 \u8ba9 A \u662f B \u7684\u5b50\u7c7b\u5f88\u7b80\u5355\uff0c\u4f46\u5982\u4f55\u624d\u80fd\u8ba9 MyClass<A> \u6210\u4e3a MyClass<B> \u7684\u5b50\u7c7b\u578b\u5462\uff1f\u521a\u624d\u5df2\u7ecf\u8bb2\u4e86\uff0c\u5982\u679c\u4e00\u4e2a\u6cdb\u578b\u7c7b\u5728\u5176\u6cdb\u578b\u7c7b\u578b\u7684\u6570\u636e\u4e0a\u662f\u53ea\u8bfb\u7684\u8bdd\uff0c\u90a3\u4e48\u5b83\u662f\u6ca1\u6709\u7c7b\u578b\u8f6c\u6362\u5b89\u5168\u9690\u60a3\u7684\u3002\u800c\u8981\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u5219\u9700\u8981\u8ba9 MyClass<T> \u7c7b\u4e2d\u7684\u6240\u6709\u65b9\u6cd5\u90fd\u4e0d\u80fd\u63a5\u6536 T \u7c7b\u578b\u7684\u53c2\u6570\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0cT \u53ea\u80fd\u51fa\u73b0\u5728 out \u4f4d\u7f6e\u4e0a\uff0c\u800c\u4e0d\u80fd\u51fa\u73b0\u5728 in \u4f4d\u7f6e\u4e0a\u3002\u73b0\u5728\u4fee\u6539 SimpleData \u7c7b\u7684\u4ee3\u7801\uff1a class SimpleData < out T > ( val data : T?) { fun get () = data } \u5728\u6cdb\u578b T \u7684\u58f0\u660e\u524d\u9762\u52a0\u4e0a\u4e86\u4e00\u4e2a out \u5173\u952e\u5b57\u3002\u8fd9\u5c31\u610f\u5473\u7740\u73b0\u5728 T \u53ea\u80fd\u51fa\u73b0\u5728 out \u4f4d\u7f6e\u4e0a\uff0c\u800c\u4e0d\u80fd\u51fa\u73b0\u5728 in \u4f4d\u7f6e\u4e0a\uff0c\u540c\u65f6\u4e5f\u610f\u5473\u7740 SimpleData \u5728\u6cdb\u578b T \u4e0a\u662f\u534f\u53d8\u7684\u3002 \u7531\u4e8e\u6cdb\u578b T \u4e0d\u80fd\u51fa\u73b0\u5728 in \u4f4d\u7f6e\u4e0a\uff0c\u56e0\u6b64\u6211\u4eec\u4e5f\u5c31\u4e0d\u80fd\u4f7f\u7528 set() \u65b9\u6cd5\u4e3a data \u53c2\u6570\u8d4b\u503c\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u6539\u6210\u4e86\u4f7f\u7528\u6784\u9020\u51fd\u6570\u7684\u65b9\u5f0f\u6765\u8d4b\u503c\u3002\u4f60\u53ef\u80fd\u4f1a\u8bf4\uff0c\u6784\u9020\u51fd\u6570\u4e2d\u7684\u6cdb\u578b T \u4e0d\u4e5f\u662f\u5728in\u4f4d\u7f6e\u4e0a\u7684\u5417\uff1f\u6ca1\u9519\uff0c\u4f46\u662f\u7531\u4e8e\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u4e86 val \u5173\u952e\u5b57\uff0c\u6240\u4ee5\u6784\u9020\u51fd\u6570\u4e2d\u7684\u6cdb\u578b T \u4ecd\u7136\u662f\u53ea\u8bfb\u7684\uff0c\u56e0\u6b64\u8fd9\u6837\u5199\u662f\u5408\u6cd5\u4e14\u5b89\u5168\u7684\u3002\u53e6\u5916\uff0c\u5373\u4f7f\u4f7f\u7528 var \u5173\u952e\u5b57\uff0c\u4f46\u53ea\u8981\u7ed9\u5b83\u52a0\u4e0a private \u4fee\u9970\u7b26\uff0c\u4fdd\u8bc1\u8fd9\u4e2a\u6cdb\u578b T \u5bf9\u4e8e\u5916\u90e8\u800c\u8a00\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff0c\u90a3\u4e48\u5c31\u90fd\u662f\u5408\u6cd5\u7684\u3002 fun main () { val student = Student ( \"Tom\" , 18 ) val data = SimpleData < Student > () data . set ( student ) handleSimpleData ( data ) val studentData = data . get () } fun handleSimpleData ( data : SimpleData < Person > ) { val personData = data . set ( teacher ) } \u7531\u4e8e SimpleData \u7c7b\u5df2\u7ecf\u8fdb\u884c\u4e86\u534f\u53d8\u58f0\u660e\uff0c\u90a3\u4e48 SimpleData<Student> \u81ea\u7136\u5c31\u662f SimpleData<Person> \u7684\u5b50\u7c7b\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u53ef\u4ee5\u5b89\u5168\u5730\u5411 handleMyData(data: SimpleData<Person>) \u65b9\u6cd5\u4e2d\u4f20\u9012 SimpleData<Student> \u3002\u7136\u540e\u5728 handleMyData() \u65b9\u6cd5\u4e2d\u53bb\u83b7\u53d6 SimpleData \u5c01\u88c5\u7684\u6570\u636e\uff0c\u867d\u7136\u8fd9\u91cc\u6cdb\u578b\u58f0\u660e\u7684\u662f Person \u7c7b\u578b\uff0c\u5b9e\u9645\u83b7\u5f97\u7684\u4f1a\u662f\u4e00\u4e2a Student \u7684\u5b9e\u4f8b\uff0c\u4f46\u7531\u4e8e Person \u662f Student \u7684\u7236\u7c7b\uff0c\u5411\u4e0a\u8f6c\u578b\u662f\u5b8c\u5168\u5b89\u5168\u7684\uff0c\u6240\u4ee5\u8fd9\u6bb5\u4ee3\u7801\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\u3002 3.1 List \u00b6 \u524d\u9762\u63d0\u5230\uff0c\u5982\u679c\u67d0\u4e2a\u65b9\u6cd5\u63a5\u6536\u4e00\u4e2a List<Person> \u7c7b\u578b\u7684\u53c2\u6570\uff0c\u800c\u4f20\u5165\u7684\u5374\u662f\u4e00\u4e2a List<Student> \u7684\u5b9e\u4f8b\uff0c \u5728 Java \u4e2d\u662f\u4e0d\u5141\u8bb8\u7684\u3002\u4f46\u5728 Kotlin \u4e2d\u8fd9\u4e48\u505a\u662f\u5408\u6cd5\u7684\uff0c\u56e0\u4e3a Kotlin \u5df2\u7ecf\u9ed8\u8ba4\u7ed9\u8bb8\u591a\u5185\u7f6e\u7684 API \u52a0\u4e0a\u4e86\u534f\u53d8\u58f0\u660e\uff0c\u5176\u4e2d\u5c31\u5305\u62ec\u4e86\u5404\u79cd\u96c6\u5408\u7684\u7c7b\u4e0e\u63a5\u53e3\u3002Kotlin \u4e2d\u7684 List \u672c\u8eab\u5c31\u662f\u53ea\u8bfb\u7684\uff0c\u5982\u679c\u4f60\u60f3\u8981\u7ed9 List \u6dfb\u52a0\u6570\u636e\uff0c\u9700\u8981\u4f7f\u7528 MutableList \u624d\u884c\u3002\u65e2\u7136 List \u662f\u53ea\u8bfb\u7684\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u5b83\u5929\u7136\u5c31\u662f\u53ef\u4ee5\u534f\u53d8\u7684\uff0c\u6211\u4eec\u6765\u770b\u4e00\u4e0b List \u7b80\u5316\u7248\u7684\u6e90\u7801\uff1a public interface List < out E > : Collection < E > { overrride val size : Int overrride fun isEmpty (): Boolean override fun contains ( element : @UnsafeVariance E ): Boolean override fun iterator () : Iterator < E > public operator fun get ( index : Int ): E } List \u5728\u6cdb\u578b E \u7684\u524d\u9762\u52a0\u4e0a\u4e86 out \u5173\u952e\u5b57\uff0c\u8bf4\u660e List \u5728\u6cdb\u578b E \u4e0a\u662f\u534f\u53d8\u7684\u3002\u539f\u5219\u4e0a\u5728\u58f0\u660e\u4e86\u534f\u53d8\u4e4b\u540e\uff0c\u6cdb\u578b E \u5c31\u53ea\u80fd\u51fa\u73b0\u5728 out \u4f4d\u7f6e\u4e0a\uff0c\u53ef\u662f\u5728 contains() \u65b9\u6cd5\u4e2d\uff0c\u6cdb\u578b E \u4ecd\u7136\u51fa\u73b0\u5728\u4e86 in \u4f4d\u7f6e\u4e0a\u3002\u8fd9\u4e48\u5199\u672c\u8eab\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u56e0\u4e3a\u5728in\u4f4d\u7f6e\u4e0a\u51fa\u73b0\u4e86\u6cdb\u578bE\u5c31\u610f\u5473\u7740\u4f1a\u6709\u7c7b\u578b\u8f6c\u6362\u7684\u5b89\u5168\u9690\u60a3\u3002\u4f46\u662f contains() \u65b9\u6cd5\u7684\u76ee\u7684\u975e\u5e38\u660e\u786e\uff0c\u5b83\u53ea\u662f\u4e3a\u4e86\u5224\u65ad\u5f53\u524d\u96c6\u5408\u4e2d\u662f\u5426\u5305\u542b\u53c2\u6570\u4e2d\u4f20\u5165\u7684\u8fd9\u4e2a\u5143\u7d20\uff0c\u800c\u5e76\u4e0d\u4f1a\u4fee\u6539\u5f53\u524d\u96c6\u5408\u4e2d\u7684\u5185\u5bb9\uff0c\u56e0\u6b64\u8fd9\u79cd\u64cd\u4f5c\u5b9e\u8d28\u4e0a\u53c8\u662f\u5b89\u5168\u7684\u3002\u4e3a\u4e86\u8ba9\u7f16\u8bd1\u5668\u80fd\u591f\u7406\u89e3\u6211\u4eec\u7684\u8fd9\u79cd\u64cd\u4f5c\u662f\u5b89\u5168\u7684\uff0c\u8fd9\u91cc\u5728\u6cdb\u578b E \u7684\u524d\u9762\u53c8\u52a0\u4e0a\u4e86\u4e00\u4e2a @UnsafeVariance \u6ce8\u89e3\uff0c\u8fd9\u6837\u7f16\u8bd1\u5668\u5c31\u4f1a\u5141\u8bb8\u6cdb\u578b E \u51fa\u73b0\u5728in\u4f4d\u7f6e\u4e0a\u4e86\u3002\u5982\u679c\u6ee5\u7528\u8fd9\u4e2a\u529f\u80fd\uff0c\u5bfc\u81f4\u8fd0\u884c\u65f6\u51fa\u73b0\u4e86\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\uff0cKotlin \u5bf9\u6b64\u662f\u4e0d\u8d1f\u8d23\u7684\u3002 4. \u6cdb\u578b\u7684\u9006\u53d8 \u00b6 \u5047\u5982\u5b9a\u4e49\u4e86\u4e00\u4e2a MyClass<T> \u7684\u6cdb\u578b\u7c7b\uff0c\u5176\u4e2d A \u662f B \u7684\u5b50\u7c7b\u578b\uff0c\u540c\u65f6 MyClass<B> \u53c8\u662f MyClass<A> \u7684\u5b50\u7c7b\u578b\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u79f0 MyClass \u5728 T \u8fd9\u4e2a\u6cdb\u578b\u4e0a\u662f\u9006\u53d8\u7684\u3002 \u4ec5\u4ece\u5b9a\u4e49\u4e0a\u6765\u770b\uff0c\u9006\u53d8\u4e0e\u534f\u53d8\u5b8c\u5168\u76f8\u53cd\u3002 \u4ece\u76f4\u89c2\u7684\u89d2\u5ea6\u4e0a\u6765\u601d\u8003\uff0c\u9006\u53d8\u7684\u89c4\u5219\u597d\u50cf\u633a\u5947\u602a\u7684\uff0c\u539f\u672c A \u662f B \u7684\u5b50\u7c7b\u578b\uff0c\u600e\u4e48 MyClass<B> \u80fd\u53cd\u8fc7\u6765\u6210\u4e3a MyClass<A> \u7684\u5b50\u7c7b\u578b\u4e86\u5462\uff1f\u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\u6765\u5b66\u4e60\u4e00\u4e0b\u3002 interface Transformer < T > { fun transform ( t : T ): String } Transformer \u63a5\u53e3\u4e2d\u58f0\u660e\u4e86\u4e00\u4e2a transform() \u65b9\u6cd5\uff0c\u63a5\u6536\u4e00\u4e2a T \u7c7b\u578b\u7684\u53c2\u6570\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a String \u7c7b\u578b\u7684\u6570\u636e\uff0c\u8fd9\u610f\u5473\u7740\u53c2\u6570 T \u5728\u7ecf\u8fc7 transform() \u65b9\u6cd5\u7684\u8f6c\u6362\u4e4b\u540e\u5c06\u4f1a\u53d8\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u73b0\u5728\u6211\u4eec\u5c31\u5c1d\u8bd5\u5bf9\u63a5\u53e3\u8fdb\u884c\u5b9e\u73b0\uff1a fun main () { // Person \u8f6c\u6362\u5668 val trans = object : Transformer < Person > { override fun transform ( t : Person ): String = \" ${ t . name } ${ t . age } \" } handleTransformer ( trans ) // \u62a5\u9519 } // \u63a5\u6536\u4e00\u4e2a Student \u8f6c\u6362\u5668 fun handleTransformer ( trans : Transformer < Student > ) { val student = Student ( \"Tom\" , 20 ) val result = trans . transform ( student ) } \u9996\u5148\u5728 main() \u65b9\u6cd5\u4e2d\u7f16\u5199\u4e86\u4e00\u4e2a Transformer<Person> \u7684\u533f\u540d\u7c7b\u5b9e\u73b0\uff0c\u5e76\u901a\u8fc7 transform() \u65b9\u6cd5\u5c06\u4f20\u5165\u7684 Person \u5bf9\u8c61\u8f6c\u6362\u6210\u4e86\u4e00\u4e2a\u201c\u59d3\u540d+\u5e74\u9f84\u201d\u62fc\u63a5\u7684\u5b57\u7b26\u4e32\u3002 handleTransformer() \u65b9\u6cd5\u63a5\u6536\u7684\u662f Transformer<Student> \u7c7b\u578b\u7684\u53c2\u6570\uff0c\u8fd9\u91cc\u5728 handleTransformer() \u65b9\u6cd5\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a Student \u5bf9\u8c61\uff0c\u5e76\u8c03\u7528\u53c2\u6570\u7684 transform() \u65b9\u6cd5\u5c06 Student \u5bf9\u8c61\u8f6c\u6362\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u8fd9\u6bb5\u4ee3\u7801\u4ece\u5b89\u5168\u7684\u89d2\u5ea6\u6765\u5206\u6790\u662f\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\u7684\uff0c\u56e0\u4e3a Student \u662f Person \u7684\u5b50\u7c7b\uff0c\u4f7f\u7528 Transformer<Person> \u7684\u533f\u540d\u7c7b\u5b9e\u73b0\u5c06 Student \u5bf9\u8c61\u8f6c\u6362\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e5f\u662f\u7edd\u5bf9\u5b89\u5168\u7684\uff0c\u5e76\u4e0d\u5b58\u5728\u7c7b\u578b\u8f6c\u6362\u7684\u5b89\u5168\u9690\u60a3\u3002\u4f46\u662f\u5b9e\u9645\u4e0a\uff0c\u5728\u8c03\u7528 handleTransformer() \u65b9\u6cd5\u7684\u65f6\u5019\u5374\u4f1a\u63d0\u793a\u8bed\u6cd5\u9519\u8bef\uff0c\u539f\u56e0\u4e5f\u5f88\u7b80\u5355\uff0cTransformer<Person> \u5e76\u4e0d\u662f Transformer<Student> \u7684\u5b50\u7c7b\u578b\u3002 \u8fd9\u4e2a\u65f6\u5019\u9006\u53d8\u5c31\u53ef\u4ee5\u6d3e\u4e0a\u7528\u573a\u4e86\uff0c\u5b83\u5c31\u662f\u4e13\u95e8\u7528\u4e8e\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\u7684\u3002\u4fee\u6539 Transformer \u63a5\u53e3\u4e2d\u7684\u4ee3\u7801\uff1a interface Transformer < in T > { fun transform ( t : T ): String } \u6211\u4eec\u5728\u6cdb\u578b T \u7684\u58f0\u660e\u524d\u9762\u52a0\u4e0a\u4e86\u4e00\u4e2a in \u5173\u952e\u5b57\u3002\u8fd9\u5c31\u610f\u5473\u7740\u73b0\u5728 T \u53ea\u80fd\u51fa\u73b0\u5728 in \u4f4d\u7f6e\u4e0a\uff0c\u800c\u4e0d\u80fd\u51fa\u73b0\u5728 out \u4f4d\u7f6e\u4e0a\uff0c\u540c\u65f6\u4e5f\u610f\u5473\u7740 Transformer \u5728\u6cdb\u578b T \u4e0a\u662f\u9006\u53d8\u7684\u3002\u6ca1\u9519\uff0c\u53ea\u8981\u505a\u4e86\u8fd9\u6837\u4e00\u70b9\u4fee\u6539\uff0c\u521a\u624d\u7684\u4ee3\u7801\u5c31\u53ef\u4ee5\u7f16\u8bd1\u901a\u8fc7\u4e14\u6b63\u5e38\u8fd0\u884c\u4e86\uff0c\u56e0\u4e3a\u6b64\u65f6 Transformer<Person> \u5df2\u7ecf\u6210\u4e3a\u4e86 Transformer<Student> \u7684\u5b50\u7c7b\u578b\u3002\u9006\u53d8\u7684\u7528\u6cd5\u5927\u6982\u5c31\u662f\u8fd9\u6837\u3002 \u5982\u679c\u8fd8\u60f3\u518d\u6df1\u5165\u601d\u8003\u4e00\u4e0b\u7684\u8bdd\uff0c\u53ef\u4ee5\u60f3\u60f3\u4e3a\u4ec0\u4e48\u9006\u53d8\u7684\u65f6\u5019\u6cdb\u578bT\u4e0d\u80fd\u51fa\u73b0\u5728 out \u4f4d\u7f6e\u4e0a\uff1f\u4e3a\u4e86\u89e3\u91ca\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5148\u5047\u8bbe\u9006\u53d8\u662f\u5141\u8bb8\u8ba9\u6cdb\u578b T \u51fa\u73b0\u5728 out \u4f4d\u7f6e\u4e0a\u7684\uff0c\u7136\u540e\u770b\u4e00\u770b\u53ef\u80fd\u4f1a\u4ea7\u751f\u4ec0\u4e48\u6837\u7684\u5b89\u5168\u9690\u60a3\uff1a interface Transformer < in T > { fun transform ( name : String , age : Int ): @UnsafeVariance T } \u6211\u4eec\u5c06 transform() \u65b9\u6cd5\u6539\u6210\u4e86\u63a5\u6536 name \u548c age \u8fd9\u4e24\u4e2a\u53c2\u6570\uff0c\u5e76\u628a\u8fd4\u56de\u503c\u7c7b\u578b\u6539\u6210\u4e86\u6cdb\u578b T\u3002\u7531\u4e8e\u9006\u53d8\u662f\u4e0d\u5141\u8bb8\u6cdb\u578b T \u51fa\u73b0\u5728 out \u4f4d\u7f6e\u4e0a\u7684\uff0c\u8fd9\u91cc\u4e3a\u4e86\u80fd\u8ba9\u7f16\u8bd1\u5668\u6b63\u5e38\u7f16\u8bd1\u901a\u8fc7\uff0c\u6240\u4ee5\u52a0\u4e0a\u4e86 @UnsafeVariance \u6ce8\u89e3\u3002\u90a3\u4e48\uff0c\u8fd9\u4e2a\u65f6\u5019\u53ef\u80fd\u4f1a\u4ea7\u751f\u4ec0\u4e48\u6837\u7684\u5b89\u5168\u9690\u60a3\u5462\uff1f\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u5982\u4e0b\u4ee3\u7801\u5c31\u77e5\u9053\u4e86\uff1a fun main() { val trans = object: Transformer<Person> { override fun transform(name: String, age: Int): Person = Teacher(name, age) } handleTransformer(trans) } fun handleTransformer(trans: Transformer<Student>) { val result = trans.transform(\"Tom\", 19) } \u4e0a\u8ff0\u4ee3\u7801\u5c31\u662f\u4e00\u4e2a\u5178\u578b\u7684\u8fdd\u53cd\u9006\u53d8\u89c4\u5219\u800c\u9020\u6210\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\u7684\u4f8b\u5b50\u3002\u5728 Transformer<Person> \u7684\u533f\u540d\u7c7b\u5b9e\u73b0\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 transform() \u65b9\u6cd5\u4e2d\u4f20\u5165\u7684 name \u548c age \u53c2\u6570\u6784\u5efa\u4e86\u4e00\u4e2a Teacher \u5bf9\u8c61\uff0c\u5e76\u628a\u8fd9\u4e2a\u5bf9\u8c61\u76f4\u63a5\u8fd4\u56de\u3002\u7531\u4e8e transform() \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u8981\u6c42\u662f\u4e00\u4e2a Person \u5bf9\u8c61\uff0c\u800c Teacher \u662f Person \u7684\u5b50\u7c7b\uff0c\u56e0\u6b64\u8fd9\u79cd\u5199\u6cd5\u80af\u5b9a\u662f\u5408\u6cd5\u7684\u3002\u4f46\u5728 handleTransformer() \u65b9\u6cd5\u5f53\u4e2d\uff0c\u6211\u4eec\u8c03\u7528\u4e86 Transformer<Student> \u7684 transform() \u65b9\u6cd5\uff0c\u5e76\u4f20\u5165\u4e86 name \u548c age \u8fd9\u4e24\u4e2a\u53c2\u6570\uff0c\u671f\u671b\u5f97\u5230\u7684\u662f\u4e00\u4e2a Student \u5bf9\u8c61\u7684\u8fd4\u56de\uff0c\u7136\u800c\u5b9e\u9645\u4e0a transform() \u65b9\u6cd5\u8fd4\u56de\u7684\u5374\u662f\u4e00\u4e2a Teacher \u5bf9\u8c61\uff0c\u56e0\u6b64\u8fd9\u91cc\u5fc5\u7136\u4f1a\u9020\u6210\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\u3002\u7531\u4e8e\u8fd9\u6bb5\u4ee3\u7801\u662f\u53ef\u4ee5\u7f16\u8bd1\u901a\u8fc7\u7684\uff0c\u8fd0\u884c\u4e00\u4e0b\uff0c\u6253\u5370\u51fa\u7684\u5f02\u5e38\u4fe1\u606f\u5982\u4e0b\u6240\u793a\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u63d0\u793a\u6211\u4eec Teacher \u662f\u65e0\u6cd5\u8f6c\u6362\u6210 Student\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cKotlin \u5728\u63d0\u4f9b\u534f\u53d8\u548c\u9006\u53d8\u529f\u80fd\u65f6\uff0c\u5c31\u5df2\u7ecf\u628a\u5404\u79cd\u6f5c\u5728\u7684\u7c7b\u578b\u8f6c\u6362\u5b89\u5168\u9690\u60a3\u5168\u90e8\u8003\u8651\u8fdb\u53bb\u4e86\u3002\u53ea\u8981\u6211\u4eec\u4e25\u683c\u6309\u7167\u5176\u8bed\u6cd5\u89c4\u5219\uff0c\u8ba9\u6cdb\u578b\u5728\u534f\u53d8\u65f6\u53ea\u51fa\u73b0\u5728 out \u4f4d\u7f6e\u4e0a\uff0c\u9006\u53d8\u65f6\u53ea\u51fa\u73b0\u5728 in \u4f4d\u7f6e\u4e0a\uff0c\u5c31\u4e0d\u4f1a\u5b58\u5728\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\u7684\u60c5\u51b5\u3002\u867d\u7136 @UnsafeVariance \u6ce8\u89e3\u53ef\u4ee5\u6253\u7834\u8fd9\u4e00\u8bed\u6cd5\u89c4\u5219\uff0c\u4f46\u540c\u65f6\u4e5f\u4f1a\u5e26\u6765\u989d\u5916\u7684\u98ce\u9669\uff0c\u6240\u4ee5\u4f60\u5728\u4f7f\u7528\u6ce8\u89e3\u65f6\uff0c\u5fc5\u987b\u5f88\u6e05\u695a\u81ea\u5df1\u5728\u5e72\u4ec0\u4e48\u3002 4.1 Comparable \u00b6 \u9006\u53d8\u529f\u80fd\u5728 Kotlin \u5185\u7f6e API \u4e2d\u7684\u5e94\u7528\uff0c\u6bd4\u8f83\u5178\u578b\u7684\u4f8b\u5b50\u5c31\u662f Comparable\uff0c\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u5927\u5c0f\u7684\u63a5\u53e3\uff1a interface Comparable < in T > { operator fun comparTo ( other : T ): Int } \u53ef\u4ee5\u770b\u5230\uff0cComparable\u5728 T \u8fd9\u4e2a\u6cdb\u578b\u4e0a\u5c31\u662f\u9006\u53d8\u7684\uff0c compareTo() \u65b9\u6cd5\u5219\u7528\u4e8e\u5b9e\u73b0\u5177\u4f53\u7684\u6bd4\u8f83\u903b\u8f91\u3002\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u8981\u8ba9 Comparable \u63a5\u53e3\u662f\u9006\u53d8\u7684\u5462\uff1f\u60f3\u8c61\u5982\u4e0b\u573a\u666f\uff1a\u5982\u679c\u4f7f\u7528 Comparable<Person> \u5b9e\u73b0\u4e86\u8ba9\u4e24\u4e2a Person \u5bf9\u8c61\u6bd4\u8f83\u5927\u5c0f\u7684\u903b\u8f91\uff08Person \u6bd4\u8f83\u5668\uff09\uff0c\u90a3\u4e48\u7528\u8fd9\u4e2a Person \u6bd4\u8f83\u5668\u53bb\u6bd4\u8f83\u4e24\u4e2a Student \u5bf9\u8c61\u7684\u5927\u5c0f\u4e5f\u4e00\u5b9a\u662f\u6210\u7acb\u7684\uff0c\u56e0\u6b64\u8ba9 Comparable<Person> \u6210\u4e3a Comparable<Student> \u7684\u5b50\u7c7b\u5408\u60c5\u5408\u7406\u3002 \u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u66f4\u4ed4\u7ec6\u8bb2\u4e00\u4e0b\uff1a fun main () { val personAntiAddiction = object : Comparable < Person > { override fun compareTo ( other : Person ): Int = if ( other . age >= 18 ) 1 else 0 } isStuMature ( personAntiAddiction ) } fun isStuMature ( studentAntiAddiction : Comparable < Student > ) { val student = Student ( \"Alice\" , 18 ) val result = studentAntiAddiction . compareTo ( student ) when ( result ) { 0 -> println ( \"Student ${ student . name } is still underage.\" ) else -> println ( \"Student ${ student . name } is an adult.\" ) } } \u9996\u5148\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u533f\u540d\u5bf9\u8c61 personAntiAddiction \uff08\u201c\u4eba\u7c7b\u9632\u6c89\u8ff7\u5668\u201d\uff09\uff0c\u5b9e\u73b0 Comparable \u63a5\u53e3\u5e76\u5728 compareTo \u4e2d\u5224\u65ad Person \u662f\u5426\u6210\u5e74\uff0c\u6210\u5e74\u5c31\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0\u3002\u6211\u4eec\u8fd8\u521b\u5efa\u4e86\u4e00\u4e2a isStuMature() \u65b9\u6cd5\uff0c\u63a5\u6536\u4e00\u4e2a\u201c\u5b66\u751f\u9632\u6c89\u8ff7\u5668\u201d\u5e76\u5229\u7528\u5b83\u6765\u5224\u65ad\u4e00\u4e2a Student \u662f\u5426\u5df2\u7ecf\u6210\u5e74\u5e76\u6253\u5370\u7ed3\u679c\u3002\u6211\u4eec\u628a\u201c\u4eba\u7c7b\u9632\u6c89\u8ff7\u5668\u201d\u4f20\u9012\u7ed9 isStuMature() \uff0c\u56e0\u4e3a\u5b66\u751f\u4e5f\u662f\u4eba\uff0c\u6240\u4ee5\u4f7f\u7528\u201c\u4eba\u7c7b\u9632\u6c89\u8ff7\u5668\u201d\u53bb\u5224\u65ad\u5b66\u751f\u662f\u5426\u6210\u5e74\u5b8c\u5168\u662f\u6ca1\u95ee\u9898\u7684\u3002","title":"\u6cdb\u578b\u7684\u9ad8\u7ea7\u7279\u5f81"},{"location":"Kotlin/%E6%B3%9B%E5%9E%8B%E7%9A%84%E9%AB%98%E7%BA%A7%E7%89%B9%E5%BE%81/#_1","text":"","title":"\u6cdb\u578b\u7684\u9ad8\u7ea7\u7279\u5f81"},{"location":"Kotlin/%E6%B3%9B%E5%9E%8B%E7%9A%84%E9%AB%98%E7%BA%A7%E7%89%B9%E5%BE%81/#1","text":"\u8981\u6df1\u523b\u7406\u89e3\u6cdb\u578b\u5b9e\u5316\uff0c\u6211\u4eec\u5f97\u5148\u89e3\u91ca\u4e00\u4e0b Java \u7684\u6cdb\u578b\u64e6\u9664\u673a\u5236\uff08\u867d\u7136 Java \u4e2d\u6ca1\u6709\u6cdb\u578b\u5b9e\u5316\u7684\u6982\u5ff5\uff09","title":"1. \u6cdb\u578b\u5b9e\u5316"},{"location":"Kotlin/%E6%B3%9B%E5%9E%8B%E7%9A%84%E9%AB%98%E7%BA%A7%E7%89%B9%E5%BE%81/#11-java","text":"\u5728 JDK 1.5 \u4e4b\u524d\uff0cJava\u662f\u6ca1\u6709\u6cdb\u578b\u529f\u80fd\u7684\uff0c\u5f7c\u65f6\u8bf8\u5982 List \u4e4b\u7c7b\u7684\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u7684\u6570\u636e\uff0c\u53d6\u51fa\u6570\u636e\u7684\u65f6\u5019\u4e5f\u9700\u8981\u624b\u52a8\u5411\u4e0b\u8f6c\u578b\u624d\u884c\u3002\u76f4\u5230 JDK 1.5\uff0cJava \u624d\u5f15\u5165\u6cdb\u578b\u529f\u80fd\u3002 Java \u7684\u6cdb\u578b\u529f\u80fd\u662f\u901a\u8fc7\u7c7b\u578b\u64e6\u9664\u673a\u5236\u6765\u5b9e\u73b0\u7684\u3002\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u5c31\u662f\u8bf4\u6cdb\u578b\u5bf9\u4e8e\u7c7b\u578b\u7684\u7ea6\u675f\u53ea\u5728\u7f16\u8bd1\u65f6\u671f\u5b58\u5728\uff0c\u8fd0\u884c\u65f6\u4ecd\u7136\u4f1a\u6309\u7167 JDK 1.5\u4e4b\u524d\u7684\u673a\u5236\u6765\u8fd0\u884c\uff0cJVM \u662f\u8bc6\u522b\u4e0d\u51fa\u6765\u6211\u4eec\u5728\u4ee3\u7801\u4e2d\u6307\u5b9a\u7684\u6cdb\u578b\u7c7b\u578b\u7684\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2aList\\ \u96c6\u5408\uff0c\u867d\u7136\u5728\u7f16\u8bd1\u65f6\u671f\u53ea\u80fd\u5411\u96c6\u5408\u4e2d\u6dfb\u52a0\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u5143\u7d20\uff0c\u4f46\u662f\u5728\u8fd0\u884c\u65f6\u671f JVM\u5e76\u4e0d\u80fd\u77e5\u9053\u5b83\u672c\u6765\u53ea\u6253\u7b97\u5305\u542b\u54ea\u79cd\u7c7b\u578b\u7684\u5143\u7d20\uff0c\u53ea\u80fd\u8bc6\u522b\u51fa\u6765\u5b83\u662f\u4e2a List\u3002 \u6240\u6709\u57fa\u4e8e JVM \u7684\u8bed\u8a00\uff0c\u5b83\u4eec\u7684\u6cdb\u578b\u529f\u80fd\u90fd\u662f\u901a\u8fc7\u7c7b\u578b\u64e6\u9664\u673a\u5236\u6765\u5b9e\u73b0\u7684\uff0c\u5176\u4e2d\u5f53\u7136\u4e5f\u5305\u62ec\u4e86 Kotlin\u3002\u8fd9\u79cd\u673a\u5236\u4f7f\u5f97\u6211\u4eec\u4e0d\u53ef\u80fd\u4f7f\u7528 a is T \u6216\u8005 T::class.java \u8fd9\u6837\u7684\u8bed\u6cd5\uff0c\u56e0\u4e3a T \u7684\u5b9e\u9645\u7c7b\u578b\u5728\u8fd0\u884c\u7684\u65f6\u5019\u5df2\u7ecf\u88ab\u64e6\u9664\u4e86\u3002","title":"1.1 Java \u7684\u6cdb\u578b\u64e6\u9664\u673a\u5236"},{"location":"Kotlin/%E6%B3%9B%E5%9E%8B%E7%9A%84%E9%AB%98%E7%BA%A7%E7%89%B9%E5%BE%81/#12","text":"Kotlin \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5185\u8054\u51fd\u6570\u7684\u6982\u5ff5\u3002\u5185\u8054\u51fd\u6570\u4e2d\u7684\u4ee3\u7801\u4f1a\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u81ea\u52a8\u88ab\u66ff\u6362\u5230\u8c03\u7528\u5b83\u7684\u5730\u65b9\uff0c\u8fd9\u6837\u7684\u8bdd\u4e5f\u5c31\u4e0d\u5b58\u5728\u4ec0\u4e48\u6cdb\u578b\u64e6\u9664\u7684\u95ee\u9898\u4e86\uff0c\u56e0\u4e3a\u4ee3\u7801\u5728\u7f16\u8bd1\u4e4b\u540e\u4f1a\u76f4\u63a5\u4f7f\u7528\u5b9e\u9645\u7684\u7c7b\u578b\u6765\u66ff\u4ee3\u5185\u8054\u51fd\u6570\u4e2d\u7684\u6cdb\u578b\u58f0\u660e\u3002 \u6700\u7ec8\u4ee3\u7801\uff1a \u53ef\u4ee5\u770b\u5230\uff0c bar() \u662f\u4e00\u4e2a\u5e26\u6709\u6cdb\u578b\u7c7b\u578b\u7684\u5185\u8054\u51fd\u6570\uff0c foo() \u8c03\u7528\u4e86 bar() \u51fd\u6570\uff0c\u5728\u4ee3\u7801\u7f16\u8bd1\u4e4b\u540e\uff0c bar() \u4e2d\u7684\u4ee3\u7801\u5c06\u53ef\u4ee5\u83b7\u5f97\u6cdb\u578b\u7684\u5b9e\u9645\u7c7b\u578b\u3002\u8fd9\u5c31\u610f\u5473\u7740\uff0cKotlin \u4e2d\u662f\u53ef\u4ee5\u5c06\u5185\u8054\u51fd\u6570\u4e2d\u7684\u6cdb\u578b\u8fdb\u884c\u5b9e\u5316\u7684\u3002","title":"1.2 \u5185\u8054\u51fd\u6570\u5bf9\u6cdb\u578b\u7684\u5f71\u54cd"},{"location":"Kotlin/%E6%B3%9B%E5%9E%8B%E7%9A%84%E9%AB%98%E7%BA%A7%E7%89%B9%E5%BE%81/#13","text":"\u5177\u4f53\u600e\u4e48\u5199\u624d\u80fd\u5c06\u6cdb\u578b\u5b9e\u5316\u5462\uff1f\u9996\u5148\uff0c\u8be5\u51fd\u6570\u5fc5\u987b\u662f\u5185\u8054\u51fd\u6570\u624d\u884c\uff0c\u4e5f\u5c31\u662f\u8981\u7528 inline \u5173\u952e\u5b57\u6765\u4fee\u9970\u8be5\u51fd\u6570\u3002\u5176\u6b21\uff0c\u5728\u58f0\u660e\u6cdb\u578b\u7684\u5730\u65b9\u5fc5\u987b\u52a0\u4e0a reified \u5173\u952e\u5b57\u6765\u8868\u793a\u8be5\u6cdb\u578b\u8981\u8fdb\u884c\u5b9e\u5316\uff1a inline fun < reified T > getGenericType (){ } \u4e0a\u8ff0\u51fd\u6570\u4e2d\u7684\u6cdb\u578b T \u5c31\u662f\u4e00\u4e2a\u88ab\u5b9e\u5316\u7684\u6cdb\u578b\uff0c\u56e0\u4e3a\u5b83\u6ee1\u8db3\u4e86 \u5185\u8054\u51fd\u6570 \u548c reified \u5173\u952e\u5b57\u8fd9\u4e24\u4e2a\u524d\u63d0\u6761\u4ef6\u3002\u90a3\u4e48\u501f\u52a9\u6cdb\u578b\u5b9e\u5316\uff0c\u5230\u5e95\u53ef\u4ee5\u5b9e\u73b0\u4ec0\u4e48\u6837\u7684\u6548\u679c\u5462\uff1f\u4ece\u51fd\u6570\u540d\u5c31\u53ef\u4ee5\u770b\u51fa\u6765\u4e86\uff0c\u8fd9\u91cc\u6211\u4eec\u51c6\u5907\u5b9e\u73b0\u4e00\u4e2a\u83b7\u53d6\u6cdb\u578b\u5b9e\u9645\u7c7b\u578b\u7684\u529f\u80fd\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a inline fun < reified T > getGenericType () = T :: class . java \u867d\u7136\u53ea\u6709\u4e00\u884c\u4ee3\u7801\uff0c\u4f46\u662f\u8fd9\u91cc\u5374\u5b9e\u73b0\u4e86\u4e00\u4e2a Java \u4e2d\u5b8c\u5168\u4e0d\u53ef\u80fd\u5b9e\u73b0\u7684\u529f\u80fd\uff1a getGenericType() \u76f4\u63a5\u8fd4\u56de\u4e86\u5f53\u524d\u6307\u5b9a\u6cdb\u578b\u7684\u5b9e\u9645\u7c7b\u578b\u3002 T.class \u8fd9\u6837\u7684\u8bed\u6cd5\u5728Java\u4e2d\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u800c\u5728 Kotlin \u4e2d\uff0c\u501f\u52a9\u6cdb\u578b\u5b9e\u5316\u529f\u80fd\u5c31\u53ef\u4ee5\u4f7f\u7528 T::class.java \u8fd9\u6837\u7684\u8bed\u6cd5\u4e86\u3002","title":"1.3 \u5177\u4f53\u5b9e\u73b0"},{"location":"Kotlin/%E6%B3%9B%E5%9E%8B%E7%9A%84%E9%AB%98%E7%BA%A7%E7%89%B9%E5%BE%81/#2","text":"Android \u7684\u56db\u5927\u7ec4\u4ef6\u9664\u4e86 ContentProvider \u4e4b\u5916\uff0c\u5176\u4f59\u76843\u4e2a\u7ec4\u4ef6\u6709\u4e00\u4e2a\u5171\u540c\u7684\u7279\u70b9\uff1a\u90fd\u8981\u7ed3\u5408 Intent \u4e00\u8d77\u4f7f\u7528\u3002 val intent = Intent ( context , TestActivity :: class . java ) context . startActivity ( intent ) \u6709\u6ca1\u6709\u89c9\u5f97 TestActivity::class.java \u8fd9\u6837\u7684\u8bed\u6cd5\u5f88\u96be\u53d7\u5462\uff1fKotlin \u7684\u6cdb\u578b\u5b9e\u5316\u529f\u80fd\u4f7f\u5f97\u6211\u4eec\u62e5\u6709\u4e86\u66f4\u597d\u7684\u9009\u62e9\u3002 inline fun < reified T > startActivity ( context : Context ){ val intent = Intent ( context , T :: class . java ) context . startActivity ( intent ) } \u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a startActivity() \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u63a5\u6536\u4e00\u4e2a Context \u53c2\u6570\uff0c\u5e76\u540c\u65f6\u4f7f\u7528 inline \u548c reified \u5173\u952e\u5b57\u8ba9\u6cdb\u578b T \u6210\u4e3a\u4e86\u4e00\u4e2a\u88ab\u5b9e\u5316\u7684\u6cdb\u578b\u3002\u63a5\u4e0b\u6765\u5c31\u662f\u795e\u5947\u7684\u5730\u65b9\u4e86\uff0cIntent \u63a5\u6536\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u672c\u6765\u5e94\u8be5\u662f\u4e00\u4e2a\u5177\u4f53 Activity\u7684 Class \u7c7b\u578b\uff0c\u4f46\u7531\u4e8e\u73b0\u5728 T \u5df2\u7ecf\u662f\u4e00\u4e2a\u88ab\u5b9e\u5316\u7684\u6cdb\u578b\u4e86\uff0c\u56e0\u6b64\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f20\u5165 T::class.java \u3002\u6700\u540e\u8c03\u7528 Context \u7684 startActivity() \u6765\u5b8c\u6210 Activity \u7684\u542f\u52a8\u3002\u73b0\u5728\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u542f\u52a8 TestActivity\uff0c\u53ea\u9700\u8981\u8fd9\u6837\u5199\u5c31\u53ef\u4ee5\u4e86\uff1a startActivity < TestActivity > ( context ) Kotlin \u5c06\u80fd\u591f\u8bc6\u522b\u51fa\u6307\u5b9a\u6cdb\u578b\u7684\u5b9e\u9645\u7c7b\u578b\uff0c\u5e76\u542f\u52a8\u76f8\u5e94\u7684 Activity\u3002 \u4e0d\u8fc7\uff0c\u73b0\u5728\u7684 startActivity() \u51fd\u6570\u5176\u5b9e\u8fd8\u662f\u6709\u95ee\u9898\u7684\uff0c\u56e0\u4e3a\u901a\u5e38\u5728\u542f\u7528 Activity \u7684\u65f6\u5019\u8fd8\u53ef\u80fd\u4f1a\u4f7f\u7528 Intent \u9644\u5e26\u4e00\u4e9b\u53c2\u6570\uff0c\u6bd4\u5982\uff1a intent.putExtra(\"param1\", 123) \uff0c\u7ecf\u8fc7\u521a\u624d\u7684\u5c01\u88c5\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u65e0\u6cd5\u8fdb\u884c\u4f20\u53c2\u4e86\u3002 \u5176\u5b9e\u4e5f\u4e0d\u96be\u89e3\u51b3\uff0c\u53ea\u9700\u8981\u501f\u52a9\u9ad8\u9636\u51fd\u6570\u5c31\u53ef\u4ee5\u8f7b\u677e\u641e\u5b9a\u3002\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684 startActivity() \u51fd\u6570\u91cd\u8f7d\uff0c\u5982\u4e0b\u6240\u793a\uff1a inline fun < reified T > startActivity ( context : Context , block : Intent .() -> Unit ){ val intent = Intent ( context , T :: class . java ) intent . block () context . startActivity ( intent ) } \u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u6b21\u7684 startActivity() \u51fd\u6570\u4e2d\u589e\u52a0\u4e86\u4e00\u4e2a\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff0c\u5e76\u4e14\u5b83\u7684\u51fd\u6570\u7c7b\u578b\u662f\u5b9a\u4e49\u5728 Intent \u7c7b\u5f53\u4e2d\u7684\u3002\u5728\u521b\u5efa\u5b8c Intent \u5b9e\u4f8b\u540e\uff0c\u968f\u5373\u8c03\u7528\u8be5\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff0c\u5e76\u628a Intent \u5b9e\u4f8b\u4f20\u5165\uff0c\u8fd9\u6837\u8c03\u7528 startActivity() \u51fd\u6570\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u5728 Lambda \u8868\u8fbe\u5f0f\u4e2d\u4e3a Intent \u4f20\u9012\u53c2\u6570\u4e86\uff0c\u5982\u4e0b\u6240\u793a\uff1a startActivity < TestActivity > ( context ) { putExtra ( \"param1\" , 123 ) }","title":"2. \u6cdb\u578b\u5b9e\u5316\u7684\u5e94\u7528"},{"location":"Kotlin/%E6%B3%9B%E5%9E%8B%E7%9A%84%E9%AB%98%E7%BA%A7%E7%89%B9%E5%BE%81/#3","text":"\u5b66\u4e60\u534f\u53d8\u548c\u9006\u53d8\u524d\uff0c\u5148\u5f97\u5148\u4e86\u89e3\u4e00\u4e2a\u7ea6\u5b9a\u3002\u4e00\u4e2a \u6cdb\u578b\u7c7b\u6216\u8005\u6cdb\u578b\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5 \uff0c\u5b83\u7684\u53c2\u6570\u5217\u8868\u662f\u63a5\u6536\u6570\u636e\u7684\u5730\u65b9\uff0c\u79f0\u4e3a in \u4f4d\u7f6e\uff0c\u800c\u5b83\u7684\u8fd4\u56de\u503c\u662f\u8f93\u51fa\u6570\u636e\u7684\u5730\u65b9\uff0c\u79f0\u4e3a out \u4f4d\u7f6e\uff1a \u597d\uff0c\u6709\u4e86\u8fd9\u4e2a\u7ea6\u5b9a\u524d\u63d0\uff0c\u6211\u4eec\u7ee7\u7eed\u3002 open class Person ( val name : String , val age : Int ) class Student ( name : String , age : Int ) : Person ( name , age ) class Teacher ( name : String , age : Int ) : Person ( name , age ) \u8fd9\u91cc\u9996\u5148\u5b9a\u4e49\u4e86\u4e00\u4e2a Person \u7c7b\uff0c\u7136\u540e\u53c8\u5b9a\u4e49\u4e86 Student \u548c Teacher \u8fd9\u4e24\u4e2a\u7c7b\u4f5c\u4e3a Person \u7c7b\u7684\u5b50\u7c7b\u3002\u8fd9\u65f6\u5982\u679c\u67d0\u4e2a\u65b9\u6cd5\u63a5\u6536\u4e00\u4e2a List<Person> \u7c7b\u578b\u7684\u53c2\u6570\uff0c\u800c\u6211\u4eec\u4f20\u5165\u4e00\u4e2a List<Student> \u7684\u5b9e\u4f8b\uff0c\u8fd9\u6837\u5408\u4e0d\u5408\u6cd5\u5462\uff1fJava \u4e2d\u662f\u4e0d\u5141\u8bb8\u7684\uff0c\u56e0\u4e3a List<Student> \u4e0d\u80fd\u6210\u4e3a List<Person> \u7684\u5b50\u7c7b\uff0c\u5426\u5219\u5c06\u53ef\u80fd\u5b58\u5728\u7c7b\u578b\u8f6c\u6362\u7684\u5b89\u5168\u9690\u60a3\u3002\u4e0b\u9762\u6211\u4eec\u7528\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\u8fdb\u884c\u8bf4\u660e\u3002\u8fd9\u91cc\u81ea\u5b9a\u4e49\u4e00\u4e2a SimpleData \u7c7b\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a class SimpleData < T > { private var data : T? = null fun set ( t : T?) { data = t } fun get () = data } \u63a5\u7740\u6211\u4eec \u5047\u8bbe \uff0c\u5982\u679c\u7f16\u7a0b\u8bed\u8a00\u5141\u8bb8\u5411\u67d0\u4e2a\u63a5\u6536 SimpleData<Person> \u53c2\u6570\u7684\u65b9\u6cd5\u4f20\u5165 SimpleData<Student> \u7684\u5b9e\u4f8b\uff0c\u90a3\u4e48\u5982\u4e0b\u4ee3\u7801\u5c31\u4f1a\u662f\u5408\u6cd5\u7684\uff1a fun main () { val student = Student ( \"Tom\" , 18 ) val data = SimpleData < Student > () data . set ( student ) handleSimpleData ( data ) // \u5b9e\u9645\u4e0a\u8fd9\u884c\u4f1a\u62a5\u9519 val studentData = data . get () } fun handleSimpleData ( data : SimpleData < Person > ) { val teacher = Teacher ( \"Mike\" , 35 ) data . set ( teacher ) } \u5728main() \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a Student \u7684\u5b9e\u4f8b\uff0c\u5c06\u5b83\u5c01\u88c5\u5230 SimpleData<Student> \u4e2d\u5e76\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9 handleSimpleData(data: SimpleData<Person>) \u65b9\u6cd5\u3002\uff08\u8fd9\u91cc\u5047\u8bbe\u53ef\u4ee5\u7f16\u8bd1\u901a\u8fc7\uff09\u3002 \u90a3\u4e48\u5728 handleSimpleData() \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a Teacher \u7684\u5b9e\u4f8b\uff0c\u5e76\u7528\u5b83\u6765\u66ff\u6362 SimpleData<Person> \u53c2\u6570\u4e2d\u7684\u539f\u6709\u6570\u636e\u3002\u8fd9\u79cd\u64cd\u4f5c\u80af\u5b9a\u662f\u5408\u6cd5\u7684\uff0c\u56e0\u4e3a Teacher \u4e5f\u662f Person \u7684\u5b50\u7c7b\u3002\u4f46\u662f\u95ee\u9898\u9a6c\u4e0a\u6765\u4e86\uff0c\u56de\u5230 main() \u65b9\u6cd5\u5f53\u4e2d\uff0c\u6211\u4eec\u8c03\u7528 SimpleData<Student> \u7684 get() \u65b9\u6cd5\u6765\u83b7\u53d6\u5b83\u5185\u90e8\u5c01\u88c5\u7684 Student \u6570\u636e\uff0c\u53ef\u73b0\u5728 SimpleData<Student> \u4e2d\u5b9e\u9645\u5305\u542b\u7684\u5374\u662f\u4e00\u4e2a Teacher \u7684\u5b9e\u4f8b\uff0c\u90a3\u4e48\u6b64\u65f6\u5fc5\u7136\u4f1a\u4ea7\u751f\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\u3002\u6240\u4ee5\uff0c\u4e3a\u4e86\u675c\u7edd\u8fd9\u79cd\u5b89\u5168\u9690\u60a3\uff0cJava \u662f\u4e0d\u5141\u8bb8\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u6765\u4f20\u9012\u53c2\u6570\u7684\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u5373\u4f7f Student \u662f Person \u7684\u5b50\u7c7b\uff0cSimpleData<Student> \u5e76\u4e0d\u662f SimpleData<Person> \u7684\u5b50\u7c7b\u3002 \u56de\u987e\u4e00\u4e0b\u521a\u624d\u7684\u4ee3\u7801\uff0c\u95ee\u9898\u53d1\u751f\u7684\u4e3b\u8981\u539f\u56e0\u662f\u5728 handleSimpleData() \u65b9\u6cd5\u4e2d\u5411 SimpleData<Person> \u91cc\u8bbe\u7f6e\u4e86\u4e00\u4e2a Teacher \u7684\u5b9e\u4f8b\u3002\u5982\u679c SimpleData \u5728\u6cdb\u578b T \u4e0a\u662f\u53ea\u8bfb\u7684\u8bdd\uff0c\u80af\u5b9a\u5c31\u6ca1\u6709\u7c7b\u578b\u8f6c\u6362\u7684\u5b89\u5168\u9690\u60a3\u4e86\uff0c\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u540e SimpleData<Student> \u53ef\u4e0d\u53ef\u4ee5\u6210\u4e3a SimpleData<Person> \u7684\u5b50\u7c7b\u5462\uff1f\u8bb2\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u7ec8\u4e8e\u8981\u5f15\u51fa\u6cdb\u578b\u534f\u53d8\u7684\u5b9a\u4e49\u4e86\uff1a \u5047\u5982\u5b9a\u4e49\u4e86\u4e00\u4e2a MyClass<T> \u7684\u6cdb\u578b\u7c7b\uff0c\u5176\u4e2d A \u662f B \u7684\u5b50\u7c7b\uff0c\u540c\u65f6 MyClass<A> \u53c8\u662f MyClass<B> \u7684\u5b50\u7c7b\u578b\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u79f0 MyClass \u5728 T \u8fd9\u4e2a\u6cdb\u578b\u4e0a\u662f\u534f\u53d8\u7684\u3002 \u8ba9 A \u662f B \u7684\u5b50\u7c7b\u5f88\u7b80\u5355\uff0c\u4f46\u5982\u4f55\u624d\u80fd\u8ba9 MyClass<A> \u6210\u4e3a MyClass<B> \u7684\u5b50\u7c7b\u578b\u5462\uff1f\u521a\u624d\u5df2\u7ecf\u8bb2\u4e86\uff0c\u5982\u679c\u4e00\u4e2a\u6cdb\u578b\u7c7b\u5728\u5176\u6cdb\u578b\u7c7b\u578b\u7684\u6570\u636e\u4e0a\u662f\u53ea\u8bfb\u7684\u8bdd\uff0c\u90a3\u4e48\u5b83\u662f\u6ca1\u6709\u7c7b\u578b\u8f6c\u6362\u5b89\u5168\u9690\u60a3\u7684\u3002\u800c\u8981\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u5219\u9700\u8981\u8ba9 MyClass<T> \u7c7b\u4e2d\u7684\u6240\u6709\u65b9\u6cd5\u90fd\u4e0d\u80fd\u63a5\u6536 T \u7c7b\u578b\u7684\u53c2\u6570\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0cT \u53ea\u80fd\u51fa\u73b0\u5728 out \u4f4d\u7f6e\u4e0a\uff0c\u800c\u4e0d\u80fd\u51fa\u73b0\u5728 in \u4f4d\u7f6e\u4e0a\u3002\u73b0\u5728\u4fee\u6539 SimpleData \u7c7b\u7684\u4ee3\u7801\uff1a class SimpleData < out T > ( val data : T?) { fun get () = data } \u5728\u6cdb\u578b T \u7684\u58f0\u660e\u524d\u9762\u52a0\u4e0a\u4e86\u4e00\u4e2a out \u5173\u952e\u5b57\u3002\u8fd9\u5c31\u610f\u5473\u7740\u73b0\u5728 T \u53ea\u80fd\u51fa\u73b0\u5728 out \u4f4d\u7f6e\u4e0a\uff0c\u800c\u4e0d\u80fd\u51fa\u73b0\u5728 in \u4f4d\u7f6e\u4e0a\uff0c\u540c\u65f6\u4e5f\u610f\u5473\u7740 SimpleData \u5728\u6cdb\u578b T \u4e0a\u662f\u534f\u53d8\u7684\u3002 \u7531\u4e8e\u6cdb\u578b T \u4e0d\u80fd\u51fa\u73b0\u5728 in \u4f4d\u7f6e\u4e0a\uff0c\u56e0\u6b64\u6211\u4eec\u4e5f\u5c31\u4e0d\u80fd\u4f7f\u7528 set() \u65b9\u6cd5\u4e3a data \u53c2\u6570\u8d4b\u503c\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u6539\u6210\u4e86\u4f7f\u7528\u6784\u9020\u51fd\u6570\u7684\u65b9\u5f0f\u6765\u8d4b\u503c\u3002\u4f60\u53ef\u80fd\u4f1a\u8bf4\uff0c\u6784\u9020\u51fd\u6570\u4e2d\u7684\u6cdb\u578b T \u4e0d\u4e5f\u662f\u5728in\u4f4d\u7f6e\u4e0a\u7684\u5417\uff1f\u6ca1\u9519\uff0c\u4f46\u662f\u7531\u4e8e\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u4e86 val \u5173\u952e\u5b57\uff0c\u6240\u4ee5\u6784\u9020\u51fd\u6570\u4e2d\u7684\u6cdb\u578b T \u4ecd\u7136\u662f\u53ea\u8bfb\u7684\uff0c\u56e0\u6b64\u8fd9\u6837\u5199\u662f\u5408\u6cd5\u4e14\u5b89\u5168\u7684\u3002\u53e6\u5916\uff0c\u5373\u4f7f\u4f7f\u7528 var \u5173\u952e\u5b57\uff0c\u4f46\u53ea\u8981\u7ed9\u5b83\u52a0\u4e0a private \u4fee\u9970\u7b26\uff0c\u4fdd\u8bc1\u8fd9\u4e2a\u6cdb\u578b T \u5bf9\u4e8e\u5916\u90e8\u800c\u8a00\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff0c\u90a3\u4e48\u5c31\u90fd\u662f\u5408\u6cd5\u7684\u3002 fun main () { val student = Student ( \"Tom\" , 18 ) val data = SimpleData < Student > () data . set ( student ) handleSimpleData ( data ) val studentData = data . get () } fun handleSimpleData ( data : SimpleData < Person > ) { val personData = data . set ( teacher ) } \u7531\u4e8e SimpleData \u7c7b\u5df2\u7ecf\u8fdb\u884c\u4e86\u534f\u53d8\u58f0\u660e\uff0c\u90a3\u4e48 SimpleData<Student> \u81ea\u7136\u5c31\u662f SimpleData<Person> \u7684\u5b50\u7c7b\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u53ef\u4ee5\u5b89\u5168\u5730\u5411 handleMyData(data: SimpleData<Person>) \u65b9\u6cd5\u4e2d\u4f20\u9012 SimpleData<Student> \u3002\u7136\u540e\u5728 handleMyData() \u65b9\u6cd5\u4e2d\u53bb\u83b7\u53d6 SimpleData \u5c01\u88c5\u7684\u6570\u636e\uff0c\u867d\u7136\u8fd9\u91cc\u6cdb\u578b\u58f0\u660e\u7684\u662f Person \u7c7b\u578b\uff0c\u5b9e\u9645\u83b7\u5f97\u7684\u4f1a\u662f\u4e00\u4e2a Student \u7684\u5b9e\u4f8b\uff0c\u4f46\u7531\u4e8e Person \u662f Student \u7684\u7236\u7c7b\uff0c\u5411\u4e0a\u8f6c\u578b\u662f\u5b8c\u5168\u5b89\u5168\u7684\uff0c\u6240\u4ee5\u8fd9\u6bb5\u4ee3\u7801\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\u3002","title":"3. \u6cdb\u578b\u7684\u534f\u53d8"},{"location":"Kotlin/%E6%B3%9B%E5%9E%8B%E7%9A%84%E9%AB%98%E7%BA%A7%E7%89%B9%E5%BE%81/#31-list","text":"\u524d\u9762\u63d0\u5230\uff0c\u5982\u679c\u67d0\u4e2a\u65b9\u6cd5\u63a5\u6536\u4e00\u4e2a List<Person> \u7c7b\u578b\u7684\u53c2\u6570\uff0c\u800c\u4f20\u5165\u7684\u5374\u662f\u4e00\u4e2a List<Student> \u7684\u5b9e\u4f8b\uff0c \u5728 Java \u4e2d\u662f\u4e0d\u5141\u8bb8\u7684\u3002\u4f46\u5728 Kotlin \u4e2d\u8fd9\u4e48\u505a\u662f\u5408\u6cd5\u7684\uff0c\u56e0\u4e3a Kotlin \u5df2\u7ecf\u9ed8\u8ba4\u7ed9\u8bb8\u591a\u5185\u7f6e\u7684 API \u52a0\u4e0a\u4e86\u534f\u53d8\u58f0\u660e\uff0c\u5176\u4e2d\u5c31\u5305\u62ec\u4e86\u5404\u79cd\u96c6\u5408\u7684\u7c7b\u4e0e\u63a5\u53e3\u3002Kotlin \u4e2d\u7684 List \u672c\u8eab\u5c31\u662f\u53ea\u8bfb\u7684\uff0c\u5982\u679c\u4f60\u60f3\u8981\u7ed9 List \u6dfb\u52a0\u6570\u636e\uff0c\u9700\u8981\u4f7f\u7528 MutableList \u624d\u884c\u3002\u65e2\u7136 List \u662f\u53ea\u8bfb\u7684\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u5b83\u5929\u7136\u5c31\u662f\u53ef\u4ee5\u534f\u53d8\u7684\uff0c\u6211\u4eec\u6765\u770b\u4e00\u4e0b List \u7b80\u5316\u7248\u7684\u6e90\u7801\uff1a public interface List < out E > : Collection < E > { overrride val size : Int overrride fun isEmpty (): Boolean override fun contains ( element : @UnsafeVariance E ): Boolean override fun iterator () : Iterator < E > public operator fun get ( index : Int ): E } List \u5728\u6cdb\u578b E \u7684\u524d\u9762\u52a0\u4e0a\u4e86 out \u5173\u952e\u5b57\uff0c\u8bf4\u660e List \u5728\u6cdb\u578b E \u4e0a\u662f\u534f\u53d8\u7684\u3002\u539f\u5219\u4e0a\u5728\u58f0\u660e\u4e86\u534f\u53d8\u4e4b\u540e\uff0c\u6cdb\u578b E \u5c31\u53ea\u80fd\u51fa\u73b0\u5728 out \u4f4d\u7f6e\u4e0a\uff0c\u53ef\u662f\u5728 contains() \u65b9\u6cd5\u4e2d\uff0c\u6cdb\u578b E \u4ecd\u7136\u51fa\u73b0\u5728\u4e86 in \u4f4d\u7f6e\u4e0a\u3002\u8fd9\u4e48\u5199\u672c\u8eab\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u56e0\u4e3a\u5728in\u4f4d\u7f6e\u4e0a\u51fa\u73b0\u4e86\u6cdb\u578bE\u5c31\u610f\u5473\u7740\u4f1a\u6709\u7c7b\u578b\u8f6c\u6362\u7684\u5b89\u5168\u9690\u60a3\u3002\u4f46\u662f contains() \u65b9\u6cd5\u7684\u76ee\u7684\u975e\u5e38\u660e\u786e\uff0c\u5b83\u53ea\u662f\u4e3a\u4e86\u5224\u65ad\u5f53\u524d\u96c6\u5408\u4e2d\u662f\u5426\u5305\u542b\u53c2\u6570\u4e2d\u4f20\u5165\u7684\u8fd9\u4e2a\u5143\u7d20\uff0c\u800c\u5e76\u4e0d\u4f1a\u4fee\u6539\u5f53\u524d\u96c6\u5408\u4e2d\u7684\u5185\u5bb9\uff0c\u56e0\u6b64\u8fd9\u79cd\u64cd\u4f5c\u5b9e\u8d28\u4e0a\u53c8\u662f\u5b89\u5168\u7684\u3002\u4e3a\u4e86\u8ba9\u7f16\u8bd1\u5668\u80fd\u591f\u7406\u89e3\u6211\u4eec\u7684\u8fd9\u79cd\u64cd\u4f5c\u662f\u5b89\u5168\u7684\uff0c\u8fd9\u91cc\u5728\u6cdb\u578b E \u7684\u524d\u9762\u53c8\u52a0\u4e0a\u4e86\u4e00\u4e2a @UnsafeVariance \u6ce8\u89e3\uff0c\u8fd9\u6837\u7f16\u8bd1\u5668\u5c31\u4f1a\u5141\u8bb8\u6cdb\u578b E \u51fa\u73b0\u5728in\u4f4d\u7f6e\u4e0a\u4e86\u3002\u5982\u679c\u6ee5\u7528\u8fd9\u4e2a\u529f\u80fd\uff0c\u5bfc\u81f4\u8fd0\u884c\u65f6\u51fa\u73b0\u4e86\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\uff0cKotlin \u5bf9\u6b64\u662f\u4e0d\u8d1f\u8d23\u7684\u3002","title":"3.1 List"},{"location":"Kotlin/%E6%B3%9B%E5%9E%8B%E7%9A%84%E9%AB%98%E7%BA%A7%E7%89%B9%E5%BE%81/#4","text":"\u5047\u5982\u5b9a\u4e49\u4e86\u4e00\u4e2a MyClass<T> \u7684\u6cdb\u578b\u7c7b\uff0c\u5176\u4e2d A \u662f B \u7684\u5b50\u7c7b\u578b\uff0c\u540c\u65f6 MyClass<B> \u53c8\u662f MyClass<A> \u7684\u5b50\u7c7b\u578b\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u79f0 MyClass \u5728 T \u8fd9\u4e2a\u6cdb\u578b\u4e0a\u662f\u9006\u53d8\u7684\u3002 \u4ec5\u4ece\u5b9a\u4e49\u4e0a\u6765\u770b\uff0c\u9006\u53d8\u4e0e\u534f\u53d8\u5b8c\u5168\u76f8\u53cd\u3002 \u4ece\u76f4\u89c2\u7684\u89d2\u5ea6\u4e0a\u6765\u601d\u8003\uff0c\u9006\u53d8\u7684\u89c4\u5219\u597d\u50cf\u633a\u5947\u602a\u7684\uff0c\u539f\u672c A \u662f B \u7684\u5b50\u7c7b\u578b\uff0c\u600e\u4e48 MyClass<B> \u80fd\u53cd\u8fc7\u6765\u6210\u4e3a MyClass<A> \u7684\u5b50\u7c7b\u578b\u4e86\u5462\uff1f\u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\u6765\u5b66\u4e60\u4e00\u4e0b\u3002 interface Transformer < T > { fun transform ( t : T ): String } Transformer \u63a5\u53e3\u4e2d\u58f0\u660e\u4e86\u4e00\u4e2a transform() \u65b9\u6cd5\uff0c\u63a5\u6536\u4e00\u4e2a T \u7c7b\u578b\u7684\u53c2\u6570\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a String \u7c7b\u578b\u7684\u6570\u636e\uff0c\u8fd9\u610f\u5473\u7740\u53c2\u6570 T \u5728\u7ecf\u8fc7 transform() \u65b9\u6cd5\u7684\u8f6c\u6362\u4e4b\u540e\u5c06\u4f1a\u53d8\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u73b0\u5728\u6211\u4eec\u5c31\u5c1d\u8bd5\u5bf9\u63a5\u53e3\u8fdb\u884c\u5b9e\u73b0\uff1a fun main () { // Person \u8f6c\u6362\u5668 val trans = object : Transformer < Person > { override fun transform ( t : Person ): String = \" ${ t . name } ${ t . age } \" } handleTransformer ( trans ) // \u62a5\u9519 } // \u63a5\u6536\u4e00\u4e2a Student \u8f6c\u6362\u5668 fun handleTransformer ( trans : Transformer < Student > ) { val student = Student ( \"Tom\" , 20 ) val result = trans . transform ( student ) } \u9996\u5148\u5728 main() \u65b9\u6cd5\u4e2d\u7f16\u5199\u4e86\u4e00\u4e2a Transformer<Person> \u7684\u533f\u540d\u7c7b\u5b9e\u73b0\uff0c\u5e76\u901a\u8fc7 transform() \u65b9\u6cd5\u5c06\u4f20\u5165\u7684 Person \u5bf9\u8c61\u8f6c\u6362\u6210\u4e86\u4e00\u4e2a\u201c\u59d3\u540d+\u5e74\u9f84\u201d\u62fc\u63a5\u7684\u5b57\u7b26\u4e32\u3002 handleTransformer() \u65b9\u6cd5\u63a5\u6536\u7684\u662f Transformer<Student> \u7c7b\u578b\u7684\u53c2\u6570\uff0c\u8fd9\u91cc\u5728 handleTransformer() \u65b9\u6cd5\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a Student \u5bf9\u8c61\uff0c\u5e76\u8c03\u7528\u53c2\u6570\u7684 transform() \u65b9\u6cd5\u5c06 Student \u5bf9\u8c61\u8f6c\u6362\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u8fd9\u6bb5\u4ee3\u7801\u4ece\u5b89\u5168\u7684\u89d2\u5ea6\u6765\u5206\u6790\u662f\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\u7684\uff0c\u56e0\u4e3a Student \u662f Person \u7684\u5b50\u7c7b\uff0c\u4f7f\u7528 Transformer<Person> \u7684\u533f\u540d\u7c7b\u5b9e\u73b0\u5c06 Student \u5bf9\u8c61\u8f6c\u6362\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e5f\u662f\u7edd\u5bf9\u5b89\u5168\u7684\uff0c\u5e76\u4e0d\u5b58\u5728\u7c7b\u578b\u8f6c\u6362\u7684\u5b89\u5168\u9690\u60a3\u3002\u4f46\u662f\u5b9e\u9645\u4e0a\uff0c\u5728\u8c03\u7528 handleTransformer() \u65b9\u6cd5\u7684\u65f6\u5019\u5374\u4f1a\u63d0\u793a\u8bed\u6cd5\u9519\u8bef\uff0c\u539f\u56e0\u4e5f\u5f88\u7b80\u5355\uff0cTransformer<Person> \u5e76\u4e0d\u662f Transformer<Student> \u7684\u5b50\u7c7b\u578b\u3002 \u8fd9\u4e2a\u65f6\u5019\u9006\u53d8\u5c31\u53ef\u4ee5\u6d3e\u4e0a\u7528\u573a\u4e86\uff0c\u5b83\u5c31\u662f\u4e13\u95e8\u7528\u4e8e\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\u7684\u3002\u4fee\u6539 Transformer \u63a5\u53e3\u4e2d\u7684\u4ee3\u7801\uff1a interface Transformer < in T > { fun transform ( t : T ): String } \u6211\u4eec\u5728\u6cdb\u578b T \u7684\u58f0\u660e\u524d\u9762\u52a0\u4e0a\u4e86\u4e00\u4e2a in \u5173\u952e\u5b57\u3002\u8fd9\u5c31\u610f\u5473\u7740\u73b0\u5728 T \u53ea\u80fd\u51fa\u73b0\u5728 in \u4f4d\u7f6e\u4e0a\uff0c\u800c\u4e0d\u80fd\u51fa\u73b0\u5728 out \u4f4d\u7f6e\u4e0a\uff0c\u540c\u65f6\u4e5f\u610f\u5473\u7740 Transformer \u5728\u6cdb\u578b T \u4e0a\u662f\u9006\u53d8\u7684\u3002\u6ca1\u9519\uff0c\u53ea\u8981\u505a\u4e86\u8fd9\u6837\u4e00\u70b9\u4fee\u6539\uff0c\u521a\u624d\u7684\u4ee3\u7801\u5c31\u53ef\u4ee5\u7f16\u8bd1\u901a\u8fc7\u4e14\u6b63\u5e38\u8fd0\u884c\u4e86\uff0c\u56e0\u4e3a\u6b64\u65f6 Transformer<Person> \u5df2\u7ecf\u6210\u4e3a\u4e86 Transformer<Student> \u7684\u5b50\u7c7b\u578b\u3002\u9006\u53d8\u7684\u7528\u6cd5\u5927\u6982\u5c31\u662f\u8fd9\u6837\u3002 \u5982\u679c\u8fd8\u60f3\u518d\u6df1\u5165\u601d\u8003\u4e00\u4e0b\u7684\u8bdd\uff0c\u53ef\u4ee5\u60f3\u60f3\u4e3a\u4ec0\u4e48\u9006\u53d8\u7684\u65f6\u5019\u6cdb\u578bT\u4e0d\u80fd\u51fa\u73b0\u5728 out \u4f4d\u7f6e\u4e0a\uff1f\u4e3a\u4e86\u89e3\u91ca\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5148\u5047\u8bbe\u9006\u53d8\u662f\u5141\u8bb8\u8ba9\u6cdb\u578b T \u51fa\u73b0\u5728 out \u4f4d\u7f6e\u4e0a\u7684\uff0c\u7136\u540e\u770b\u4e00\u770b\u53ef\u80fd\u4f1a\u4ea7\u751f\u4ec0\u4e48\u6837\u7684\u5b89\u5168\u9690\u60a3\uff1a interface Transformer < in T > { fun transform ( name : String , age : Int ): @UnsafeVariance T } \u6211\u4eec\u5c06 transform() \u65b9\u6cd5\u6539\u6210\u4e86\u63a5\u6536 name \u548c age \u8fd9\u4e24\u4e2a\u53c2\u6570\uff0c\u5e76\u628a\u8fd4\u56de\u503c\u7c7b\u578b\u6539\u6210\u4e86\u6cdb\u578b T\u3002\u7531\u4e8e\u9006\u53d8\u662f\u4e0d\u5141\u8bb8\u6cdb\u578b T \u51fa\u73b0\u5728 out \u4f4d\u7f6e\u4e0a\u7684\uff0c\u8fd9\u91cc\u4e3a\u4e86\u80fd\u8ba9\u7f16\u8bd1\u5668\u6b63\u5e38\u7f16\u8bd1\u901a\u8fc7\uff0c\u6240\u4ee5\u52a0\u4e0a\u4e86 @UnsafeVariance \u6ce8\u89e3\u3002\u90a3\u4e48\uff0c\u8fd9\u4e2a\u65f6\u5019\u53ef\u80fd\u4f1a\u4ea7\u751f\u4ec0\u4e48\u6837\u7684\u5b89\u5168\u9690\u60a3\u5462\uff1f\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u5982\u4e0b\u4ee3\u7801\u5c31\u77e5\u9053\u4e86\uff1a fun main() { val trans = object: Transformer<Person> { override fun transform(name: String, age: Int): Person = Teacher(name, age) } handleTransformer(trans) } fun handleTransformer(trans: Transformer<Student>) { val result = trans.transform(\"Tom\", 19) } \u4e0a\u8ff0\u4ee3\u7801\u5c31\u662f\u4e00\u4e2a\u5178\u578b\u7684\u8fdd\u53cd\u9006\u53d8\u89c4\u5219\u800c\u9020\u6210\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\u7684\u4f8b\u5b50\u3002\u5728 Transformer<Person> \u7684\u533f\u540d\u7c7b\u5b9e\u73b0\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 transform() \u65b9\u6cd5\u4e2d\u4f20\u5165\u7684 name \u548c age \u53c2\u6570\u6784\u5efa\u4e86\u4e00\u4e2a Teacher \u5bf9\u8c61\uff0c\u5e76\u628a\u8fd9\u4e2a\u5bf9\u8c61\u76f4\u63a5\u8fd4\u56de\u3002\u7531\u4e8e transform() \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u8981\u6c42\u662f\u4e00\u4e2a Person \u5bf9\u8c61\uff0c\u800c Teacher \u662f Person \u7684\u5b50\u7c7b\uff0c\u56e0\u6b64\u8fd9\u79cd\u5199\u6cd5\u80af\u5b9a\u662f\u5408\u6cd5\u7684\u3002\u4f46\u5728 handleTransformer() \u65b9\u6cd5\u5f53\u4e2d\uff0c\u6211\u4eec\u8c03\u7528\u4e86 Transformer<Student> \u7684 transform() \u65b9\u6cd5\uff0c\u5e76\u4f20\u5165\u4e86 name \u548c age \u8fd9\u4e24\u4e2a\u53c2\u6570\uff0c\u671f\u671b\u5f97\u5230\u7684\u662f\u4e00\u4e2a Student \u5bf9\u8c61\u7684\u8fd4\u56de\uff0c\u7136\u800c\u5b9e\u9645\u4e0a transform() \u65b9\u6cd5\u8fd4\u56de\u7684\u5374\u662f\u4e00\u4e2a Teacher \u5bf9\u8c61\uff0c\u56e0\u6b64\u8fd9\u91cc\u5fc5\u7136\u4f1a\u9020\u6210\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\u3002\u7531\u4e8e\u8fd9\u6bb5\u4ee3\u7801\u662f\u53ef\u4ee5\u7f16\u8bd1\u901a\u8fc7\u7684\uff0c\u8fd0\u884c\u4e00\u4e0b\uff0c\u6253\u5370\u51fa\u7684\u5f02\u5e38\u4fe1\u606f\u5982\u4e0b\u6240\u793a\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u63d0\u793a\u6211\u4eec Teacher \u662f\u65e0\u6cd5\u8f6c\u6362\u6210 Student\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cKotlin \u5728\u63d0\u4f9b\u534f\u53d8\u548c\u9006\u53d8\u529f\u80fd\u65f6\uff0c\u5c31\u5df2\u7ecf\u628a\u5404\u79cd\u6f5c\u5728\u7684\u7c7b\u578b\u8f6c\u6362\u5b89\u5168\u9690\u60a3\u5168\u90e8\u8003\u8651\u8fdb\u53bb\u4e86\u3002\u53ea\u8981\u6211\u4eec\u4e25\u683c\u6309\u7167\u5176\u8bed\u6cd5\u89c4\u5219\uff0c\u8ba9\u6cdb\u578b\u5728\u534f\u53d8\u65f6\u53ea\u51fa\u73b0\u5728 out \u4f4d\u7f6e\u4e0a\uff0c\u9006\u53d8\u65f6\u53ea\u51fa\u73b0\u5728 in \u4f4d\u7f6e\u4e0a\uff0c\u5c31\u4e0d\u4f1a\u5b58\u5728\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\u7684\u60c5\u51b5\u3002\u867d\u7136 @UnsafeVariance \u6ce8\u89e3\u53ef\u4ee5\u6253\u7834\u8fd9\u4e00\u8bed\u6cd5\u89c4\u5219\uff0c\u4f46\u540c\u65f6\u4e5f\u4f1a\u5e26\u6765\u989d\u5916\u7684\u98ce\u9669\uff0c\u6240\u4ee5\u4f60\u5728\u4f7f\u7528\u6ce8\u89e3\u65f6\uff0c\u5fc5\u987b\u5f88\u6e05\u695a\u81ea\u5df1\u5728\u5e72\u4ec0\u4e48\u3002","title":"4. \u6cdb\u578b\u7684\u9006\u53d8"},{"location":"Kotlin/%E6%B3%9B%E5%9E%8B%E7%9A%84%E9%AB%98%E7%BA%A7%E7%89%B9%E5%BE%81/#41-comparable","text":"\u9006\u53d8\u529f\u80fd\u5728 Kotlin \u5185\u7f6e API \u4e2d\u7684\u5e94\u7528\uff0c\u6bd4\u8f83\u5178\u578b\u7684\u4f8b\u5b50\u5c31\u662f Comparable\uff0c\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u5927\u5c0f\u7684\u63a5\u53e3\uff1a interface Comparable < in T > { operator fun comparTo ( other : T ): Int } \u53ef\u4ee5\u770b\u5230\uff0cComparable\u5728 T \u8fd9\u4e2a\u6cdb\u578b\u4e0a\u5c31\u662f\u9006\u53d8\u7684\uff0c compareTo() \u65b9\u6cd5\u5219\u7528\u4e8e\u5b9e\u73b0\u5177\u4f53\u7684\u6bd4\u8f83\u903b\u8f91\u3002\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u8981\u8ba9 Comparable \u63a5\u53e3\u662f\u9006\u53d8\u7684\u5462\uff1f\u60f3\u8c61\u5982\u4e0b\u573a\u666f\uff1a\u5982\u679c\u4f7f\u7528 Comparable<Person> \u5b9e\u73b0\u4e86\u8ba9\u4e24\u4e2a Person \u5bf9\u8c61\u6bd4\u8f83\u5927\u5c0f\u7684\u903b\u8f91\uff08Person \u6bd4\u8f83\u5668\uff09\uff0c\u90a3\u4e48\u7528\u8fd9\u4e2a Person \u6bd4\u8f83\u5668\u53bb\u6bd4\u8f83\u4e24\u4e2a Student \u5bf9\u8c61\u7684\u5927\u5c0f\u4e5f\u4e00\u5b9a\u662f\u6210\u7acb\u7684\uff0c\u56e0\u6b64\u8ba9 Comparable<Person> \u6210\u4e3a Comparable<Student> \u7684\u5b50\u7c7b\u5408\u60c5\u5408\u7406\u3002 \u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u66f4\u4ed4\u7ec6\u8bb2\u4e00\u4e0b\uff1a fun main () { val personAntiAddiction = object : Comparable < Person > { override fun compareTo ( other : Person ): Int = if ( other . age >= 18 ) 1 else 0 } isStuMature ( personAntiAddiction ) } fun isStuMature ( studentAntiAddiction : Comparable < Student > ) { val student = Student ( \"Alice\" , 18 ) val result = studentAntiAddiction . compareTo ( student ) when ( result ) { 0 -> println ( \"Student ${ student . name } is still underage.\" ) else -> println ( \"Student ${ student . name } is an adult.\" ) } } \u9996\u5148\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u533f\u540d\u5bf9\u8c61 personAntiAddiction \uff08\u201c\u4eba\u7c7b\u9632\u6c89\u8ff7\u5668\u201d\uff09\uff0c\u5b9e\u73b0 Comparable \u63a5\u53e3\u5e76\u5728 compareTo \u4e2d\u5224\u65ad Person \u662f\u5426\u6210\u5e74\uff0c\u6210\u5e74\u5c31\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0\u3002\u6211\u4eec\u8fd8\u521b\u5efa\u4e86\u4e00\u4e2a isStuMature() \u65b9\u6cd5\uff0c\u63a5\u6536\u4e00\u4e2a\u201c\u5b66\u751f\u9632\u6c89\u8ff7\u5668\u201d\u5e76\u5229\u7528\u5b83\u6765\u5224\u65ad\u4e00\u4e2a Student \u662f\u5426\u5df2\u7ecf\u6210\u5e74\u5e76\u6253\u5370\u7ed3\u679c\u3002\u6211\u4eec\u628a\u201c\u4eba\u7c7b\u9632\u6c89\u8ff7\u5668\u201d\u4f20\u9012\u7ed9 isStuMature() \uff0c\u56e0\u4e3a\u5b66\u751f\u4e5f\u662f\u4eba\uff0c\u6240\u4ee5\u4f7f\u7528\u201c\u4eba\u7c7b\u9632\u6c89\u8ff7\u5668\u201d\u53bb\u5224\u65ad\u5b66\u751f\u662f\u5426\u6210\u5e74\u5b8c\u5168\u662f\u6ca1\u95ee\u9898\u7684\u3002","title":"4.1 Comparable"},{"location":"Kotlin/%E7%BB%A7%E6%89%BF%E4%B8%8E%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/","text":"\u7ee7\u627f\u4e0e\u6784\u9020\u51fd\u6570 \u00b6 \u4e00\u3001\u7ee7\u627f & \u4e3b\u6784\u9020\u51fd\u6570 \u00b6 Kotlin \u4e2d\u4efb\u4f55\u4e00\u4e2a\u975e\u62bd\u8c61\u7c7b\u9ed8\u8ba4\u662f\u4e0d\u53ef\u4ee5\u88ab\u7ee7\u627f\u7684\uff0c\u76f8\u5f53\u4e8e Java \u4e2d\u7ed9\u7c7b\u58f0\u660e\u4e86 final \u3002\u8981\u4f7f\u4e00\u4e2a\u7c7b\u80fd\u591f\u88ab\u7ee7\u627f\uff0c\u9700\u8981\u52a0\u4e0a open \u5173\u952e\u5b57\u3002 open class Person { } class student : Person () { } \u4e3a\u4ec0\u4e48\u7ee7\u627f\u7684\u65f6\u5019\u8981\u5728\u88ab\u7ee7\u627f\u7c7b\u540e\u9762\u52a0\u4e00\u5bf9\u62ec\u53f7\u5462\uff1f\u8fd9\u4e0e Kotlin \u7684\u6784\u9020\u51fd\u6570\u6709\u5173\u3002Kotlin \u4e2d\u5c06\u6784\u9020\u51fd\u6570\u5206\u4e3a\u4e3b\u6784\u9020\u51fd\u6570\u548c\u6b21\u6784\u9020\u51fd\u6570\u3002 \u4e3b\u6784\u9020\u51fd\u6570\u7684\u7279\u70b9\u662f\u6ca1\u6709\u51fd\u6570\u4f53\uff0c\u76f4\u63a5\u5728\u7c7b\u540d\u540e\u9762\u5b9a\u4e49\uff0c\u4f8b\u5982\uff1a class Student(val studentId: String) : Person() \u4e3b\u6784\u9020\u51fd\u6570\u51fd\u6570\u6ca1\u6709\u51fd\u6570\u4f53\uff0c\u4f46\u5982\u679c\u60f3\u5728\u4e3b\u6784\u9020\u51fd\u6570\u4e2d\u53bb\u7f16\u5199\u4e00\u4e9b\u903b\u8f91\u600e\u4e48\u529e\uff1fKotlin \u63d0\u4f9b\u4e86\u4e00\u4e2a init \u7ed3\u6784\u4f53\uff0c\u6240\u6709\u4e3b\u6784\u9020\u51fd\u6570\u4e2d\u7684\u903b\u8f91\u90fd\u53ef\u4ee5\u5199\u5728\u91cc\u9762\uff1a class Student ( val studentId : String ) : Person (){ init { println ( \"student id is ${ studentId } \" ) } } \u56de\u5230\u521a\u624d\u7684\u95ee\u9898\uff0c\u4e3a\u4ec0\u4e48\u7ee7\u627f Person \u65f6\u8981\u5728\u540e\u9762\u52a0\u4e0a\u4e00\u5bf9\u62ec\u53f7\uff0c\u8fd9\u8fd8\u6d89\u53ca\u5230 Java \u7ee7\u627f\u4e2d\u7684\u4e00\u4e2a\u89c4\u5219\uff0c\u5b50\u7c7b\u4e2d\u7684\u6784\u9020\u51fd\u6570\u5fc5\u987b\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u8fd9\u4e2a\u89c4\u5219\u5f53\u7136\u5728 Kotlin \u4e2d\u4e5f\u5fc5\u987b\u9075\u5b88\u3002\u4f46\u662f\u4e3b\u6784\u9020\u51fd\u6570\u6ca1\u6709\u51fd\u6570\u4f53\uff0c\u600e\u4e48\u53bb\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u5462\uff1f\u867d\u7136\u53ef\u4ee5\u5728 init \u7ed3\u6784\u4f53\u4e2d\u53bb\u5b9e\u73b0\uff0c\u4f46\u8fd9\u7edd\u975e\u662f\u4e00\u79cd\u597d\u529e\u6cd5\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u65f6\u5019\u6211\u4eec\u662f\u4e0d\u9700\u8981\u53bb\u7f16\u5199 init \u7ed3\u6784\u4f53\u7684\u3002 Kotlin \u91c7\u7528\u66f4\u5de7\u5999\u7684\u8bbe\u8ba1\uff0c \u5b50\u7c7b\u5728\u7ee7\u627f\u7236\u7c7b\u65f6\uff0c\u8c03\u7528\u7236\u7c7b\u7684\u54ea\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u7531\u62ec\u53f7\u6765\u6307\u5b9a\u3002 open class Person { } class student : Person () { } \u518d\u6765\u770b\u4e00\u904d\u4ee3\u7801\uff0cPerson \u7c7b\u540e\u9762\u4e00\u5bf9\u7a7a\u62ec\u53f7\u8868\u793a Student \u7c7b\u7684\u4e3b\u6784\u9020\u51fd\u6570\u5728\u521d\u59cb\u5316\u65f6\u4f1a\u8c03\u7528 Person \u7c7b\u7684\u65e0\u53c2\u6784\u9020\u51fd\u6570\u3002 \u4e8c\u3001\u6b21\u6784\u9020\u51fd\u6570 \u00b6 \u4e00\u4e2a\u7c7b\u53ea\u80fd\u6709\u4e00\u4e2a\u4e3b\u6784\u9020\u51fd\u6570\uff0c\u4f46\u53ef\u4ee5\u6709\u591a\u4e2a\u6b21\u6784\u9020\u51fd\u6570\uff08\u4f7f\u7528\u5173\u952e\u5b57 constructor \u5b9a\u4e49\uff09\u3002\u4e0e\u4e3b\u6784\u9020\u51fd\u6570\u4e0d\u540c\uff0c\u6b21\u6784\u9020\u51fd\u6570\u6709\u51fd\u6570\u4f53\u3002Kotlin\u89c4\u5b9a\uff0c\u5f53\u4e00\u4e2a\u7c7b\u540c\u65f6\u62e5\u6709\u4e3b\u6784\u9020\u51fd\u6570\u4e0e\u6b21\u6784\u9020\u51fd\u6570\u65f6\uff0c\u6240\u6709\u7684\u6b21\u6784\u9020\u51fd\u6570\u5fc5\u987b\u8c03\u7528\u4e3b\u6784\u9020\u51fd\u6570\uff08\u5305\u62ec\u95f4\u63a5\u8c03\u7528\uff09\uff0c\u4f8b\u5982\uff1a class Student ( val studentId : String , val grade : Int , name : String , age : Int ) : Person ( name , age ) { constructor ( name : String , age : Int ) : this ( \"\" , 0 , name , age ){ } constructor () : this ( \"\" , 0 ){ } } \u6765\u770b\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u7c7b\u4e2d\u53ea\u6709\u6b21\u6784\u9020\u51fd\u6570\u800c\u6ca1\u6709\u4e3b\u6784\u9020\u51fd\u6570\uff1a class Student : Person { constructor ( name : String , age : Int ) : super ( name , age ){ } } Student \u7c7b\u540e\u9762\u6ca1\u6709\u663e\u5f0f\u5b9a\u4e49\u4e3b\u6784\u9020\u51fd\u6570\uff0c\u53c8\u5b9a\u4e49\u4e86\u6b21\u6784\u9020\u51fd\u6570\uff0c\u6240\u4ee5\u73b0\u5728 Student \u7c7b\u662f\u6ca1\u6709\u4e3b\u6784\u9020\u51fd\u6570\u7684\u3002\u65e2\u7136\u6ca1\u6709\u4e3b\u6784\u9020\u51fd\u6570\uff0c\u90a3\u4e48\u7ee7\u627f Person \u65f6\u4e5f\u5c31\u4e0d\u9700\u8981\u518d\u52a0\u4e0a\u62ec\u53f7\u4e86\u3002\u53e6\u5916\uff0c\u56e0\u4e3a\u6ca1\u6709\u4e3b\u6784\u9020\u51fd\u6570\uff0c\u6b21\u6784\u9020\u51fd\u6570\u53ea\u80fd\u76f4\u63a5\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u6240\u4ee5\u4f7f\u7528\u4e86 super \u5173\u952e\u5b57\u3002","title":"\u7ee7\u627f\u4e0e\u6784\u9020\u51fd\u6570"},{"location":"Kotlin/%E7%BB%A7%E6%89%BF%E4%B8%8E%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/#_1","text":"","title":"\u7ee7\u627f\u4e0e\u6784\u9020\u51fd\u6570"},{"location":"Kotlin/%E7%BB%A7%E6%89%BF%E4%B8%8E%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/#_2","text":"Kotlin \u4e2d\u4efb\u4f55\u4e00\u4e2a\u975e\u62bd\u8c61\u7c7b\u9ed8\u8ba4\u662f\u4e0d\u53ef\u4ee5\u88ab\u7ee7\u627f\u7684\uff0c\u76f8\u5f53\u4e8e Java \u4e2d\u7ed9\u7c7b\u58f0\u660e\u4e86 final \u3002\u8981\u4f7f\u4e00\u4e2a\u7c7b\u80fd\u591f\u88ab\u7ee7\u627f\uff0c\u9700\u8981\u52a0\u4e0a open \u5173\u952e\u5b57\u3002 open class Person { } class student : Person () { } \u4e3a\u4ec0\u4e48\u7ee7\u627f\u7684\u65f6\u5019\u8981\u5728\u88ab\u7ee7\u627f\u7c7b\u540e\u9762\u52a0\u4e00\u5bf9\u62ec\u53f7\u5462\uff1f\u8fd9\u4e0e Kotlin \u7684\u6784\u9020\u51fd\u6570\u6709\u5173\u3002Kotlin \u4e2d\u5c06\u6784\u9020\u51fd\u6570\u5206\u4e3a\u4e3b\u6784\u9020\u51fd\u6570\u548c\u6b21\u6784\u9020\u51fd\u6570\u3002 \u4e3b\u6784\u9020\u51fd\u6570\u7684\u7279\u70b9\u662f\u6ca1\u6709\u51fd\u6570\u4f53\uff0c\u76f4\u63a5\u5728\u7c7b\u540d\u540e\u9762\u5b9a\u4e49\uff0c\u4f8b\u5982\uff1a class Student(val studentId: String) : Person() \u4e3b\u6784\u9020\u51fd\u6570\u51fd\u6570\u6ca1\u6709\u51fd\u6570\u4f53\uff0c\u4f46\u5982\u679c\u60f3\u5728\u4e3b\u6784\u9020\u51fd\u6570\u4e2d\u53bb\u7f16\u5199\u4e00\u4e9b\u903b\u8f91\u600e\u4e48\u529e\uff1fKotlin \u63d0\u4f9b\u4e86\u4e00\u4e2a init \u7ed3\u6784\u4f53\uff0c\u6240\u6709\u4e3b\u6784\u9020\u51fd\u6570\u4e2d\u7684\u903b\u8f91\u90fd\u53ef\u4ee5\u5199\u5728\u91cc\u9762\uff1a class Student ( val studentId : String ) : Person (){ init { println ( \"student id is ${ studentId } \" ) } } \u56de\u5230\u521a\u624d\u7684\u95ee\u9898\uff0c\u4e3a\u4ec0\u4e48\u7ee7\u627f Person \u65f6\u8981\u5728\u540e\u9762\u52a0\u4e0a\u4e00\u5bf9\u62ec\u53f7\uff0c\u8fd9\u8fd8\u6d89\u53ca\u5230 Java \u7ee7\u627f\u4e2d\u7684\u4e00\u4e2a\u89c4\u5219\uff0c\u5b50\u7c7b\u4e2d\u7684\u6784\u9020\u51fd\u6570\u5fc5\u987b\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u8fd9\u4e2a\u89c4\u5219\u5f53\u7136\u5728 Kotlin \u4e2d\u4e5f\u5fc5\u987b\u9075\u5b88\u3002\u4f46\u662f\u4e3b\u6784\u9020\u51fd\u6570\u6ca1\u6709\u51fd\u6570\u4f53\uff0c\u600e\u4e48\u53bb\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u5462\uff1f\u867d\u7136\u53ef\u4ee5\u5728 init \u7ed3\u6784\u4f53\u4e2d\u53bb\u5b9e\u73b0\uff0c\u4f46\u8fd9\u7edd\u975e\u662f\u4e00\u79cd\u597d\u529e\u6cd5\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u65f6\u5019\u6211\u4eec\u662f\u4e0d\u9700\u8981\u53bb\u7f16\u5199 init \u7ed3\u6784\u4f53\u7684\u3002 Kotlin \u91c7\u7528\u66f4\u5de7\u5999\u7684\u8bbe\u8ba1\uff0c \u5b50\u7c7b\u5728\u7ee7\u627f\u7236\u7c7b\u65f6\uff0c\u8c03\u7528\u7236\u7c7b\u7684\u54ea\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u7531\u62ec\u53f7\u6765\u6307\u5b9a\u3002 open class Person { } class student : Person () { } \u518d\u6765\u770b\u4e00\u904d\u4ee3\u7801\uff0cPerson \u7c7b\u540e\u9762\u4e00\u5bf9\u7a7a\u62ec\u53f7\u8868\u793a Student \u7c7b\u7684\u4e3b\u6784\u9020\u51fd\u6570\u5728\u521d\u59cb\u5316\u65f6\u4f1a\u8c03\u7528 Person \u7c7b\u7684\u65e0\u53c2\u6784\u9020\u51fd\u6570\u3002","title":"\u4e00\u3001\u7ee7\u627f &amp; \u4e3b\u6784\u9020\u51fd\u6570"},{"location":"Kotlin/%E7%BB%A7%E6%89%BF%E4%B8%8E%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/#_3","text":"\u4e00\u4e2a\u7c7b\u53ea\u80fd\u6709\u4e00\u4e2a\u4e3b\u6784\u9020\u51fd\u6570\uff0c\u4f46\u53ef\u4ee5\u6709\u591a\u4e2a\u6b21\u6784\u9020\u51fd\u6570\uff08\u4f7f\u7528\u5173\u952e\u5b57 constructor \u5b9a\u4e49\uff09\u3002\u4e0e\u4e3b\u6784\u9020\u51fd\u6570\u4e0d\u540c\uff0c\u6b21\u6784\u9020\u51fd\u6570\u6709\u51fd\u6570\u4f53\u3002Kotlin\u89c4\u5b9a\uff0c\u5f53\u4e00\u4e2a\u7c7b\u540c\u65f6\u62e5\u6709\u4e3b\u6784\u9020\u51fd\u6570\u4e0e\u6b21\u6784\u9020\u51fd\u6570\u65f6\uff0c\u6240\u6709\u7684\u6b21\u6784\u9020\u51fd\u6570\u5fc5\u987b\u8c03\u7528\u4e3b\u6784\u9020\u51fd\u6570\uff08\u5305\u62ec\u95f4\u63a5\u8c03\u7528\uff09\uff0c\u4f8b\u5982\uff1a class Student ( val studentId : String , val grade : Int , name : String , age : Int ) : Person ( name , age ) { constructor ( name : String , age : Int ) : this ( \"\" , 0 , name , age ){ } constructor () : this ( \"\" , 0 ){ } } \u6765\u770b\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u7c7b\u4e2d\u53ea\u6709\u6b21\u6784\u9020\u51fd\u6570\u800c\u6ca1\u6709\u4e3b\u6784\u9020\u51fd\u6570\uff1a class Student : Person { constructor ( name : String , age : Int ) : super ( name , age ){ } } Student \u7c7b\u540e\u9762\u6ca1\u6709\u663e\u5f0f\u5b9a\u4e49\u4e3b\u6784\u9020\u51fd\u6570\uff0c\u53c8\u5b9a\u4e49\u4e86\u6b21\u6784\u9020\u51fd\u6570\uff0c\u6240\u4ee5\u73b0\u5728 Student \u7c7b\u662f\u6ca1\u6709\u4e3b\u6784\u9020\u51fd\u6570\u7684\u3002\u65e2\u7136\u6ca1\u6709\u4e3b\u6784\u9020\u51fd\u6570\uff0c\u90a3\u4e48\u7ee7\u627f Person \u65f6\u4e5f\u5c31\u4e0d\u9700\u8981\u518d\u52a0\u4e0a\u62ec\u53f7\u4e86\u3002\u53e6\u5916\uff0c\u56e0\u4e3a\u6ca1\u6709\u4e3b\u6784\u9020\u51fd\u6570\uff0c\u6b21\u6784\u9020\u51fd\u6570\u53ea\u80fd\u76f4\u63a5\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u6240\u4ee5\u4f7f\u7528\u4e86 super \u5173\u952e\u5b57\u3002","title":"\u4e8c\u3001\u6b21\u6784\u9020\u51fd\u6570"},{"location":"Kotlin/%E7%BC%96%E5%86%99%E5%A5%BD%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7%E6%96%B9%E6%B3%95/","text":"\u7f16\u5199\u597d\u7528\u7684\u5de5\u5177\u65b9\u6cd5 \u00b6 1. \u6c42N\u4e2a\u6570\u7684\u6700\u5927\u6700\u5c0f\u503c \u00b6 \u83b7\u53d6\u4e24\u4e2a\u6570\u4e2d\u8f83\u5927\u7684\u90a3\u4e2a\u6570\uff0c\u9664\u4e86\u4f7f\u7528\u6700\u57fa\u672c\u7684 if \u8bed\u53e5\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u501f\u52a9 Kotlin \u5185\u7f6e\u7684 max() \u51fd\u6570\uff0c\u4f46\u5982\u679c\u60f3\u8981\u57283\u4e2a\u6570\u4e2d\u83b7\u53d6\u6700\u5927\u7684\u90a3\u4e2a\u6570\u5462\uff1f\u7531\u4e8e max() \u51fd\u6570\u53ea\u80fd\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u56e0\u6b64\u9700\u8981\u5148\u6bd4\u8f83\u524d\u4e24\u4e2a\u6570\u7684\u5927\u5c0f\uff0c\u7136\u540e\u518d\u62ff\u8f83\u5927\u7684\u90a3\u4e2a\u6570\u548c\u5269\u4f59\u7684\u6570\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679c\u8981\u6bd4\u8f835\u4e2a\u300110\u4e2a\u300120\u4e2a\u6570\u5b57\u5462\uff1f\u56de\u987e\u4e00\u4e0b vararg \u5173\u952e\u5b57\uff0c\u5b83\u5141\u8bb8\u65b9\u6cd5\u63a5\u6536\u4efb\u610f\u591a\u4e2a\u540c\u7b49\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u6b63\u597d\u6ee1\u8db3\u6211\u4eec\u8fd9\u91cc\u7684\u9700\u6c42\u3002 fun max ( vararg nums : Int ): Int { var maxNum = Int . MIN_VALUE for ( num in nums ) { maxNum = kotlin . math . max ( num , maxNum ) } return maxNum } \u73b0\u5728\u4e0d\u7ba1\u662f\u6c423\u4e2a\u6570\u7684\u6700\u5927\u503c\u8fd8\u662f\u6c42N\u4e2a\u6570\u7684\u6700\u5927\u503c\uff0c\u53ea\u9700\u8981\u4e0d\u65ad\u5730\u7ed9 max() \u51fd\u6570\u4f20\u53c2\u5c31\u53ef\u4ee5\u4e86\u3002\u4e0d\u8fc7\u76ee\u524d\u6211\u4eec\u7684 max() \u51fd\u6570\u8fd8\u6709\u4e00\u4e2a\u7f3a\u70b9\uff0c\u5c31\u662f\u5b83\u53ea\u80fd\u6c42N\u4e2a\u6574\u578b\u6570\u5b57\u7684\u6700\u5927\u503c\uff0c\u5982\u679c\u6211\u8fd8\u60f3\u6c42N\u4e2a\u6d6e\u70b9\u578b\u6216\u957f\u6574\u578b\u6570\u5b57\u7684\u6700\u5927\u503c\u5462\uff1f\u867d\u7136\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a max() \u51fd\u6570\u7684\u91cd\u8f7d\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u6848\u5b9e\u73b0\u8d77\u6765\u8fc7\u4e8e\u70e6\u7410\uff0c\u8fd8\u4f1a\u4ea7\u751f\u5927\u91cf\u7684\u91cd\u590d\u4ee3\u7801\uff0c Java \u4e2d\u89c4\u5b9a\uff0c\u5b9e\u73b0 Comparable \u63a5\u53e3\u7684\u6240\u6709\u7c7b\u578b\u7684\u6570\u5b57\u90fd\u662f\u53ef\u6bd4\u8f83\u7684\uff0c\u8fd9\u4e2a\u89c4\u5219\u5728 Kotlin \u4e2d\u4e5f\u540c\u6837\u6210\u7acb\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u501f\u52a9\u6cdb\u578b\uff0c\u5c06 max() \u51fd\u6570\u4fee\u6539\u6210\u63a5\u6536\u4efb\u610f\u591a\u4e2a\u5b9e\u73b0 Comparable \u63a5\u53e3\u7684\u53c2\u6570\uff1a fun < T : Comparable < T > > max ( vararg nums : T ): T { if ( nums . isEmpty ()) throw RuntimeException ( \"Params can not be empty.\" ) var maxNum = nums [ 0 ] for ( num in nums ){ if ( num > maxNum ) maxNum = num } return maxNum } \u800c\u4e14\u73b0\u5728\u4e0d\u7ba1\u662f\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u578b\u3001\u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b\uff0c\u8fd8\u662f\u77ed\u6574\u578b\u3001\u6574\u578b\u3001\u957f\u6574\u578b\uff0c\u53ea\u8981\u662f\u5b9e\u73b0 Comparable \u63a5\u53e3\u7684\u5b50\u7c7b\u578b\uff0cmax()\u51fd\u6570\u5168\u90e8\u652f\u6301\u83b7\u53d6\u5b83\u4eec\u7684\u6700\u5927\u503c\uff0c\u662f\u4e00\u79cd\u4e00\u52b3\u6c38\u9038\u7684\u505a\u6cd5\u3002 2. \u7b80\u5316 Toast \u7684\u7528\u6cd5 \u00b6 \u5148\u770b\u4e00\u4e0b Toast \u7684\u6807\u51c6\u7528\u6cd5\uff1a Toast . makeText ( context : Context ! , text : CharSequence ! , duration : Int ). show () \u662f\u4e0d\u662f\u5f88\u957f\u7684\u4e00\u6bb5\u4ee3\u7801\uff1f\u800c\u4e14\u5f88\u591a\u4eba\u56e0\u4e3a\u5fd8\u8bb0\u8c03\u7528\u6700\u540e\u7684 show() \u65b9\u6cd5\uff0c\u5bfc\u81f4 Toast \u65e0\u6cd5\u5f39\u51fa\u3002\u7531\u4e8eToast\u662f\u975e\u5e38\u5e38\u7528\u7684\u529f\u80fd\uff0c\u6bcf\u6b21\u90fd\u9700\u8981\u7f16\u5199\u8fd9\u4e48\u957f\u7684\u4e00\u6bb5\u4ee3\u7801\u786e\u5b9e\u8ba9\u4eba\u5f88\u5934\u75bc\uff0c\u5982\u4f55\u5bf9\u5b83\u7b80\u5316\u5462\uff1f\u5148\u5206\u6790\u4e00\u4e0b\uff0cToast \u7684 makeText() \u65b9\u6cd5\u63a5\u65363\u4e2a\u53c2\u6570\uff1a\u7b2c\u4e00\u4e2a\u53c2\u6570\u662fToast\u663e\u793a\u7684\u4e0a\u4e0b\u6587\u73af\u5883\uff0c\u5fc5\u4e0d\u53ef\u5c11\uff1b\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f Toast \u663e\u793a\u7684\u5185\u5bb9\uff0c\u9700\u8981\u7531\u8c03\u7528\u65b9\u8fdb\u884c\u6307\u5b9a\uff0c\u53ef\u4ee5\u4f20\u5165\u5b57\u7b26\u4e32\u548c\u5b57\u7b26\u4e32\u8d44\u6e90 id \u4e24\u79cd\u7c7b\u578b\uff1b\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f Toas t\u663e\u793a\u7684\u65f6\u957f\uff0c\u53ea\u652f\u6301 Toast.LENGTH_SHORT \u548c Toast.LENGTH_LONG \uff0c\u663e\u793a\u5185\u5bb9\u7684\u53c2\u6570\u76f8\u5bf9\u6765\u8bf4\u53d8\u5316\u4e0d\u5927\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7ed9 String \u7c7b\u548c Int \u7c7b\u5404\u6dfb\u52a0\u4e00\u4e2a\u6269\u5c55\u51fd\u6570\uff0c\u5e76\u5728\u91cc\u9762\u5c01\u88c5\u5f39\u51fa Toast \u7684\u5177\u4f53\u903b\u8f91\u3002\u8fd9\u6837\u4ee5\u540e\u6bcf\u6b21\u60f3\u8981\u5f39\u51fa Toast \u65f6\uff0c\u53ea\u9700\u8981\u8c03\u7528\u5b83\u4eec\u7684\u6269\u5c55\u51fd\u6570\u5c31\u53ef\u4ee5\u4e86\uff1a fun String . showToast ( context : Context ) { Toast . makeText ( context , this , Toast . LENGTH_SHORT ). show () } \u73b0\u5728\u7684\u95ee\u9898\u662f Toast \u7684\u663e\u793a\u65f6\u957f\u88ab\u56fa\u5b9a\u4e86\uff0c\u5982\u679c\u6211\u73b0\u5728\u60f3\u8981\u4f7f\u7528 Toast.LENGTH_LONG \u7c7b\u578b\u7684\u663e\u793a\u65f6\u957f\u8be5\u600e\u4e48\u529e\u5462\uff1f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u6700\u7b80\u5355\u7684\u505a\u6cd5\u5c31\u662f\u5728 showToast() \u51fd\u6570\u4e2d\u518d\u58f0\u660e\u4e00\u4e2a\u663e\u793a\u65f6\u957f\u53c2\u6570\uff0c\u4f46\u662f\u8fd9\u6837\u6bcf\u6b21\u8c03\u7528 showToast() \u65f6\u90fd\u8981\u989d\u5916\u591a\u4f20\u4e00\u4e2a\u53c2\u6570\uff0c\u522b\u5fd8\u4e86\u6211\u4eec\u662f\u53ef\u4ee5\u7ed9\u51fd\u6570\u8bbe\u5b9a\u53c2\u6570\u9ed8\u8ba4\u503c\u7684\uff1a fun String . showToast ( context : Context , duration : Int = Toast . LENGTH_SHORT ) { Toast . makeText ( context , this , duration ). show () } fun Int . showToast ( context : Context , duration : Int = Toast . LENGTH_SHORT ) { Toast . makeText ( context , this , duration ). show () } 3. \u7b80\u5316 Snackbar \u7684\u7528\u6cd5 \u00b6 SnackBar \u548c Toast \u7c7b\u4f3c\u4f46\u6bd4 Toast \u7a0d\u5fae\u590d\u6742\u4e00\u70b9\uff0c\u8fd8\u662f\u5148\u6765\u56de\u987e\u4e00\u4e0b\u5b83\u7684\u7528\u6cd5\uff1a Snackbar . make ( view , \"Hello World!\" , Snackbar . LENGTH . SHORT ) . setAction ( \"Action\" ) { // \u5177\u4f53\u903b\u8f91 } . show () \u7531\u4e8e make() \u65b9\u6cd5\u63a5\u6536\u4e00\u4e2aView\u53c2\u6570\uff0cSnackbar \u4f1a\u4f7f\u7528\u8fd9\u4e2aView\u81ea\u52a8\u67e5\u627e\u6700\u5916\u5c42\u7684\u5e03\u5c40\uff0c\u7528\u4e8e\u5c55\u793a Snackbar\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7ed9 View \u7c7b\u6dfb\u52a0\u4e00\u4e2a\u6269\u5c55\u51fd\u6570\uff0c\u5e76\u5728\u91cc\u9762\u5c01\u88c5\u663e\u793a Snackbar \u7684\u5177\u4f53\u903b\u8f91\uff1a fun View . showSnackbar ( text : String , duration : Int = Snackbar . LENGTH . SHORT ) { Snackbar . make ( this , text , duration ). show () } fun View . showSnackbar ( resId : Int , duration : Int = Snackbar . LENGTH . SHORT ) { Snackbar . make ( this , resId , duration ). show () } \u5047\u5982 Snackbar \u6ca1\u6709 setAction() \u65b9\u6cd5\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u7b80\u5316\u5de5\u4f5c\u5230\u8fd9\u91cc\u5c31\u53ef\u4ee5\u7ed3\u675f\u4e86\u3002\u4f46\u662f setAction() \u65b9\u6cd5\u4f5c\u4e3a Snackbar \u6700\u5927\u7684\u7279\u8272\u4e4b\u4e00\uff0c\u5982\u679c\u4e0d\u80fd\u652f\u6301\u7684\u8bdd\uff0c\u6211\u4eec\u7f16\u5199\u7684 showSnackbar() \u51fd\u6570\u4e5f\u5c31\u53d8\u5f97\u6beb\u65e0\u610f\u4e49\u4e86\u3002\u8fd9\u65f6\uff0c\u9ad8\u9636\u51fd\u6570\u53c8\u80fd\u6d3e\u4e0a\u7528\u573a\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9 showSnackbar() \u51fd\u6570\u518d\u989d\u5916\u63a5\u6536\u4e00\u4e2a\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff0c\u4ee5\u6b64\u6765\u5b9e\u73b0 Snackbar \u7684\u5b8c\u6574\u529f\u80fd\u652f\u6301\uff1a fun View . showSnackbar ( text : String , actionText : String? = null , duration : Int = Snackbar . LENGTH . SHORT , block : (() -> Unit ) ? = null ) { val snackbar = Snackbar . make ( this , text , duration ) if ( actionText != null && block != null ){ snackbar . setAction ( actionText ) { block () } } snackbar . show () } fun View . showSnackbar ( resId : Int , actionResId : Int? = null , duration : Int = Snackbar . LENGTH . SHORT , block : (() -> Unit ) ? = null ) { val snackbar = Snackbar . make ( this , resId , duration ) if ( actionText != null && block != null ){ snackbar . setAction ( actionResId ) { block () } } snackbar . show () } \u968f\u540e\u6211\u4eec\u5c31\u80fd\u4f7f\u7528\u4e00\u4e0b\u5199\u6cd5\u8fdb\u884c\u5b9e\u73b0\uff1a view . showSnackbar ( \"This is Snackbar\" , \"Action\" ) { // \u5177\u4f53\u903b\u8f91 }","title":"\u7f16\u5199\u597d\u7528\u7684\u5de5\u5177\u65b9\u6cd5"},{"location":"Kotlin/%E7%BC%96%E5%86%99%E5%A5%BD%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7%E6%96%B9%E6%B3%95/#_1","text":"","title":"\u7f16\u5199\u597d\u7528\u7684\u5de5\u5177\u65b9\u6cd5"},{"location":"Kotlin/%E7%BC%96%E5%86%99%E5%A5%BD%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7%E6%96%B9%E6%B3%95/#1-n","text":"\u83b7\u53d6\u4e24\u4e2a\u6570\u4e2d\u8f83\u5927\u7684\u90a3\u4e2a\u6570\uff0c\u9664\u4e86\u4f7f\u7528\u6700\u57fa\u672c\u7684 if \u8bed\u53e5\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u501f\u52a9 Kotlin \u5185\u7f6e\u7684 max() \u51fd\u6570\uff0c\u4f46\u5982\u679c\u60f3\u8981\u57283\u4e2a\u6570\u4e2d\u83b7\u53d6\u6700\u5927\u7684\u90a3\u4e2a\u6570\u5462\uff1f\u7531\u4e8e max() \u51fd\u6570\u53ea\u80fd\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u56e0\u6b64\u9700\u8981\u5148\u6bd4\u8f83\u524d\u4e24\u4e2a\u6570\u7684\u5927\u5c0f\uff0c\u7136\u540e\u518d\u62ff\u8f83\u5927\u7684\u90a3\u4e2a\u6570\u548c\u5269\u4f59\u7684\u6570\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679c\u8981\u6bd4\u8f835\u4e2a\u300110\u4e2a\u300120\u4e2a\u6570\u5b57\u5462\uff1f\u56de\u987e\u4e00\u4e0b vararg \u5173\u952e\u5b57\uff0c\u5b83\u5141\u8bb8\u65b9\u6cd5\u63a5\u6536\u4efb\u610f\u591a\u4e2a\u540c\u7b49\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u6b63\u597d\u6ee1\u8db3\u6211\u4eec\u8fd9\u91cc\u7684\u9700\u6c42\u3002 fun max ( vararg nums : Int ): Int { var maxNum = Int . MIN_VALUE for ( num in nums ) { maxNum = kotlin . math . max ( num , maxNum ) } return maxNum } \u73b0\u5728\u4e0d\u7ba1\u662f\u6c423\u4e2a\u6570\u7684\u6700\u5927\u503c\u8fd8\u662f\u6c42N\u4e2a\u6570\u7684\u6700\u5927\u503c\uff0c\u53ea\u9700\u8981\u4e0d\u65ad\u5730\u7ed9 max() \u51fd\u6570\u4f20\u53c2\u5c31\u53ef\u4ee5\u4e86\u3002\u4e0d\u8fc7\u76ee\u524d\u6211\u4eec\u7684 max() \u51fd\u6570\u8fd8\u6709\u4e00\u4e2a\u7f3a\u70b9\uff0c\u5c31\u662f\u5b83\u53ea\u80fd\u6c42N\u4e2a\u6574\u578b\u6570\u5b57\u7684\u6700\u5927\u503c\uff0c\u5982\u679c\u6211\u8fd8\u60f3\u6c42N\u4e2a\u6d6e\u70b9\u578b\u6216\u957f\u6574\u578b\u6570\u5b57\u7684\u6700\u5927\u503c\u5462\uff1f\u867d\u7136\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a max() \u51fd\u6570\u7684\u91cd\u8f7d\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u6848\u5b9e\u73b0\u8d77\u6765\u8fc7\u4e8e\u70e6\u7410\uff0c\u8fd8\u4f1a\u4ea7\u751f\u5927\u91cf\u7684\u91cd\u590d\u4ee3\u7801\uff0c Java \u4e2d\u89c4\u5b9a\uff0c\u5b9e\u73b0 Comparable \u63a5\u53e3\u7684\u6240\u6709\u7c7b\u578b\u7684\u6570\u5b57\u90fd\u662f\u53ef\u6bd4\u8f83\u7684\uff0c\u8fd9\u4e2a\u89c4\u5219\u5728 Kotlin \u4e2d\u4e5f\u540c\u6837\u6210\u7acb\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u501f\u52a9\u6cdb\u578b\uff0c\u5c06 max() \u51fd\u6570\u4fee\u6539\u6210\u63a5\u6536\u4efb\u610f\u591a\u4e2a\u5b9e\u73b0 Comparable \u63a5\u53e3\u7684\u53c2\u6570\uff1a fun < T : Comparable < T > > max ( vararg nums : T ): T { if ( nums . isEmpty ()) throw RuntimeException ( \"Params can not be empty.\" ) var maxNum = nums [ 0 ] for ( num in nums ){ if ( num > maxNum ) maxNum = num } return maxNum } \u800c\u4e14\u73b0\u5728\u4e0d\u7ba1\u662f\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u578b\u3001\u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b\uff0c\u8fd8\u662f\u77ed\u6574\u578b\u3001\u6574\u578b\u3001\u957f\u6574\u578b\uff0c\u53ea\u8981\u662f\u5b9e\u73b0 Comparable \u63a5\u53e3\u7684\u5b50\u7c7b\u578b\uff0cmax()\u51fd\u6570\u5168\u90e8\u652f\u6301\u83b7\u53d6\u5b83\u4eec\u7684\u6700\u5927\u503c\uff0c\u662f\u4e00\u79cd\u4e00\u52b3\u6c38\u9038\u7684\u505a\u6cd5\u3002","title":"1. \u6c42N\u4e2a\u6570\u7684\u6700\u5927\u6700\u5c0f\u503c"},{"location":"Kotlin/%E7%BC%96%E5%86%99%E5%A5%BD%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7%E6%96%B9%E6%B3%95/#2-toast","text":"\u5148\u770b\u4e00\u4e0b Toast \u7684\u6807\u51c6\u7528\u6cd5\uff1a Toast . makeText ( context : Context ! , text : CharSequence ! , duration : Int ). show () \u662f\u4e0d\u662f\u5f88\u957f\u7684\u4e00\u6bb5\u4ee3\u7801\uff1f\u800c\u4e14\u5f88\u591a\u4eba\u56e0\u4e3a\u5fd8\u8bb0\u8c03\u7528\u6700\u540e\u7684 show() \u65b9\u6cd5\uff0c\u5bfc\u81f4 Toast \u65e0\u6cd5\u5f39\u51fa\u3002\u7531\u4e8eToast\u662f\u975e\u5e38\u5e38\u7528\u7684\u529f\u80fd\uff0c\u6bcf\u6b21\u90fd\u9700\u8981\u7f16\u5199\u8fd9\u4e48\u957f\u7684\u4e00\u6bb5\u4ee3\u7801\u786e\u5b9e\u8ba9\u4eba\u5f88\u5934\u75bc\uff0c\u5982\u4f55\u5bf9\u5b83\u7b80\u5316\u5462\uff1f\u5148\u5206\u6790\u4e00\u4e0b\uff0cToast \u7684 makeText() \u65b9\u6cd5\u63a5\u65363\u4e2a\u53c2\u6570\uff1a\u7b2c\u4e00\u4e2a\u53c2\u6570\u662fToast\u663e\u793a\u7684\u4e0a\u4e0b\u6587\u73af\u5883\uff0c\u5fc5\u4e0d\u53ef\u5c11\uff1b\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f Toast \u663e\u793a\u7684\u5185\u5bb9\uff0c\u9700\u8981\u7531\u8c03\u7528\u65b9\u8fdb\u884c\u6307\u5b9a\uff0c\u53ef\u4ee5\u4f20\u5165\u5b57\u7b26\u4e32\u548c\u5b57\u7b26\u4e32\u8d44\u6e90 id \u4e24\u79cd\u7c7b\u578b\uff1b\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f Toas t\u663e\u793a\u7684\u65f6\u957f\uff0c\u53ea\u652f\u6301 Toast.LENGTH_SHORT \u548c Toast.LENGTH_LONG \uff0c\u663e\u793a\u5185\u5bb9\u7684\u53c2\u6570\u76f8\u5bf9\u6765\u8bf4\u53d8\u5316\u4e0d\u5927\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7ed9 String \u7c7b\u548c Int \u7c7b\u5404\u6dfb\u52a0\u4e00\u4e2a\u6269\u5c55\u51fd\u6570\uff0c\u5e76\u5728\u91cc\u9762\u5c01\u88c5\u5f39\u51fa Toast \u7684\u5177\u4f53\u903b\u8f91\u3002\u8fd9\u6837\u4ee5\u540e\u6bcf\u6b21\u60f3\u8981\u5f39\u51fa Toast \u65f6\uff0c\u53ea\u9700\u8981\u8c03\u7528\u5b83\u4eec\u7684\u6269\u5c55\u51fd\u6570\u5c31\u53ef\u4ee5\u4e86\uff1a fun String . showToast ( context : Context ) { Toast . makeText ( context , this , Toast . LENGTH_SHORT ). show () } \u73b0\u5728\u7684\u95ee\u9898\u662f Toast \u7684\u663e\u793a\u65f6\u957f\u88ab\u56fa\u5b9a\u4e86\uff0c\u5982\u679c\u6211\u73b0\u5728\u60f3\u8981\u4f7f\u7528 Toast.LENGTH_LONG \u7c7b\u578b\u7684\u663e\u793a\u65f6\u957f\u8be5\u600e\u4e48\u529e\u5462\uff1f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u6700\u7b80\u5355\u7684\u505a\u6cd5\u5c31\u662f\u5728 showToast() \u51fd\u6570\u4e2d\u518d\u58f0\u660e\u4e00\u4e2a\u663e\u793a\u65f6\u957f\u53c2\u6570\uff0c\u4f46\u662f\u8fd9\u6837\u6bcf\u6b21\u8c03\u7528 showToast() \u65f6\u90fd\u8981\u989d\u5916\u591a\u4f20\u4e00\u4e2a\u53c2\u6570\uff0c\u522b\u5fd8\u4e86\u6211\u4eec\u662f\u53ef\u4ee5\u7ed9\u51fd\u6570\u8bbe\u5b9a\u53c2\u6570\u9ed8\u8ba4\u503c\u7684\uff1a fun String . showToast ( context : Context , duration : Int = Toast . LENGTH_SHORT ) { Toast . makeText ( context , this , duration ). show () } fun Int . showToast ( context : Context , duration : Int = Toast . LENGTH_SHORT ) { Toast . makeText ( context , this , duration ). show () }","title":"2. \u7b80\u5316 Toast \u7684\u7528\u6cd5"},{"location":"Kotlin/%E7%BC%96%E5%86%99%E5%A5%BD%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7%E6%96%B9%E6%B3%95/#3-snackbar","text":"SnackBar \u548c Toast \u7c7b\u4f3c\u4f46\u6bd4 Toast \u7a0d\u5fae\u590d\u6742\u4e00\u70b9\uff0c\u8fd8\u662f\u5148\u6765\u56de\u987e\u4e00\u4e0b\u5b83\u7684\u7528\u6cd5\uff1a Snackbar . make ( view , \"Hello World!\" , Snackbar . LENGTH . SHORT ) . setAction ( \"Action\" ) { // \u5177\u4f53\u903b\u8f91 } . show () \u7531\u4e8e make() \u65b9\u6cd5\u63a5\u6536\u4e00\u4e2aView\u53c2\u6570\uff0cSnackbar \u4f1a\u4f7f\u7528\u8fd9\u4e2aView\u81ea\u52a8\u67e5\u627e\u6700\u5916\u5c42\u7684\u5e03\u5c40\uff0c\u7528\u4e8e\u5c55\u793a Snackbar\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7ed9 View \u7c7b\u6dfb\u52a0\u4e00\u4e2a\u6269\u5c55\u51fd\u6570\uff0c\u5e76\u5728\u91cc\u9762\u5c01\u88c5\u663e\u793a Snackbar \u7684\u5177\u4f53\u903b\u8f91\uff1a fun View . showSnackbar ( text : String , duration : Int = Snackbar . LENGTH . SHORT ) { Snackbar . make ( this , text , duration ). show () } fun View . showSnackbar ( resId : Int , duration : Int = Snackbar . LENGTH . SHORT ) { Snackbar . make ( this , resId , duration ). show () } \u5047\u5982 Snackbar \u6ca1\u6709 setAction() \u65b9\u6cd5\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u7b80\u5316\u5de5\u4f5c\u5230\u8fd9\u91cc\u5c31\u53ef\u4ee5\u7ed3\u675f\u4e86\u3002\u4f46\u662f setAction() \u65b9\u6cd5\u4f5c\u4e3a Snackbar \u6700\u5927\u7684\u7279\u8272\u4e4b\u4e00\uff0c\u5982\u679c\u4e0d\u80fd\u652f\u6301\u7684\u8bdd\uff0c\u6211\u4eec\u7f16\u5199\u7684 showSnackbar() \u51fd\u6570\u4e5f\u5c31\u53d8\u5f97\u6beb\u65e0\u610f\u4e49\u4e86\u3002\u8fd9\u65f6\uff0c\u9ad8\u9636\u51fd\u6570\u53c8\u80fd\u6d3e\u4e0a\u7528\u573a\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9 showSnackbar() \u51fd\u6570\u518d\u989d\u5916\u63a5\u6536\u4e00\u4e2a\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff0c\u4ee5\u6b64\u6765\u5b9e\u73b0 Snackbar \u7684\u5b8c\u6574\u529f\u80fd\u652f\u6301\uff1a fun View . showSnackbar ( text : String , actionText : String? = null , duration : Int = Snackbar . LENGTH . SHORT , block : (() -> Unit ) ? = null ) { val snackbar = Snackbar . make ( this , text , duration ) if ( actionText != null && block != null ){ snackbar . setAction ( actionText ) { block () } } snackbar . show () } fun View . showSnackbar ( resId : Int , actionResId : Int? = null , duration : Int = Snackbar . LENGTH . SHORT , block : (() -> Unit ) ? = null ) { val snackbar = Snackbar . make ( this , resId , duration ) if ( actionText != null && block != null ){ snackbar . setAction ( actionResId ) { block () } } snackbar . show () } \u968f\u540e\u6211\u4eec\u5c31\u80fd\u4f7f\u7528\u4e00\u4e0b\u5199\u6cd5\u8fdb\u884c\u5b9e\u73b0\uff1a view . showSnackbar ( \"This is Snackbar\" , \"Action\" ) { // \u5177\u4f53\u903b\u8f91 }","title":"3. \u7b80\u5316 Snackbar \u7684\u7528\u6cd5"},{"location":"Kotlin/%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95/","text":"\u9759\u6001\u65b9\u6cd5 \u00b6 \u5728 Java \u4e2d\u53ea\u9700\u5728\u65b9\u6cd5\u524d\u52a0\u4e0a static \u5173\u952e\u5b57\uff0c\u5728 Kotlin \u4e2d\u53ef\u4ee5\u5229\u7528\u5355\u4f8b\u7c7b\u5b9e\u73b0\u9759\u6001\u65b9\u6cd5\u7684\u6548\u679c object Util { fun doAction (){ println ( \"do action\" ) } } \u867d\u7136\u8fd9\u91cc\u7684 doAction \u4e0d\u662f\u9759\u6001\u65b9\u6cd5\uff0c\u5374\u53ef\u4ee5\u7528 Util.doAction() \u7684\u65b9\u5f0f\u6765\u8c03\u7528 \u5982\u679c\u8981\u5b9e\u73b0\u7c7b\u4e2d\u5b58\u5728\u90e8\u5206\u9759\u6001\u65b9\u6cd5\u800c\u4e0d\u662f\u6240\u6709\u65b9\u6cd5\u90fd\u4e3a\u9759\u6001\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4f7f\u7528 companion object \u5173\u952e\u5b57 class Util { fun doAction1 (){ println ( \"do action1\" ) } companion object { fun doAction2 (){ println ( \"do action2\" ) } } } \u867d\u7136\u53ef\u4ee5\u7528 Util.doAction2() \u6765\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u4f46\u5b9e\u9645\u4e0a\u5b83\u5e76\u975e\u9759\u6001\u65b9\u6cd5\uff0c companion object \u5173\u952e\u5b57\u4f1a\u5728 Util \u7c7b\u5185\u90e8\u521b\u5efa\u4e00\u4e2a\u4f34\u751f\u7c7b\uff0c\u800c doAction2() \u5c31\u662f\u5b9a\u4e49\u5728\u8fd9\u4e2a\u4f34\u751f\u7c7b\u91cc\u9762\u7684\u5b9e\u4f8b\u65b9\u6cd5\uff0cKotlin \u4f1a\u4fdd\u8bc1 Util \u7c7b\u59cb\u7ec8\u4ec5\u4f1a\u5b58\u5728\u4e00\u4e2a\u4f34\u751f\u7c7b\u5bf9\u8c61\u3002 \u5982\u679c\u786e\u5b9e\u8981\u5b9a\u4e49\u771f\u6b63\u7684\u9759\u6001\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4f7f\u7528 \u6ce8\u89e3 \u6216 \u9876\u5c42\u65b9\u6cd5 \u6ce8\u89e3 \u00b6 \u7ed9\u5355\u4f8b\u7c7b\u6216 companion object \u4e2d\u7684\u65b9\u6cd5\u52a0\u4e0a @JvmState \u540e\uff0cKotlin\u7f16\u8bd1\u5668\u4f1a\u5c06\u8fd9\u4e9b\u65b9\u6cd5\u7f16\u8bd1\u4e3a\u771f\u6b63\u7684\u9759\u6001\u65b9\u6cd5 \u9876\u5c42\u65b9\u6cd5 \u00b6 \u9876\u5c42\u65b9\u6cd5\u662f\u6307\u54ea\u4e9b\u6ca1\u6709\u5b9a\u4e49\u5728\u4efb\u4f55\u7c7b\u4e2d\u7684\u65b9\u6cd5\uff0cKotlin \u4f1a\u5c06\u9876\u5c42\u65b9\u6cd5\u7f16\u8bd1\u4e3a\u9759\u6001\u65b9\u6cd5\u3002\u4f46\u5728 Java \u4e2d\u5982\u4f55\u5982\u4f55\u8c03\u7528\u901a\u8fc7\u9876\u5c42\u65b9\u6cd5\u5b9e\u73b0\u7684\u9759\u6001\u65b9\u6cd5\u5462\uff1f\u5b83\u6ca1\u6709\u5b9a\u4e49\u5728\u4efb\u4f55\u7684\u7c7b\u4e2d\u3002Java \u4e2d\u662f\u6ca1\u6709\u9876\u5c42\u65b9\u6cd5\u8fd9\u4e2a\u6982\u5ff5\u7684\uff0c\u6240\u6709\u7684\u65b9\u6cd5\u5fc5\u987b\u5b9a\u4e49\u5728\u7c7b\u4e2d\u3002 Kotlin \u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u4e0e\u9876\u5c42\u65b9\u6cd5\u6240\u5728\u6587\u4ef6\u7684\u6587\u4ef6\u540d\u540c\u540d\u7684\u7c7b\uff0c\u5728\u8fd9\u4e2a\u7c7b\u4e0a\u53bb\u8c03\u7528\u9759\u6001\u65b9\u6cd5\u5373\u53ef\u3002","title":"\u9759\u6001\u65b9\u6cd5"},{"location":"Kotlin/%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95/#_1","text":"\u5728 Java \u4e2d\u53ea\u9700\u5728\u65b9\u6cd5\u524d\u52a0\u4e0a static \u5173\u952e\u5b57\uff0c\u5728 Kotlin \u4e2d\u53ef\u4ee5\u5229\u7528\u5355\u4f8b\u7c7b\u5b9e\u73b0\u9759\u6001\u65b9\u6cd5\u7684\u6548\u679c object Util { fun doAction (){ println ( \"do action\" ) } } \u867d\u7136\u8fd9\u91cc\u7684 doAction \u4e0d\u662f\u9759\u6001\u65b9\u6cd5\uff0c\u5374\u53ef\u4ee5\u7528 Util.doAction() \u7684\u65b9\u5f0f\u6765\u8c03\u7528 \u5982\u679c\u8981\u5b9e\u73b0\u7c7b\u4e2d\u5b58\u5728\u90e8\u5206\u9759\u6001\u65b9\u6cd5\u800c\u4e0d\u662f\u6240\u6709\u65b9\u6cd5\u90fd\u4e3a\u9759\u6001\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4f7f\u7528 companion object \u5173\u952e\u5b57 class Util { fun doAction1 (){ println ( \"do action1\" ) } companion object { fun doAction2 (){ println ( \"do action2\" ) } } } \u867d\u7136\u53ef\u4ee5\u7528 Util.doAction2() \u6765\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u4f46\u5b9e\u9645\u4e0a\u5b83\u5e76\u975e\u9759\u6001\u65b9\u6cd5\uff0c companion object \u5173\u952e\u5b57\u4f1a\u5728 Util \u7c7b\u5185\u90e8\u521b\u5efa\u4e00\u4e2a\u4f34\u751f\u7c7b\uff0c\u800c doAction2() \u5c31\u662f\u5b9a\u4e49\u5728\u8fd9\u4e2a\u4f34\u751f\u7c7b\u91cc\u9762\u7684\u5b9e\u4f8b\u65b9\u6cd5\uff0cKotlin \u4f1a\u4fdd\u8bc1 Util \u7c7b\u59cb\u7ec8\u4ec5\u4f1a\u5b58\u5728\u4e00\u4e2a\u4f34\u751f\u7c7b\u5bf9\u8c61\u3002 \u5982\u679c\u786e\u5b9e\u8981\u5b9a\u4e49\u771f\u6b63\u7684\u9759\u6001\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4f7f\u7528 \u6ce8\u89e3 \u6216 \u9876\u5c42\u65b9\u6cd5","title":"\u9759\u6001\u65b9\u6cd5"},{"location":"Kotlin/%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95/#_2","text":"\u7ed9\u5355\u4f8b\u7c7b\u6216 companion object \u4e2d\u7684\u65b9\u6cd5\u52a0\u4e0a @JvmState \u540e\uff0cKotlin\u7f16\u8bd1\u5668\u4f1a\u5c06\u8fd9\u4e9b\u65b9\u6cd5\u7f16\u8bd1\u4e3a\u771f\u6b63\u7684\u9759\u6001\u65b9\u6cd5","title":"\u6ce8\u89e3"},{"location":"Kotlin/%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95/#_3","text":"\u9876\u5c42\u65b9\u6cd5\u662f\u6307\u54ea\u4e9b\u6ca1\u6709\u5b9a\u4e49\u5728\u4efb\u4f55\u7c7b\u4e2d\u7684\u65b9\u6cd5\uff0cKotlin \u4f1a\u5c06\u9876\u5c42\u65b9\u6cd5\u7f16\u8bd1\u4e3a\u9759\u6001\u65b9\u6cd5\u3002\u4f46\u5728 Java \u4e2d\u5982\u4f55\u5982\u4f55\u8c03\u7528\u901a\u8fc7\u9876\u5c42\u65b9\u6cd5\u5b9e\u73b0\u7684\u9759\u6001\u65b9\u6cd5\u5462\uff1f\u5b83\u6ca1\u6709\u5b9a\u4e49\u5728\u4efb\u4f55\u7684\u7c7b\u4e2d\u3002Java \u4e2d\u662f\u6ca1\u6709\u9876\u5c42\u65b9\u6cd5\u8fd9\u4e2a\u6982\u5ff5\u7684\uff0c\u6240\u6709\u7684\u65b9\u6cd5\u5fc5\u987b\u5b9a\u4e49\u5728\u7c7b\u4e2d\u3002 Kotlin \u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u4e0e\u9876\u5c42\u65b9\u6cd5\u6240\u5728\u6587\u4ef6\u7684\u6587\u4ef6\u540d\u540c\u540d\u7684\u7c7b\uff0c\u5728\u8fd9\u4e2a\u7c7b\u4e0a\u53bb\u8c03\u7528\u9759\u6001\u65b9\u6cd5\u5373\u53ef\u3002","title":"\u9876\u5c42\u65b9\u6cd5"},{"location":"Kotlin/%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/","text":"\u9ad8\u9636\u51fd\u6570 \u00b6 \u9ad8\u9636\u51fd\u6570\u7684\u5b9a\u4e49 \u00b6 \u5982\u679c\u4e00\u4e2a\u51fd\u6570\u63a5\u6536\u53e6\u5916\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u6216\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u5f0f\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u90a3\u4e48\u8be5\u51fd\u6570\u5c31\u79f0\u4e3a\u9ad8\u9636\u51fd\u6570\u3002 \u7f16\u7a0b\u8bed\u8a00\u4e2d\u6709\u5b57\u6bb5\u7c7b\u578b\uff08\u6574\u5f62\u3001\u5e03\u5c14\u578b...\uff09\uff0cKotlin \u4e2d\u65b0\u589e\u4e86 \u201d\u51fd\u6570\u7c7b\u578b\u201c \u7684\u6982\u5ff5\uff0c\u5982\u679c\u5c06\u8fd9\u79cd\u51fd\u6570\u7c7b\u578b\u6dfb\u52a0\u5230\u4e00\u4e2a\u51fd\u6570\u7684\u53c2\u6570\u58f0\u660e\u6216\u8fd4\u56de\u503c\u58f0\u660e\u4e2d\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u4e2a\u9ad8\u9636\u51fd\u6570\u3002\u51fd\u6570\u7c7b\u578b\u7684\u57fa\u672c\u8bed\u6cd5\u89c4\u5219\u5982\u4e0b\uff1a ( String , Int ) -> Unit -> \u5de6\u8fb9\u58f0\u660e\u51fd\u6570\u63a5\u6536\u53c2\u6570\u7684\u7c7b\u578b\uff0c -> \u53f3\u8fb9\u58f0\u660e\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b \u9ad8\u9636\u51fd\u6570\u7684\u7528\u9014\u5f88\u5e7f\uff0c\u4f46\u6982\u62ec\u6765\u8bf4\uff0c\u5b83\u5141\u8bb8\u8ba9\uff08\u51fd\u6570\u7c7b\u578b\u7684\uff09\u53c2\u6570\u6765\u51b3\u5b9a\u51fd\u6570\u7684\u6267\u884c\u903b\u8f91\u3002\u5373\u4f7f\u662f\u540c\u4e00\u4e2a\u9ad8\u9636\u51fd\u6570\uff0c\u53ea\u8981\u4f20\u5165\u4e0d\u540c\u7684\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff0c\u90a3\u4e48\u5b83\u7684\u6267\u884c\u903b\u8f91\u548c\u6700\u7ec8\u8fd4\u56de\u7ed3\u679c\u5c31\u6709\u53ef\u80fd\u662f\u5b8c\u5168\u4e0d\u540c\u7684\u3002 fun num1AndNum2 ( num1 : Int , num2 : Int , operation : ( Int , Int ) -> Int ): Int { retun operation ( num1 , num2 ) } fun plus ( num1 : Int , num2 : Int ) = num1 + num2 fun minus ( num1 : Int , num2 : Int ) = num1 - num2 val result1 = num1AndNum2 ( 80 , 100 , :: plus ) val result2 = num1AndNum2 ( 80 , 100 , :: minus ) ::function \u662f\u4e00\u79cd\u51fd\u6570\u5f15\u7528\u7684\u5199\u6cd5\uff0c ::plus \u548c ::minus \u8868\u793a\u5c06 plus() \u548c minus() \u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9 num1AndNum2() \u51fd\u6570\uff0c\u8fd9\u79cd\u51fd\u6570\u5f15\u7528\u7684\u5199\u6cd5\u662f\u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u5982\u679c\u6bcf\u6b21\u8c03\u7528\u9ad8\u9636\u51fd\u6570\u65f6\u90fd\u8fd8\u5f97\u4e8b\u5148\u5b9a\u4e49\u4e00\u4e2a\u4e0e\u5176\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u76f8\u5339\u914d\u5f97\u51fd\u6570\uff0c\u662f\u4e0d\u662f\u6709\u4e9b\u9ebb\u70e6\uff1fKotlin \u5176\u5b9e\u8fd8\u652f\u6301\u5176\u4ed6\u591a\u79cd\u65b9\u5f0f\u6765\u8c03\u7528\u9ad8\u9636\u51fd\u6570\uff0c\u5982 Lambda \u8868\u8fbe\u5f0f\u3001\u533f\u540d\u51fd\u6570\u3001\u6210\u5458\u5f15\u7528... \u5229\u7528 Lambda \u8868\u8fbe\u5f0f\u6765\u5b9e\u73b0\u4e0a\u8ff0\u4ee3\u7801\uff1a val result1 = num1AndNum2 ( 80 , 100 ){ n1 , n2 -> n1 + n2 } val result2 = num1AndNum2 ( 80 , 100 ){ n1 , n2 -> n1 - n2 } // Lambda \u8868\u8fbe\u5f0f\u7684\u6700\u540e\u4e00\u884c\u4f1a\u81ea\u52a8\u4f5c\u4e3a\u8fd4\u56de\u503c \u4e0b\u9762\u6211\u4eec\u7ee7\u7eed\u5bf9\u9ad8\u9636\u51fd\u6570\u8fdb\u884c\u63a2\u7a76\uff0c\u5229\u7528\u9ad8\u9636\u51fd\u6570\u53bb\u5b9e\u73b0\u7c7b\u4f3c apply \u51fd\u6570\u7684\u529f\u80fd\u3002 fun StringBuilder . build ( block : StringBuilder .() -> Unit ): StringBuilder { /** * \u56e0\u4e3a\u8fd9\u662f StringBuilder \u7684\u62d3\u5c55\u51fd\u6570\uff0c\u6240\u4ee5\u8fd9\u91cc\u62e5\u6709 StringBuilder \u7684\u4e0a\u4e0b\u6587\u73af\u5883\uff08this\uff09\u3002 * \u800c\u6211\u4eec\u53c8\u5c06 block() \u5b9a\u4e49\u5728 StringBuilder \u7c7b\u4e2d * \u6240\u4ee5\u8fd9\u91cc\u7684 block() <==> this.block() * \u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u5728 StringBuilder \u4e0a\u4e0b\u6587\u73af\u5883\u4e2d\u53bb\u8c03\u7528 block() */ block () return this } fun main () { val x = StringBuilder (). build { // \u4f20\u5165\u7684 Lambda \u8868\u8fbe\u5f0f\u91cc\u5c06\u62e5\u6709 StringBuilder \u7684\u4e0a\u4e0b\u6587 append ( \"Hi! \" ) append ( \"How R U?\" ) } println ( x . toString ()) } \u6ce8\u610f\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u7684\u58f0\u660e\uff0c\u5728\u51fd\u6570\u7c7b\u578b\u7684\u524d\u9762\u591a\u4e86 StringBuilder. \u3002\u5728\u51fd\u6570\u7c7b\u578b\u524d\u52a0\u4e0a ClassName. \uff0c\u4ee3\u8868\u8fd9\u4e2a\u51fd\u6570\u7c7b\u578b\u5b9a\u4e49\u5728\u54ea\u4e2a\u7c7b\u5f53\u4e2d\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\uff0c\u4f20\u5165\u7684 Lambda \u8868\u8fbe\u5f0f\u5c06\u62e5\u6709\u8fd9\u4e2a\u7c7b\u7684\u4e0a\u4e0b\u6587\u3002 \u5185\u8054\u51fd\u6570 inline \u00b6 \u5728\u8ba4\u8bc6\u5185\u8054\u51fd\u6570\u524d\uff0c\u6211\u4eec\u5148\u6765\u7b80\u5355\u5206\u6790\u4e00\u4e0b\u9ad8\u9636\u51fd\u6570\u7684\u5b9e\u73b0\u539f\u7406\u3002 \u4f7f\u7528\u524d\u9762\u7684\u51fd\u6570\u4e3a\u4f8b\u5b50\uff1a fun num1AndNum2 ( num1 : Int , num2 : Int , operation : ( Int , Int ) -> Int ): Int { retun operation ( num1 , num2 ) } fun main (){ val result = num1AndNum2 ( 80 , 100 ){ n1 , n2 -> n1 + n2 } } Java \u4e2d\u5e76\u6ca1\u6709\u9ad8\u9636\u51fd\u6570\u8fd9\u4e2a\u6982\u5ff5\uff0cKotlin \u4f1a\u5c06\u9ad8\u9636\u51fd\u6570\u7684\u8bed\u6cd5\u8f6c\u6362\u6210 Java\u652f\u6301\u7684\u8bed\u6cd5\uff0c\u4e0a\u9762\u7684\u4ee3\u7801 \u5927\u81f4\u4e0a \u4f1a\u88ab\u8f6c\u6362\u6210\u5982\u4e0b Java \u4ee3\u7801\uff1a public static int num1AndNum2 ( int num1 , int num2 , Function operation ){ int result = ( int ) operation . invoke ( num1 , num2 ); return result ; } public static void main (){ int result = num1AndNum2 ( 80 , 100 , new Function (){ @override public Integer invoke ( Integer n1 , Integer n2 ) { return n1 + n2 ; } }); } \u53ef\u4ee5\u770b\u5230\uff0c\u5728\u8fd9\u91cc num1AndNum2() \u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u53d8\u6210\u4e86\u4e00\u4e2a Function \u63a5\u53e3\uff0c\u8fd9\u662f\u4e00\u79cd Kotlin \u5185\u7f6e\u63a5\u53e3\uff0c\u91cc\u9762\u6709\u4e00\u4e2a\u5f85\u5b9e\u73b0\u7684 invoke() \u51fd\u6570\u3002\u800c num1AndNum2() \u51fd\u6570\u5176\u5b9e\u5c31\u662f\u8c03\u7528\u4e86 Function \u63a5\u53e3\u7684 invoke() \u51fd\u6570\u3002 \u5728\u8c03\u7528 num1AndNum2() \u65f6\uff0c\u4e4b\u524d\u7684 Lambda \u8868\u8fbe\u5f0f\u53d8\u6210\u4e86 Function \u63a5\u53e3\u7684\u533f\u540d\u7c7b\u5b9e\u73b0\uff0c\u7136\u540e\u5728 invoke() \u51fd\u6570\u4e2d\u5b9e\u73b0\u903b\u8f91\u3002 \u8fd9\u5c31\u662f Kotlin \u9ad8\u9636\u51fd\u6570\u80cc\u540e\u7684\u5b9e\u73b0\u539f\u7406\uff0c\u6211\u4eec\u4e00\u76f4\u4f7f\u7528\u7684 Lambda \u8868\u8fbe\u5f0f\u5728\u5e95\u5c42\u88ab\u8f6c\u6362\u6210\u4e86\u533f\u540d\u7c7b\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u8fd9\u8868\u660e\uff0c\u6211\u4eec\u6bcf\u4e00\u6b21\u8c03\u7528 Lambda \u8868\u8fbe\u5f0f\uff0c\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u533f\u540d\u7c7b\u5b9e\u4f8b\uff0c\u4ece\u800c\u9020\u6210\u989d\u5916\u7684\u5185\u5b58\u548c\u6027\u80fd\u5f00\u9500\u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c Kotlin \u63d0\u4f9b\u4e86\u5185\u6db5\u51fd\u6570\uff0c\u5b83\u53ef\u4ee5\u5c06 Lambda \u8868\u8fbe\u5f0f\u6240\u5e26\u6765\u7684\u8fd0\u884c\u65f6\u5f00\u9500\u5b8c\u5168\u6d88\u9664\u3002 inline fun num1AndNum2 ( num1 : Int , num2 : Int , operation : ( Int , Int ) -> Int ): Int { retun operation ( num1 , num2 ) } \u5185\u8054\u51fd\u6570\u7528\u6cd5\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u5728\u5b9a\u4e49\u9ad8\u9636\u51fd\u6570\u65f6\u52a0\u4e0a inline \u5173\u952e\u5b57\u7684\u58f0\u660e\u3002 \u5185\u8054\u51fd\u6570\u7684\u539f\u7406\u975e\u5e38\u7b80\u5355\uff1aKotlin \u7f16\u8bd1\u5668\u4f1a\u5c06\u5185\u8054\u51fd\u6570\u4e2d\u7684\u4ee3\u7801\u5728\u7f16\u8bd1\u65f6\u81ea\u52a8\u66ff\u6362\u5230\u8c03\u7528\u5b83\u7684\u5730\u65b9\u3002 \u9996\u5148\uff0cKotlin \u4f1a\u5c06 Lambda \u8868\u8fbe\u5f0f\u4e2d\u7684\u4ee3\u7801\u66ff\u6362\u5230\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u8c03\u7528\u7684\u5730\u65b9\u3002 \u7136\u540e\uff0c\u518d\u5c06\u5185\u8054\u51fd\u6570\u4e2d\u7684\u5168\u90e8\u4ee3\u7801\u66ff\u6362\u5230\u5185\u8054\u51fd\u6570\u88ab\u8c03\u7528\u7684\u5730\u65b9\u3002 noinline \u548c crossinline \u00b6 noinline \u00b6 \u4e00\u4e2a\u9ad8\u9636\u51fd\u6570\u5982\u679c\u63a5\u6536\u4e86\u591a\u4e2a\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff0c\u8fd9\u65f6\u7ed9\u51fd\u6570\u52a0\u4e0a inline \u5173\u952e\u5b57\uff0cKotlin \u7f16\u8bd1\u5668\u5c31\u4f1a\u5c06\u6240\u6709\u5f15\u7528\u7684 Lambda \u8868\u8fbe\u5f0f\u5168\u90e8\u8fdb\u884c\u5185\u8054\uff0c\u4f46\u5982\u679c\u6211\u4eec\u53ea\u60f3\u5185\u8054\u5176\u4e2d\u4e00\u4e2a Lambda \u8868\u8fbe\u5f0f\u90a3\u8be5\u600e\u4e48\u529e\uff1f\u8fd9\u65f6\u53ef\u4ee5\u4f7f\u7528 noinline \u5173\u952e\u5b57\u3002 inline fun inlineTest ( block1 : () -> Unit , noinline block2 : () -> Unit ){ } \u65e2\u7136\u5185\u8054\u51fd\u6570\u80fd\u5c06 Lambda \u8868\u8fbe\u5f0f\u6240\u5e26\u6765\u7684\u8fd0\u884c\u65f6\u5f00\u9500\u5b8c\u5168\u6d88\u9664\uff0c\u4e3a\u4ec0\u4e48 Kotlin \u8fd8\u8981\u63d0\u4f9b noinline \u5173\u952e\u5b57\u6765\u6392\u9664\u5185\u8054\u529f\u80fd\u5462\uff1f\u8fd9\u65f6\u56e0\u4e3a \u5185\u8054\u7684\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u5728\u7f16\u8bd1\u65f6\u4f1a\u88ab\u4ee3\u7801\u66ff\u6362\uff0c\u56e0\u800c\u5b83\u6ca1\u6709\u771f\u6b63\u7684\u53c2\u6570\u5c5e\u6027\u3002 \u975e\u5185\u8054\u7684\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u53ef\u4ee5\u81ea\u7531\u5730\u4f20\u9012\u7ed9\u5176\u4ed6\u4efb\u4f55\u53c2\u6570\uff0c\u56e0\u4e3a\u5b83\u5c31\u662f\u4e00\u4e2a\u771f\u5b9e\u7684\u53c2\u6570\uff0c\u800c\u5185\u8054\u7684\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u53ea\u5141\u8bb8\u4f20\u9012\u7ed9\u53e6\u5916\u4e00\u4e2a\u5185\u8054\u51fd\u6570\u3002 \u6b64\u5916\uff0c\u5185\u8054\u51fd\u6570\u4e0e\u975e\u5185\u8054\u51fd\u6570\u8fd8\u6709\u4e00\u4e2a\u91cd\u8981\u533a\u522b\uff0c\u5185\u8054\u51fd\u6570\u6240\u5f15\u7528\u7684 Lambda \u8868\u8fbe\u5f0f\u4e2d\u53ef\u4ee5\u4f7f\u7528 return \u5173\u952e\u5b57\u6765\u8fdb\u884c\u51fd\u6570\u8fd4\u56de\uff0c\u800c\u975e\u5185\u8054\u51fd\u6570\u53ea\u80fd\u8fdb\u884c\u5c40\u90e8\u8fd4\u56de\uff0c\u6211\u4eec\u6765\u770b\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a // main() <== printString() <== lambda fun printString ( str : String , block : ( String ) -> Unit ){ println ( \"printString start\" ) block ( str ) println ( \"printString end\" ) } fun main (){ println ( \"main start\" ) printString ( \"\" ){ s -> println ( \"lambda start\" ) /** * \u975e\u5185\u8054\u51fd\u6570\u6240\u5f15\u7528\u7684 lambda \u8868\u8fbe\u5f0f\u4e2d\u4e0d\u5141\u8bb8\u76f4\u63a5\u4f7f\u7528 return \u5173\u952e\u5b57\u7684\uff0c * \u8fd9\u91cc\u4f7f\u7528 return@printString \u7684\u5199\u6cd5\uff0c\u8868\u793a\u5c40\u90e8\u8fd4\u56de\uff0c * \u4e0d\u518d\u6267\u884c lambda \u8868\u8fbe\u5f0f\u7684\u5269\u4f59\u90e8\u5206\u4ee3\u7801 */ if ( s . isEmpty ()) return @printString println ( s ) println ( \"lambda end\" ) } println ( \"main end\" ) } // \u7ed3\u679c main start printString start lambda start printString end main end \u5982\u679c\u5c06 printString() \u58f0\u660e\u6210\u4e00\u4e2a\u5185\u8054\u51fd\u6570\uff0c\u7ed3\u679c\u53c8\u4f1a\u662f\u600e\u4e48\u6837\u5462\uff1f inline fun printString ( str : String , block : ( String ) -> Unit ){ println ( \"printString start\" ) block ( str ) println ( \"printString end\" ) } fun main (){ println ( \"main start\" ) printString ( \"\" ){ s -> println ( \"lambda start\" ) if ( s . isEmpty ()) return println ( s ) println ( \"lambda end\" ) } println ( \"main end\" ) } // \u7ed3\u679c main start printString start lambda start \u5c06 printString() \u58f0\u660e\u4e3a\u5185\u8054\u51fd\u6570\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 Lambda \u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528 return \u5173\u952e\u5b57\u4e86\uff0c\u6b64\u65f6\u7684 return \u4ee3\u8868\u7684\u662f\u8fd4\u56de\u8fd4\u56de\u5916\u5c42\u8c03\u7528\u7684\u51fd\u6570\uff0c\u4e5f\u5c31\u662f main() \u51fd\u6570\u3002 crossinline \u00b6 \u5c06\u9ad8\u9636\u51fd\u6570\u58f0\u660e\u6210\u5185\u8054\u51fd\u6570\u662f\u4e00\u79cd\u826f\u597d\u7684\u7f16\u7a0b\u4e60\u60ef\u3002\u7edd\u5927\u591a\u6570\u7684\u9ad8\u9636\u51fd\u6570\u662f\u53ef\u4ee5\u76f4\u63a5\u58f0\u660e\u4e3a\u5185\u8054\u51fd\u6570\u7684\uff0c\u4f46\u4e5f\u6709\u5c11\u90e8\u5206\u4f8b\u5916\u60c5\u51b5\uff1a inline fun runRunnable ( block : () -> Unit ){ val runnable = Runnable { block () } runnable . run () } \u8fd9\u4e2a\u51fd\u6570\u5982\u679c\u58f0\u660e\u4e3a\u5185\u8054\u51fd\u6570\uff0c\u90a3\u4e48\u5c31\u4f1a\u62a5\u9519 Can\u2018t inline 'block' here. \u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u58f0\u660e\u4e3a\u5185\u8054\u51fd\u6570\u5c31\u62a5\u9519\u5462\uff1f\u9996\u5148\uff0c\u5728 runRunnable() \u51fd\u6570\u4e2d\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a Runnable \u5bf9\u8c61\uff0c\u5e76\u5728 Runnable \u7684 Lambda \u8868\u8fbe\u5f0f\u4e2d\u8c03\u7528\u4e86\u4f20\u5165\u7684\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u3002 Runnable \u7684 Lambda \u8868\u8fbe\u5f0f\u5728\u7f16\u8bd1\u65f6\u4f1a\u88ab\u8f6c\u6362\u4e3a\u533f\u540d\u7c7b\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0a\u8ff0\u4ee3\u7801\u5b9e\u9645\u4e0a\u662f\u5728\u533f\u540d\u7c7b\u4e2d\u8c03\u7528\u4e86\u4f20\u5165\u7684\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u3002 \u5185\u8054\u51fd\u6570\u6240\u5f15\u7528\u7684 Lambda \u8868\u8fbe\u5f0f\uff08block\uff09\u662f\u5141\u8bb8\u4f7f\u7528 return \u5173\u952e\u5b57\u8fdb\u884c\u51fd\u6570\u8fd4\u56de\u7684\uff0c\u4f46\u7531\u4e8e\u6211\u4eec\u662f\u5728\u533f\u540d\u7c7b\u4e2d\u8c03\u7528\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff0c\u6b64\u65f6\u662f\u4e0d\u53ef\u80fd\u8fdb\u884c\u5916\u5c42\u8c03\u7528\u51fd\u6570\u8fd4\u56de\u7684\uff0c\u6700\u591a\u53ea\u80fd\u5bf9\u533f\u540d\u7c7b\u4e2d\u7684\u51fd\u6570\u8c03\u7528\u8fdb\u884c\u8fd4\u56de\uff0c\u56e0\u6b64\u8fd9\u91cc\u5c31\u51fa\u73b0\u4e86\u62a5\u9519\u3002 main() <== runRunnable() <=xx= \u533f\u540d\u7c7bRunnable <== lambda (return) \u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u5728\u5185\u8054\u7684\u9ad8\u9636\u51fd\u6570\u4e2d\u521b\u5efa\u4e86\u53e6\u5916\u7684 Lambda \u6216\u8005\u533f\u540d\u7c7b\u7684\u5b9e\u73b0\uff0c\u5e76\u4e14\u5728\u8fd9\u4e9b\u5b9e\u73b0\u4e2d\u8c03\u7528\u4e86\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff0c\u5c31\u4f1a\u62a5\u9519\u3002 \u6709\u6ca1\u6709\u89e3\u51b3\u529e\u6cd5\uff1f\u7b54\u6848\u662f\u6709\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528 crossinline \u5173\u952e\u5b57\u3002 inline fun runRunnable ( crossinline block : () -> Unit ) { val runnable = Runnable { block () } runnable . run () } \u8fd9\u4e2a crossinline \u662f\u5565\uff0c\u4e3a\u4ec0\u4e48\u52a0\u4e0a\u5b83\u5c31\u80fd\u89e3\u51b3\u62a5\u9519\uff1f\u6839\u636e\u524d\u9762\u7684\u5206\u6790\uff0c\u4e4b\u6240\u4ee5\u4f1a\u62a5\u9519\uff0c\u662f\u56e0\u4e3a\u5185\u8054\u51fd\u6570\u7684 Lambda \u8868\u8fbe\u5f0f\uff08block\uff09\u4e2d\u5141\u8bb8\u4f7f\u7528 return \u5173\u952e\u5b57\uff0c\u800c\u9ad8\u9636\u51fd\u6570\u7684\u533f\u540d\u7c7b\u5b9e\u73b0\u4e2d\u4e0d\u5141\u8bb8\u4f7f\u7528 return \u5173\u952e\u5b57\uff0c\u4e8c\u8005\u4e4b\u95f4\u9020\u6210\u51b2\u7a81\u3002crossinline \u5c31\u50cf\u4e00\u4efd\u9532\u7ea6\uff0c\u4fdd\u8bc1\u5728\u5185\u8054\u51fd\u6570\u5f15\u7528\u7684 Lambda \u8868\u8fbe\u5f0f\u4e2d\u4e00\u5b9a\u4e0d\u4f1a\u5305\u542b return \u5173\u952e\u5b57\uff0c\u51b2\u7a81\u5c31\u4e0d\u5b58\u5728\u4e86\u3002 \u58f0\u660e\u4e86 crossinline \u540e\uff0c\u6211\u4eec\u65e0\u6cd5\u5728\u8c03\u7528 runRunnable \u7684 Lambda \u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528 return \u5173\u952e\u5b57\u8fdb\u884c\u8fd4\u56de\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u4f7f\u7528 return@runRunnable \u7684\u5199\u6cd5\u8fdb\u884c\u5c40\u90e8\u8fd4\u56de\u3002","title":"\u9ad8\u9636\u51fd\u6570"},{"location":"Kotlin/%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/#_1","text":"","title":"\u9ad8\u9636\u51fd\u6570"},{"location":"Kotlin/%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/#_2","text":"\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u63a5\u6536\u53e6\u5916\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u6216\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u5f0f\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u90a3\u4e48\u8be5\u51fd\u6570\u5c31\u79f0\u4e3a\u9ad8\u9636\u51fd\u6570\u3002 \u7f16\u7a0b\u8bed\u8a00\u4e2d\u6709\u5b57\u6bb5\u7c7b\u578b\uff08\u6574\u5f62\u3001\u5e03\u5c14\u578b...\uff09\uff0cKotlin \u4e2d\u65b0\u589e\u4e86 \u201d\u51fd\u6570\u7c7b\u578b\u201c \u7684\u6982\u5ff5\uff0c\u5982\u679c\u5c06\u8fd9\u79cd\u51fd\u6570\u7c7b\u578b\u6dfb\u52a0\u5230\u4e00\u4e2a\u51fd\u6570\u7684\u53c2\u6570\u58f0\u660e\u6216\u8fd4\u56de\u503c\u58f0\u660e\u4e2d\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u4e2a\u9ad8\u9636\u51fd\u6570\u3002\u51fd\u6570\u7c7b\u578b\u7684\u57fa\u672c\u8bed\u6cd5\u89c4\u5219\u5982\u4e0b\uff1a ( String , Int ) -> Unit -> \u5de6\u8fb9\u58f0\u660e\u51fd\u6570\u63a5\u6536\u53c2\u6570\u7684\u7c7b\u578b\uff0c -> \u53f3\u8fb9\u58f0\u660e\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b \u9ad8\u9636\u51fd\u6570\u7684\u7528\u9014\u5f88\u5e7f\uff0c\u4f46\u6982\u62ec\u6765\u8bf4\uff0c\u5b83\u5141\u8bb8\u8ba9\uff08\u51fd\u6570\u7c7b\u578b\u7684\uff09\u53c2\u6570\u6765\u51b3\u5b9a\u51fd\u6570\u7684\u6267\u884c\u903b\u8f91\u3002\u5373\u4f7f\u662f\u540c\u4e00\u4e2a\u9ad8\u9636\u51fd\u6570\uff0c\u53ea\u8981\u4f20\u5165\u4e0d\u540c\u7684\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff0c\u90a3\u4e48\u5b83\u7684\u6267\u884c\u903b\u8f91\u548c\u6700\u7ec8\u8fd4\u56de\u7ed3\u679c\u5c31\u6709\u53ef\u80fd\u662f\u5b8c\u5168\u4e0d\u540c\u7684\u3002 fun num1AndNum2 ( num1 : Int , num2 : Int , operation : ( Int , Int ) -> Int ): Int { retun operation ( num1 , num2 ) } fun plus ( num1 : Int , num2 : Int ) = num1 + num2 fun minus ( num1 : Int , num2 : Int ) = num1 - num2 val result1 = num1AndNum2 ( 80 , 100 , :: plus ) val result2 = num1AndNum2 ( 80 , 100 , :: minus ) ::function \u662f\u4e00\u79cd\u51fd\u6570\u5f15\u7528\u7684\u5199\u6cd5\uff0c ::plus \u548c ::minus \u8868\u793a\u5c06 plus() \u548c minus() \u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9 num1AndNum2() \u51fd\u6570\uff0c\u8fd9\u79cd\u51fd\u6570\u5f15\u7528\u7684\u5199\u6cd5\u662f\u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u5982\u679c\u6bcf\u6b21\u8c03\u7528\u9ad8\u9636\u51fd\u6570\u65f6\u90fd\u8fd8\u5f97\u4e8b\u5148\u5b9a\u4e49\u4e00\u4e2a\u4e0e\u5176\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u76f8\u5339\u914d\u5f97\u51fd\u6570\uff0c\u662f\u4e0d\u662f\u6709\u4e9b\u9ebb\u70e6\uff1fKotlin \u5176\u5b9e\u8fd8\u652f\u6301\u5176\u4ed6\u591a\u79cd\u65b9\u5f0f\u6765\u8c03\u7528\u9ad8\u9636\u51fd\u6570\uff0c\u5982 Lambda \u8868\u8fbe\u5f0f\u3001\u533f\u540d\u51fd\u6570\u3001\u6210\u5458\u5f15\u7528... \u5229\u7528 Lambda \u8868\u8fbe\u5f0f\u6765\u5b9e\u73b0\u4e0a\u8ff0\u4ee3\u7801\uff1a val result1 = num1AndNum2 ( 80 , 100 ){ n1 , n2 -> n1 + n2 } val result2 = num1AndNum2 ( 80 , 100 ){ n1 , n2 -> n1 - n2 } // Lambda \u8868\u8fbe\u5f0f\u7684\u6700\u540e\u4e00\u884c\u4f1a\u81ea\u52a8\u4f5c\u4e3a\u8fd4\u56de\u503c \u4e0b\u9762\u6211\u4eec\u7ee7\u7eed\u5bf9\u9ad8\u9636\u51fd\u6570\u8fdb\u884c\u63a2\u7a76\uff0c\u5229\u7528\u9ad8\u9636\u51fd\u6570\u53bb\u5b9e\u73b0\u7c7b\u4f3c apply \u51fd\u6570\u7684\u529f\u80fd\u3002 fun StringBuilder . build ( block : StringBuilder .() -> Unit ): StringBuilder { /** * \u56e0\u4e3a\u8fd9\u662f StringBuilder \u7684\u62d3\u5c55\u51fd\u6570\uff0c\u6240\u4ee5\u8fd9\u91cc\u62e5\u6709 StringBuilder \u7684\u4e0a\u4e0b\u6587\u73af\u5883\uff08this\uff09\u3002 * \u800c\u6211\u4eec\u53c8\u5c06 block() \u5b9a\u4e49\u5728 StringBuilder \u7c7b\u4e2d * \u6240\u4ee5\u8fd9\u91cc\u7684 block() <==> this.block() * \u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u5728 StringBuilder \u4e0a\u4e0b\u6587\u73af\u5883\u4e2d\u53bb\u8c03\u7528 block() */ block () return this } fun main () { val x = StringBuilder (). build { // \u4f20\u5165\u7684 Lambda \u8868\u8fbe\u5f0f\u91cc\u5c06\u62e5\u6709 StringBuilder \u7684\u4e0a\u4e0b\u6587 append ( \"Hi! \" ) append ( \"How R U?\" ) } println ( x . toString ()) } \u6ce8\u610f\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u7684\u58f0\u660e\uff0c\u5728\u51fd\u6570\u7c7b\u578b\u7684\u524d\u9762\u591a\u4e86 StringBuilder. \u3002\u5728\u51fd\u6570\u7c7b\u578b\u524d\u52a0\u4e0a ClassName. \uff0c\u4ee3\u8868\u8fd9\u4e2a\u51fd\u6570\u7c7b\u578b\u5b9a\u4e49\u5728\u54ea\u4e2a\u7c7b\u5f53\u4e2d\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\uff0c\u4f20\u5165\u7684 Lambda \u8868\u8fbe\u5f0f\u5c06\u62e5\u6709\u8fd9\u4e2a\u7c7b\u7684\u4e0a\u4e0b\u6587\u3002","title":"\u9ad8\u9636\u51fd\u6570\u7684\u5b9a\u4e49"},{"location":"Kotlin/%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/#inline","text":"\u5728\u8ba4\u8bc6\u5185\u8054\u51fd\u6570\u524d\uff0c\u6211\u4eec\u5148\u6765\u7b80\u5355\u5206\u6790\u4e00\u4e0b\u9ad8\u9636\u51fd\u6570\u7684\u5b9e\u73b0\u539f\u7406\u3002 \u4f7f\u7528\u524d\u9762\u7684\u51fd\u6570\u4e3a\u4f8b\u5b50\uff1a fun num1AndNum2 ( num1 : Int , num2 : Int , operation : ( Int , Int ) -> Int ): Int { retun operation ( num1 , num2 ) } fun main (){ val result = num1AndNum2 ( 80 , 100 ){ n1 , n2 -> n1 + n2 } } Java \u4e2d\u5e76\u6ca1\u6709\u9ad8\u9636\u51fd\u6570\u8fd9\u4e2a\u6982\u5ff5\uff0cKotlin \u4f1a\u5c06\u9ad8\u9636\u51fd\u6570\u7684\u8bed\u6cd5\u8f6c\u6362\u6210 Java\u652f\u6301\u7684\u8bed\u6cd5\uff0c\u4e0a\u9762\u7684\u4ee3\u7801 \u5927\u81f4\u4e0a \u4f1a\u88ab\u8f6c\u6362\u6210\u5982\u4e0b Java \u4ee3\u7801\uff1a public static int num1AndNum2 ( int num1 , int num2 , Function operation ){ int result = ( int ) operation . invoke ( num1 , num2 ); return result ; } public static void main (){ int result = num1AndNum2 ( 80 , 100 , new Function (){ @override public Integer invoke ( Integer n1 , Integer n2 ) { return n1 + n2 ; } }); } \u53ef\u4ee5\u770b\u5230\uff0c\u5728\u8fd9\u91cc num1AndNum2() \u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u53d8\u6210\u4e86\u4e00\u4e2a Function \u63a5\u53e3\uff0c\u8fd9\u662f\u4e00\u79cd Kotlin \u5185\u7f6e\u63a5\u53e3\uff0c\u91cc\u9762\u6709\u4e00\u4e2a\u5f85\u5b9e\u73b0\u7684 invoke() \u51fd\u6570\u3002\u800c num1AndNum2() \u51fd\u6570\u5176\u5b9e\u5c31\u662f\u8c03\u7528\u4e86 Function \u63a5\u53e3\u7684 invoke() \u51fd\u6570\u3002 \u5728\u8c03\u7528 num1AndNum2() \u65f6\uff0c\u4e4b\u524d\u7684 Lambda \u8868\u8fbe\u5f0f\u53d8\u6210\u4e86 Function \u63a5\u53e3\u7684\u533f\u540d\u7c7b\u5b9e\u73b0\uff0c\u7136\u540e\u5728 invoke() \u51fd\u6570\u4e2d\u5b9e\u73b0\u903b\u8f91\u3002 \u8fd9\u5c31\u662f Kotlin \u9ad8\u9636\u51fd\u6570\u80cc\u540e\u7684\u5b9e\u73b0\u539f\u7406\uff0c\u6211\u4eec\u4e00\u76f4\u4f7f\u7528\u7684 Lambda \u8868\u8fbe\u5f0f\u5728\u5e95\u5c42\u88ab\u8f6c\u6362\u6210\u4e86\u533f\u540d\u7c7b\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u8fd9\u8868\u660e\uff0c\u6211\u4eec\u6bcf\u4e00\u6b21\u8c03\u7528 Lambda \u8868\u8fbe\u5f0f\uff0c\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u533f\u540d\u7c7b\u5b9e\u4f8b\uff0c\u4ece\u800c\u9020\u6210\u989d\u5916\u7684\u5185\u5b58\u548c\u6027\u80fd\u5f00\u9500\u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c Kotlin \u63d0\u4f9b\u4e86\u5185\u6db5\u51fd\u6570\uff0c\u5b83\u53ef\u4ee5\u5c06 Lambda \u8868\u8fbe\u5f0f\u6240\u5e26\u6765\u7684\u8fd0\u884c\u65f6\u5f00\u9500\u5b8c\u5168\u6d88\u9664\u3002 inline fun num1AndNum2 ( num1 : Int , num2 : Int , operation : ( Int , Int ) -> Int ): Int { retun operation ( num1 , num2 ) } \u5185\u8054\u51fd\u6570\u7528\u6cd5\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u5728\u5b9a\u4e49\u9ad8\u9636\u51fd\u6570\u65f6\u52a0\u4e0a inline \u5173\u952e\u5b57\u7684\u58f0\u660e\u3002 \u5185\u8054\u51fd\u6570\u7684\u539f\u7406\u975e\u5e38\u7b80\u5355\uff1aKotlin \u7f16\u8bd1\u5668\u4f1a\u5c06\u5185\u8054\u51fd\u6570\u4e2d\u7684\u4ee3\u7801\u5728\u7f16\u8bd1\u65f6\u81ea\u52a8\u66ff\u6362\u5230\u8c03\u7528\u5b83\u7684\u5730\u65b9\u3002 \u9996\u5148\uff0cKotlin \u4f1a\u5c06 Lambda \u8868\u8fbe\u5f0f\u4e2d\u7684\u4ee3\u7801\u66ff\u6362\u5230\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u8c03\u7528\u7684\u5730\u65b9\u3002 \u7136\u540e\uff0c\u518d\u5c06\u5185\u8054\u51fd\u6570\u4e2d\u7684\u5168\u90e8\u4ee3\u7801\u66ff\u6362\u5230\u5185\u8054\u51fd\u6570\u88ab\u8c03\u7528\u7684\u5730\u65b9\u3002","title":"\u5185\u8054\u51fd\u6570 inline"},{"location":"Kotlin/%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/#noinline-crossinline","text":"","title":"noinline \u548c crossinline"},{"location":"Kotlin/%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/#noinline","text":"\u4e00\u4e2a\u9ad8\u9636\u51fd\u6570\u5982\u679c\u63a5\u6536\u4e86\u591a\u4e2a\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff0c\u8fd9\u65f6\u7ed9\u51fd\u6570\u52a0\u4e0a inline \u5173\u952e\u5b57\uff0cKotlin \u7f16\u8bd1\u5668\u5c31\u4f1a\u5c06\u6240\u6709\u5f15\u7528\u7684 Lambda \u8868\u8fbe\u5f0f\u5168\u90e8\u8fdb\u884c\u5185\u8054\uff0c\u4f46\u5982\u679c\u6211\u4eec\u53ea\u60f3\u5185\u8054\u5176\u4e2d\u4e00\u4e2a Lambda \u8868\u8fbe\u5f0f\u90a3\u8be5\u600e\u4e48\u529e\uff1f\u8fd9\u65f6\u53ef\u4ee5\u4f7f\u7528 noinline \u5173\u952e\u5b57\u3002 inline fun inlineTest ( block1 : () -> Unit , noinline block2 : () -> Unit ){ } \u65e2\u7136\u5185\u8054\u51fd\u6570\u80fd\u5c06 Lambda \u8868\u8fbe\u5f0f\u6240\u5e26\u6765\u7684\u8fd0\u884c\u65f6\u5f00\u9500\u5b8c\u5168\u6d88\u9664\uff0c\u4e3a\u4ec0\u4e48 Kotlin \u8fd8\u8981\u63d0\u4f9b noinline \u5173\u952e\u5b57\u6765\u6392\u9664\u5185\u8054\u529f\u80fd\u5462\uff1f\u8fd9\u65f6\u56e0\u4e3a \u5185\u8054\u7684\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u5728\u7f16\u8bd1\u65f6\u4f1a\u88ab\u4ee3\u7801\u66ff\u6362\uff0c\u56e0\u800c\u5b83\u6ca1\u6709\u771f\u6b63\u7684\u53c2\u6570\u5c5e\u6027\u3002 \u975e\u5185\u8054\u7684\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u53ef\u4ee5\u81ea\u7531\u5730\u4f20\u9012\u7ed9\u5176\u4ed6\u4efb\u4f55\u53c2\u6570\uff0c\u56e0\u4e3a\u5b83\u5c31\u662f\u4e00\u4e2a\u771f\u5b9e\u7684\u53c2\u6570\uff0c\u800c\u5185\u8054\u7684\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u53ea\u5141\u8bb8\u4f20\u9012\u7ed9\u53e6\u5916\u4e00\u4e2a\u5185\u8054\u51fd\u6570\u3002 \u6b64\u5916\uff0c\u5185\u8054\u51fd\u6570\u4e0e\u975e\u5185\u8054\u51fd\u6570\u8fd8\u6709\u4e00\u4e2a\u91cd\u8981\u533a\u522b\uff0c\u5185\u8054\u51fd\u6570\u6240\u5f15\u7528\u7684 Lambda \u8868\u8fbe\u5f0f\u4e2d\u53ef\u4ee5\u4f7f\u7528 return \u5173\u952e\u5b57\u6765\u8fdb\u884c\u51fd\u6570\u8fd4\u56de\uff0c\u800c\u975e\u5185\u8054\u51fd\u6570\u53ea\u80fd\u8fdb\u884c\u5c40\u90e8\u8fd4\u56de\uff0c\u6211\u4eec\u6765\u770b\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a // main() <== printString() <== lambda fun printString ( str : String , block : ( String ) -> Unit ){ println ( \"printString start\" ) block ( str ) println ( \"printString end\" ) } fun main (){ println ( \"main start\" ) printString ( \"\" ){ s -> println ( \"lambda start\" ) /** * \u975e\u5185\u8054\u51fd\u6570\u6240\u5f15\u7528\u7684 lambda \u8868\u8fbe\u5f0f\u4e2d\u4e0d\u5141\u8bb8\u76f4\u63a5\u4f7f\u7528 return \u5173\u952e\u5b57\u7684\uff0c * \u8fd9\u91cc\u4f7f\u7528 return@printString \u7684\u5199\u6cd5\uff0c\u8868\u793a\u5c40\u90e8\u8fd4\u56de\uff0c * \u4e0d\u518d\u6267\u884c lambda \u8868\u8fbe\u5f0f\u7684\u5269\u4f59\u90e8\u5206\u4ee3\u7801 */ if ( s . isEmpty ()) return @printString println ( s ) println ( \"lambda end\" ) } println ( \"main end\" ) } // \u7ed3\u679c main start printString start lambda start printString end main end \u5982\u679c\u5c06 printString() \u58f0\u660e\u6210\u4e00\u4e2a\u5185\u8054\u51fd\u6570\uff0c\u7ed3\u679c\u53c8\u4f1a\u662f\u600e\u4e48\u6837\u5462\uff1f inline fun printString ( str : String , block : ( String ) -> Unit ){ println ( \"printString start\" ) block ( str ) println ( \"printString end\" ) } fun main (){ println ( \"main start\" ) printString ( \"\" ){ s -> println ( \"lambda start\" ) if ( s . isEmpty ()) return println ( s ) println ( \"lambda end\" ) } println ( \"main end\" ) } // \u7ed3\u679c main start printString start lambda start \u5c06 printString() \u58f0\u660e\u4e3a\u5185\u8054\u51fd\u6570\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 Lambda \u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528 return \u5173\u952e\u5b57\u4e86\uff0c\u6b64\u65f6\u7684 return \u4ee3\u8868\u7684\u662f\u8fd4\u56de\u8fd4\u56de\u5916\u5c42\u8c03\u7528\u7684\u51fd\u6570\uff0c\u4e5f\u5c31\u662f main() \u51fd\u6570\u3002","title":"noinline"},{"location":"Kotlin/%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/#crossinline","text":"\u5c06\u9ad8\u9636\u51fd\u6570\u58f0\u660e\u6210\u5185\u8054\u51fd\u6570\u662f\u4e00\u79cd\u826f\u597d\u7684\u7f16\u7a0b\u4e60\u60ef\u3002\u7edd\u5927\u591a\u6570\u7684\u9ad8\u9636\u51fd\u6570\u662f\u53ef\u4ee5\u76f4\u63a5\u58f0\u660e\u4e3a\u5185\u8054\u51fd\u6570\u7684\uff0c\u4f46\u4e5f\u6709\u5c11\u90e8\u5206\u4f8b\u5916\u60c5\u51b5\uff1a inline fun runRunnable ( block : () -> Unit ){ val runnable = Runnable { block () } runnable . run () } \u8fd9\u4e2a\u51fd\u6570\u5982\u679c\u58f0\u660e\u4e3a\u5185\u8054\u51fd\u6570\uff0c\u90a3\u4e48\u5c31\u4f1a\u62a5\u9519 Can\u2018t inline 'block' here. \u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u58f0\u660e\u4e3a\u5185\u8054\u51fd\u6570\u5c31\u62a5\u9519\u5462\uff1f\u9996\u5148\uff0c\u5728 runRunnable() \u51fd\u6570\u4e2d\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a Runnable \u5bf9\u8c61\uff0c\u5e76\u5728 Runnable \u7684 Lambda \u8868\u8fbe\u5f0f\u4e2d\u8c03\u7528\u4e86\u4f20\u5165\u7684\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u3002 Runnable \u7684 Lambda \u8868\u8fbe\u5f0f\u5728\u7f16\u8bd1\u65f6\u4f1a\u88ab\u8f6c\u6362\u4e3a\u533f\u540d\u7c7b\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0a\u8ff0\u4ee3\u7801\u5b9e\u9645\u4e0a\u662f\u5728\u533f\u540d\u7c7b\u4e2d\u8c03\u7528\u4e86\u4f20\u5165\u7684\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u3002 \u5185\u8054\u51fd\u6570\u6240\u5f15\u7528\u7684 Lambda \u8868\u8fbe\u5f0f\uff08block\uff09\u662f\u5141\u8bb8\u4f7f\u7528 return \u5173\u952e\u5b57\u8fdb\u884c\u51fd\u6570\u8fd4\u56de\u7684\uff0c\u4f46\u7531\u4e8e\u6211\u4eec\u662f\u5728\u533f\u540d\u7c7b\u4e2d\u8c03\u7528\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff0c\u6b64\u65f6\u662f\u4e0d\u53ef\u80fd\u8fdb\u884c\u5916\u5c42\u8c03\u7528\u51fd\u6570\u8fd4\u56de\u7684\uff0c\u6700\u591a\u53ea\u80fd\u5bf9\u533f\u540d\u7c7b\u4e2d\u7684\u51fd\u6570\u8c03\u7528\u8fdb\u884c\u8fd4\u56de\uff0c\u56e0\u6b64\u8fd9\u91cc\u5c31\u51fa\u73b0\u4e86\u62a5\u9519\u3002 main() <== runRunnable() <=xx= \u533f\u540d\u7c7bRunnable <== lambda (return) \u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u5728\u5185\u8054\u7684\u9ad8\u9636\u51fd\u6570\u4e2d\u521b\u5efa\u4e86\u53e6\u5916\u7684 Lambda \u6216\u8005\u533f\u540d\u7c7b\u7684\u5b9e\u73b0\uff0c\u5e76\u4e14\u5728\u8fd9\u4e9b\u5b9e\u73b0\u4e2d\u8c03\u7528\u4e86\u51fd\u6570\u7c7b\u578b\u53c2\u6570\uff0c\u5c31\u4f1a\u62a5\u9519\u3002 \u6709\u6ca1\u6709\u89e3\u51b3\u529e\u6cd5\uff1f\u7b54\u6848\u662f\u6709\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528 crossinline \u5173\u952e\u5b57\u3002 inline fun runRunnable ( crossinline block : () -> Unit ) { val runnable = Runnable { block () } runnable . run () } \u8fd9\u4e2a crossinline \u662f\u5565\uff0c\u4e3a\u4ec0\u4e48\u52a0\u4e0a\u5b83\u5c31\u80fd\u89e3\u51b3\u62a5\u9519\uff1f\u6839\u636e\u524d\u9762\u7684\u5206\u6790\uff0c\u4e4b\u6240\u4ee5\u4f1a\u62a5\u9519\uff0c\u662f\u56e0\u4e3a\u5185\u8054\u51fd\u6570\u7684 Lambda \u8868\u8fbe\u5f0f\uff08block\uff09\u4e2d\u5141\u8bb8\u4f7f\u7528 return \u5173\u952e\u5b57\uff0c\u800c\u9ad8\u9636\u51fd\u6570\u7684\u533f\u540d\u7c7b\u5b9e\u73b0\u4e2d\u4e0d\u5141\u8bb8\u4f7f\u7528 return \u5173\u952e\u5b57\uff0c\u4e8c\u8005\u4e4b\u95f4\u9020\u6210\u51b2\u7a81\u3002crossinline \u5c31\u50cf\u4e00\u4efd\u9532\u7ea6\uff0c\u4fdd\u8bc1\u5728\u5185\u8054\u51fd\u6570\u5f15\u7528\u7684 Lambda \u8868\u8fbe\u5f0f\u4e2d\u4e00\u5b9a\u4e0d\u4f1a\u5305\u542b return \u5173\u952e\u5b57\uff0c\u51b2\u7a81\u5c31\u4e0d\u5b58\u5728\u4e86\u3002 \u58f0\u660e\u4e86 crossinline \u540e\uff0c\u6211\u4eec\u65e0\u6cd5\u5728\u8c03\u7528 runRunnable \u7684 Lambda \u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528 return \u5173\u952e\u5b57\u8fdb\u884c\u8fd4\u56de\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u4f7f\u7528 return@runRunnable \u7684\u5199\u6cd5\u8fdb\u884c\u5c40\u90e8\u8fd4\u56de\u3002","title":"crossinline"},{"location":"Kotlin/%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0%E7%9A%84%E5%BA%94%E7%94%A8/","text":"\u9ad8\u9636\u51fd\u6570\u7684\u5e94\u7528 \u00b6 \u7b80\u5316 SharePreferences \u7684\u7528\u6cd5 \u00b6 \u5411 SharePreferences \u4e2d\u5b58\u50a8\u6570\u636e\u7684\u8fc7\u7a0b\u5927\u81f4\u5982\u4e0b\uff1a \u8c03\u7528 SharePreferences.edit() \u83b7\u53d6 SharePreferences.Editor \u5bf9\u8c61\uff1b \u5411 SharePreferences.Editor \u4e2d\u6dfb\u52a0\u6570\u636e\uff1b \u8c03\u7528 apply() \u63d0\u4ea4\u6570\u636e\u3002 \u5229\u7528\u9ad8\u9636\u51fd\u6570\u7b80\u5316 SharePreferences \u7684\u7528\u6cd5\uff1a fun SharePreferences . open ( block : SharePreferences . Editor .() -> Unit ) { val editor = edit () editor . block () editor . apply () } \u7531\u4e8e open \u662f SharePreferences \u7684\u62d3\u5c55\u51fd\u6570\uff0c\u6240\u4ee5\u51fd\u6570\u4f53\u5185\u62e5\u6709 SharePreferences \u7684\u4e0a\u4e0b\u6587\uff0c\u6240\u4ee5\u76f4\u63a5\u8c03\u7528 edit() \u6765\u83b7\u53d6 SharePreferences.Editor \u5bf9\u8c61\u3002\u53e6\u5916\uff0c\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u5b9a\u4e49\u5728 SharePreferences.Editor \u4e2d\uff0c\u6240\u4ee5\u4f7f\u7528 editor.block() \u6765\u5bf9\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u8fdb\u884c\u8c03\u7528\uff08\u56e0\u4e3a editor \u5c31\u662f SharePreferences.Editor \u7684\u5b9e\u4f8b\uff09\uff0c\u6700\u540e\u8c03\u7528 editor.apply() \u63d0\u4ea4\u6570\u636e\u3002 \u7b80\u5316 ContentValues \u7684\u7528\u6cd5 \u00b6 \u5148\u56de\u987e\u4e00\u4e0b ContentValues \u7684\u57fa\u672c\u7528\u6cd5\uff1a val value = ContentValues () values . put ( \"name\" , \"Jack\" ) values . put ( \"age\" , 19 ) values . put ( \"phone\" , \"13800138000\" ) \u662f\u7684\uff0c\u8fd9\u6bb5\u4ee3\u7801\u53ef\u4ee5\u4f7f\u7528 apply \u51fd\u6570\u7b80\u5316\uff0c\u4e0d\u8fc7\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u505a\u5f97\u66f4\u597d\u3002 \u5728\u5f00\u59cb\u524d\uff0c\u6211\u4eec\u8981\u56de\u987e\u4e00\u4e0b mapOf() \u7684\u4f5c\u7528\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u4f7f\u7528 \"age\" to 18 \u8fd9\u6837\u7684\u8bed\u6cd5\u5feb\u901f\u521b\u5efa\u4e00\u4e2a\u952e\u503c\u5bf9\u3002Kotlin \u4e2d A to B \u8fd9\u6837\u7684\u8bed\u6cd5\u7ed3\u6784\u4f1a\u521b\u5efa\u4e00\u4e2a Pair \u5bf9\u8c61\u3002 fun cvOf ( vararg pairs : Pair < String , Any? > ) = ContentValues (). apply { for ( pair in pairs ){ val key = pair . first val value = pair . second when ( value ) { is Int -> put ( key , value ) is Long -> put ( key , value ) is Short -> put ( key , value ) is Float -> put ( key , value ) is Double -> put ( key , value ) is Boolean -> put ( key , value ) is String -> put ( key , value ) is Byte -> put ( key , value ) is ByteArray -> put ( key , value ) null -> put ( key ) } } } fun main (){ val values = cvOf ( \"name\" to \"Jack\" , \"age\" to Int , \"phone\" to \"13800138000\" ) } ContentValues \u7684\u6240\u6709\u952e\u90fd\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u6240\u6709\u8fd9\u91cc\u5c06 Pair \u952e\u7684\u6cdb\u578b\u6307\u5b9a\u4e3a String\uff0c\u4e0d\u8fc7 ContentValues \u7684\u503c\u6709\u591a\u79cd\u7c7b\u578b\uff0c\u6240\u4ee5\u5c06 Pair \u503c\u7684\u6cdb\u578b\u6307\u5b9a\u4e3a Any? \uff0cAny \u662f Kotlin \u4e2d\u6240\u6709\u7c7b\u7684\u57fa\u7c7b\uff0c\u76f8\u5f53\u4e8e Java \u4e2d\u7684 Object\u3002 cvOf() \u65b9\u6cd5\u7684\u6838\u5fc3\u601d\u8def\u5c31\u662f\u5148\u521b\u5efa\u4e00\u4e2a ContentValues \u5bf9\u8c61\uff0c\u7136\u540e\u904d\u5386 pairs \u53c2\u6570\u5217\u8868\uff0c\u53d6\u51fa\u6570\u636e\u5e76\u586b\u88c5\u5230 ContentValues \u4e2d\u5e76\u8fd4\u56de\u3002 \u56e0\u4e3a Pair \u53c2\u6570\u7684\u503c\u662f Any? \u7c7b\u578b\uff0c\u60f3\u8981\u8ba9\u5b83\u4e0e ContentValues \u6240\u652f\u6301\u7684\u6570\u636e\u7c7b\u578b\u5bf9\u5e94\u8d77\u6765\uff0c\u53ea\u80fd\u7528 when \u8bed\u53e5\u4e00\u4e00\u8fdb\u884c\u5224\u65ad\u5e76\u8986\u76d6 ContentValues \u6240\u652f\u6301\u7684\u6240\u6709\u6570\u636e\u7c7b\u578b\u3002 \u8fd9\u91cc\u8fd8\u4f7f\u7528\u4e86 Kotlin \u7684 Smart Cast \u529f\u80fd\uff0c\u6bd4\u5982 when \u8bed\u53e5\u8fdb\u5165 Int \u5206\u652f\u540e\uff0c\u8fd9\u4e2a\u6761\u4ef6\u4e0b\u7684 value \u4f1a\u88ab\u81ea\u52a8\u8f6c\u6362\u6210 Int \u7c7b\u578b\uff0c\u800c\u4e0d\u518d\u662f Any? \uff0c\u514d\u53bb\u4e86\u50cf Java\u4e2d\u90a3\u6837\u518d\u989d\u5916\u8fdb\u884c\u4e00\u6b21\u5411\u4e0b\u8f6c\u578b\u3002","title":"\u9ad8\u9636\u51fd\u6570\u7684\u5e94\u7528"},{"location":"Kotlin/%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0%E7%9A%84%E5%BA%94%E7%94%A8/#_1","text":"","title":"\u9ad8\u9636\u51fd\u6570\u7684\u5e94\u7528"},{"location":"Kotlin/%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0%E7%9A%84%E5%BA%94%E7%94%A8/#sharepreferences","text":"\u5411 SharePreferences \u4e2d\u5b58\u50a8\u6570\u636e\u7684\u8fc7\u7a0b\u5927\u81f4\u5982\u4e0b\uff1a \u8c03\u7528 SharePreferences.edit() \u83b7\u53d6 SharePreferences.Editor \u5bf9\u8c61\uff1b \u5411 SharePreferences.Editor \u4e2d\u6dfb\u52a0\u6570\u636e\uff1b \u8c03\u7528 apply() \u63d0\u4ea4\u6570\u636e\u3002 \u5229\u7528\u9ad8\u9636\u51fd\u6570\u7b80\u5316 SharePreferences \u7684\u7528\u6cd5\uff1a fun SharePreferences . open ( block : SharePreferences . Editor .() -> Unit ) { val editor = edit () editor . block () editor . apply () } \u7531\u4e8e open \u662f SharePreferences \u7684\u62d3\u5c55\u51fd\u6570\uff0c\u6240\u4ee5\u51fd\u6570\u4f53\u5185\u62e5\u6709 SharePreferences \u7684\u4e0a\u4e0b\u6587\uff0c\u6240\u4ee5\u76f4\u63a5\u8c03\u7528 edit() \u6765\u83b7\u53d6 SharePreferences.Editor \u5bf9\u8c61\u3002\u53e6\u5916\uff0c\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u5b9a\u4e49\u5728 SharePreferences.Editor \u4e2d\uff0c\u6240\u4ee5\u4f7f\u7528 editor.block() \u6765\u5bf9\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u8fdb\u884c\u8c03\u7528\uff08\u56e0\u4e3a editor \u5c31\u662f SharePreferences.Editor \u7684\u5b9e\u4f8b\uff09\uff0c\u6700\u540e\u8c03\u7528 editor.apply() \u63d0\u4ea4\u6570\u636e\u3002","title":"\u7b80\u5316 SharePreferences \u7684\u7528\u6cd5"},{"location":"Kotlin/%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0%E7%9A%84%E5%BA%94%E7%94%A8/#contentvalues","text":"\u5148\u56de\u987e\u4e00\u4e0b ContentValues \u7684\u57fa\u672c\u7528\u6cd5\uff1a val value = ContentValues () values . put ( \"name\" , \"Jack\" ) values . put ( \"age\" , 19 ) values . put ( \"phone\" , \"13800138000\" ) \u662f\u7684\uff0c\u8fd9\u6bb5\u4ee3\u7801\u53ef\u4ee5\u4f7f\u7528 apply \u51fd\u6570\u7b80\u5316\uff0c\u4e0d\u8fc7\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u505a\u5f97\u66f4\u597d\u3002 \u5728\u5f00\u59cb\u524d\uff0c\u6211\u4eec\u8981\u56de\u987e\u4e00\u4e0b mapOf() \u7684\u4f5c\u7528\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u4f7f\u7528 \"age\" to 18 \u8fd9\u6837\u7684\u8bed\u6cd5\u5feb\u901f\u521b\u5efa\u4e00\u4e2a\u952e\u503c\u5bf9\u3002Kotlin \u4e2d A to B \u8fd9\u6837\u7684\u8bed\u6cd5\u7ed3\u6784\u4f1a\u521b\u5efa\u4e00\u4e2a Pair \u5bf9\u8c61\u3002 fun cvOf ( vararg pairs : Pair < String , Any? > ) = ContentValues (). apply { for ( pair in pairs ){ val key = pair . first val value = pair . second when ( value ) { is Int -> put ( key , value ) is Long -> put ( key , value ) is Short -> put ( key , value ) is Float -> put ( key , value ) is Double -> put ( key , value ) is Boolean -> put ( key , value ) is String -> put ( key , value ) is Byte -> put ( key , value ) is ByteArray -> put ( key , value ) null -> put ( key ) } } } fun main (){ val values = cvOf ( \"name\" to \"Jack\" , \"age\" to Int , \"phone\" to \"13800138000\" ) } ContentValues \u7684\u6240\u6709\u952e\u90fd\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u6240\u6709\u8fd9\u91cc\u5c06 Pair \u952e\u7684\u6cdb\u578b\u6307\u5b9a\u4e3a String\uff0c\u4e0d\u8fc7 ContentValues \u7684\u503c\u6709\u591a\u79cd\u7c7b\u578b\uff0c\u6240\u4ee5\u5c06 Pair \u503c\u7684\u6cdb\u578b\u6307\u5b9a\u4e3a Any? \uff0cAny \u662f Kotlin \u4e2d\u6240\u6709\u7c7b\u7684\u57fa\u7c7b\uff0c\u76f8\u5f53\u4e8e Java \u4e2d\u7684 Object\u3002 cvOf() \u65b9\u6cd5\u7684\u6838\u5fc3\u601d\u8def\u5c31\u662f\u5148\u521b\u5efa\u4e00\u4e2a ContentValues \u5bf9\u8c61\uff0c\u7136\u540e\u904d\u5386 pairs \u53c2\u6570\u5217\u8868\uff0c\u53d6\u51fa\u6570\u636e\u5e76\u586b\u88c5\u5230 ContentValues \u4e2d\u5e76\u8fd4\u56de\u3002 \u56e0\u4e3a Pair \u53c2\u6570\u7684\u503c\u662f Any? \u7c7b\u578b\uff0c\u60f3\u8981\u8ba9\u5b83\u4e0e ContentValues \u6240\u652f\u6301\u7684\u6570\u636e\u7c7b\u578b\u5bf9\u5e94\u8d77\u6765\uff0c\u53ea\u80fd\u7528 when \u8bed\u53e5\u4e00\u4e00\u8fdb\u884c\u5224\u65ad\u5e76\u8986\u76d6 ContentValues \u6240\u652f\u6301\u7684\u6240\u6709\u6570\u636e\u7c7b\u578b\u3002 \u8fd9\u91cc\u8fd8\u4f7f\u7528\u4e86 Kotlin \u7684 Smart Cast \u529f\u80fd\uff0c\u6bd4\u5982 when \u8bed\u53e5\u8fdb\u5165 Int \u5206\u652f\u540e\uff0c\u8fd9\u4e2a\u6761\u4ef6\u4e0b\u7684 value \u4f1a\u88ab\u81ea\u52a8\u8f6c\u6362\u6210 Int \u7c7b\u578b\uff0c\u800c\u4e0d\u518d\u662f Any? \uff0c\u514d\u53bb\u4e86\u50cf Java\u4e2d\u90a3\u6837\u518d\u989d\u5916\u8fdb\u884c\u4e00\u6b21\u5411\u4e0b\u8f6c\u578b\u3002","title":"\u7b80\u5316 ContentValues \u7684\u7528\u6cd5"}]}